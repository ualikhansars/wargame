!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=129)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(42);t.MAP_HEIGHT=r.MAP_HEIGHT,t.MAP_WIDTH=r.MAP_WIDTH,t.CANVAS_HEIGHT=r.CANVAS_HEIGHT,t.gridSize=r.gridSize;var i=n(134);t.mainMenuMode=i.mainMenuMode,t.setBattleMode=i.setBattleMode,t.setMainMenuMode=i.setMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(140);t.loadImage=r.loadImage;var i=n(5);t.getNodeFromMap=i.getNodeFromMap,t.getDistanceBetweenUnitAndNodeInGrids=i.getDistanceBetweenUnitAndNodeInGrids,t.getDistanceBetweenTwoNodesInGrids=i.getDistanceBetweenTwoNodesInGrids,t.addNodeIntoArray=i.addNodeIntoArray,t.getNodeFromArray=i.getNodeFromArray,t.getMinValueFromNodes=i.getMinValueFromNodes,t.getMaxValueFromNodes=i.getMaxValueFromNodes;var o=n(68);t.deleteObjectFromArray=o.deleteObjectFromArray,t.isObjectInArray=o.isObjectInArray,t.isObjectEmpty=o.isObjectEmpty;var a=n(172);t.addUnitIntoArray=a.addUnitIntoArray,t.anotherUnitIsOnTheWay=a.anotherUnitIsOnTheWay,t.deleteUnitFromArray=a.deleteUnitFromArray,t.deleteUnitFromArmy=a.deleteUnitFromArmy,t.getDistanceBetweenTwoUnitsInGrids=a.getDistanceBetweenTwoUnitsInGrids,t.getUnitsMinProperty=a.getUnitsMinProperty,t.getUnitsMaxProperty=a.getUnitsMaxProperty,t.isUnitInArray=a.isUnitInArray;var s=n(29);t.getSurroundedNodes=s.getSurroundedNodes,t.getSurroundedEnemies=s.getSurroundedEnemies;var l=n(178);t.drawBackground=l.drawBackground,t.drawObstacle=l.drawObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(27);t.ctx=r.ctx,t.auxiliaryCtx=r.auxiliaryCtx,t.backgroundCtx=r.backgroundCtx,t.dragAndDropCanvasCtx=r.dragAndDropCanvasCtx,t.mainMenuCtx=r.mainMenuCtx,t.terrainCtx=r.terrainCtx},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(8);t.units=[],t.playerUnits=[],t.computerUnits=[],t.addToUnits=function(e){if(e){if(r.isUnitInArray(e,t.units))throw new Error("unit is already added");if("computer"===e.controlBy)t.addToComputerUnits(e),t.units.push(e);else{if("player"!==e.controlBy)throw new Error("Undefined unit control");t.addToPlayerUnits(e),t.units.push(e)}}},t.addToComputerUnits=function(e){e&&(r.isUnitInArray(e,t.computerUnits)||"computer"===e.controlBy&&t.computerUnits.push(e))},t.addToPlayerUnits=function(e){e&&(r.isUnitInArray(e,t.playerUnits)||"player"===e.controlBy&&t.playerUnits.push(e))},t.removeFromUnits=function(e){e&&(t.units=i.deleteUnitFromArray(e,t.units),"computer"===e.controlBy?t.removeFromComputerUnits(e):"player"===e.controlBy&&t.removeFromPlayerUnits(e))},t.removeFromPlayerUnits=function(e){e&&"player"===e.controlBy&&(t.playerUnits=i.deleteUnitFromArray(e,t.playerUnits))},t.removeFromComputerUnits=function(e){e&&"computer"===e.controlBy&&(t.computerUnits=i.deleteUnitFromArray(e,t.computerUnits))},t.removeAllComputerUnits=function(){t.computerUnits=[]},t.removeAllPlayerUnits=function(){t.playerUnits=[]},t.removeAllUnits=function(){t.removeAllComputerUnits(),t.removeAllPlayerUnits(),t.units=[]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(256);t.decreaseSpentGold=r.decreaseSpentGold,t.increaseSpentGold=r.increaseSpentGold,t.setTotalGold=r.setTotalGold;var i=n(107);t.armyLayoutHeight=i.armyLayoutHeight,t.armyLayoutWidth=i.armyLayoutWidth,t.infoLayoutHeight=i.infoLayoutHeight,t.infoLayoutWidth=i.infoLayoutWidth,t.unitRosterHeight=i.unitRosterHeight,t.unitRosterWidth=i.unitRosterWidth,t.startBattleStartY=i.startBattleStartY,t.startBattleHeight=i.startBattleHeight,t.startBattleWidth=i.startBattleWidth,t.titleHeight=i.titleHeight;var o=n(266);t.changeBattleSettingsToTrue=o.changeBattleSettingsToTrue,t.changeUnitInfoToTrue=o.changeUnitInfoToTrue,t.showBattleSettings=o.showBattleSettings,t.showUnitInfo=o.showUnitInfo;var a=n(267);t.changeToComputer=a.changeToComputer,t.changeToPlayer=a.changeToPlayer,t.side=a.side;var s=n(268);t.disableStartBattleButton=s.disableStartBattleButton,t.enableStartBattleButton=s.enableStartBattleButton,t.startBattleAvailable=s.startBattleAvailable;var l=n(269);t.changeHoveredUnit=l.changeHoveredUnit,t.hoveredUnit=l.hoveredUnit,t.computerHasUnits=l.computerHasUnits,t.playerHasUnits=l.playerHasUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(141);t.addNodeIntoArray=r.addNodeIntoArray;var i=n(144);t.getDistanceBetweenUnitAndNodeInGrids=i.getDistanceBetweenUnitAndNodeInGrids,t.getDistanceBetweenTwoNodesInGrids=i.getDistanceBetweenTwoNodesInGrids;var o=n(146);t.getNodeFromArray=o.getNodeFromArray,t.getNodeFromMap=o.getNodeFromMap,t.getMinValueFromNodes=o.getMinValueFromNodes,t.getMaxValueFromNodes=o.getMaxValueFromNodes;var a=n(165);t.getRandomNode=a.getRandomNode;var s=n(71);t.shuffleNodes=s.shuffleNodes;var l=n(168);t.getSurroundedBlockedNodes=l.getSurroundedBlockedNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1),o=n(8),a=n(183),s=function(){function e(e,t,n,o){void 0===o&&(o="player"),this.radius=a.radius,this.isCurrentlyChosen=!1,this.imgSrc="./src/img/units/pikemen.jpg",this.isMoving=!1,this.isVisible=!1,this.unitToPursue=null,this.isFighting=!1,this.figthAgainst={front:{},flank:[],rear:{},all:[]},this.health=100,this.speed=10,this.armour=1,this.range=0,this.mobility=1,this.meleeDamage=1,this.missileDamage=0,this.shotsRemained=0,this.charge=2,this.discipline=5,this.weight=0,this.visibility=5,this.morale=100,this.condition=100,this.baseNode={},this.isUnitUnderProtection=!1,this.isUnitNeedHelp=!1,this.beCloseTo=[],this.frozen=!1,this.id=e,this.x=t,this.y=n,this.centerX=t+r.gridSize/2,this.centerY=n+r.gridSize/2,this.controlBy=o,this.currentNode=i.getNodeFromMap(t,n),this.nextNode=i.getNodeFromMap(t,n)}return e.prototype.setX=function(e){this.x=e,this.centerX=e+r.gridSize/2},e.prototype.setY=function(e){this.y=e,this.centerY=e+r.gridSize/2},e.prototype.setIsMovingToFalse=function(){this.isMoving=!1},e.prototype.setIsMovingToTrue=function(){this.isMoving=!0},e.prototype.setUnitToPursue=function(e){this.unitToPursue=e},e.prototype.setUnitToPursueToNull=function(){this.unitToPursue=null},e.prototype.setIsFightingToTrue=function(){this.isFighting=!0},e.prototype.setIsFightingToFalse=function(){this.isFighting=!1},e.prototype.assignMoveToPosition=function(e,t){var n=i.getNodeFromMap(e,t);n&&(this.moveToNode=n)},e.prototype.removeEnemyFromFlank=function(e){for(var t=0;t<this.figthAgainst.flank.length;++t)this.figthAgainst.flank[t].id===e.id&&(this.figthAgainst.flank=o.deleteUnitFromArray(e,this.figthAgainst.flank))},e.prototype.increaseCondition=function(e){this.condition<100&&(this.condition+=e)},e.prototype.decreaseCondition=function(e){this.condition>0&&(this.condition-=e)},e.prototype.setCurrentNode=function(e){var t=i.getNodeFromMap(e.x,e.y);t&&(this.currentNode=t)},e.prototype.setNextNode=function(e){var t=i.getNodeFromMap(e.x,e.y);t&&(this.nextNode=t)},e.prototype.assignEnemy=function(e){if(i.isObjectEmpty(this.figthAgainst.front))this.figthAgainst.front=e;else{var t=this.figthAgainst.front.currentNode,n=e.currentNode,a=this.currentNode,s=(a.x-t.x)/r.gridSize,l=(a.y-t.y)/r.gridSize,u=(a.x-n.x)/r.gridSize,c=(a.y-n.y)/r.gridSize;s===-u&&l===-c?this.figthAgainst.rear=e:s===u&&l===-c?this.figthAgainst.rear=e:s===-u&&l===c?this.figthAgainst.rear=e:this.figthAgainst.flank.push(e)}o.isUnitInArray(e,this.figthAgainst.all)||this.figthAgainst.all.push(e),this.isFighting=!0},e.prototype.increaseWeightInPercentage=function(e){var t=this.weight+this.weight*(.01*e);t<0?t=0:t>100&&(t=100),this.weight=Math.round(t)},e.prototype.removeEnemyFromFightAgainst=function(e){if(e.id===this.figthAgainst.front.id)this.figthAgainst.front={},this.arrangeFightAgainst();else if(e.id===this.figthAgainst.rear.id)this.figthAgainst.rear={};else if(0!==this.figthAgainst.flank.length)for(var t=0,n=this.figthAgainst.flank;t<n.length;t++){n[t].id===e.id&&this.removeEnemyFromFlank(e)}this.figthAgainst.all=o.deleteUnitFromArray(e,this.figthAgainst.all),0===this.figthAgainst.all.length&&(this.isFighting=!1)},e.prototype.arrangeFightAgainst=function(){var e=Object.assign([],this.figthAgainst.flank),t=Object.assign({},this.figthAgainst.rear);if(this.figthAgainst.flank=[],this.figthAgainst.rear={},e.length>0)for(var n=0,r=e;n<r.length;n++){var o=r[n];this.assignEnemy(o)}i.isObjectEmpty(t)||this.assignEnemy(t)},e.prototype.clearFightAgainst=function(){this.figthAgainst.front={},this.figthAgainst.rear={},this.figthAgainst.flank=[],this.figthAgainst.all=[],this.isFighting=!1},e.prototype.assignTask=function(e){if("exploration"===e)this.task=e;else if("protection"===e)this.task=e;else if("patrol"===e)this.task=e;else{if("holdPosition"!==e)throw new Error("Cannot assign task for unit "+this.name);this.task=e}console.error(" new task for unit",this.name,"is",e)},e.prototype.clearTask=function(){this.task=""},e.prototype.setIsUnitUnderProtectionToTrue=function(){this.isUnitUnderProtection=!0},e.prototype.setIsUnitUnderProtectionToFalse=function(){this.isUnitUnderProtection=!1},e.prototype.assignUnitToProtect=function(e){this.unitToProtect=e},e.prototype.clearUnitToProtect=function(){this.unitToProtect=null},e.prototype.setIsUnitNeedHelpToTrue=function(){this.isUnitNeedHelp=!0},e.prototype.setIsUnitNeedHelpToFalse=function(){this.isUnitNeedHelp=!1},e.prototype.assignUnitToHelp=function(e){this.unitToHelp=e},e.prototype.clearUnitToHelp=function(){this.unitToHelp=null},e.prototype.assignBaseNode=function(e){e&&(this.baseNode=e)},e.prototype.removeBaseNode=function(){this.baseNode={}},e.prototype.setCommandNumber=function(e){this.commandNumber=e},e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.side="player",t.changeToPlayer=function(){t.side="player"},t.changeToComputer=function(){t.side="computer"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(72);t.addUnitIntoArray=r.addUnitIntoArray,t.deleteUnitFromArray=r.deleteUnitFromArray,t.deleteUnitFromArmy=r.deleteUnitFromArmy,t.getDistanceBetweenTwoUnitsInGrids=r.getDistanceBetweenTwoUnitsInGrids,t.getUnitById=r.getUnitById,t.isUnitInArray=r.isUnitInArray},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.visibleForPlayerUnits=[],t.visibleForComputerUnits=[],t.addUnitIntoVisibleUnits=function(e){"player"===e.controlBy?r.isObjectInArray(e,t.visibleForComputerUnits)||t.visibleForComputerUnits.push(e):"computer"===e.controlBy&&(r.isObjectInArray(e,t.visibleForPlayerUnits)||t.visibleForPlayerUnits.push(e))},t.removeUnitFromVisibleUnits=function(e){"player"===e.controlBy?r.isObjectInArray(e,t.visibleForComputerUnits)&&(t.visibleForComputerUnits=r.deleteObjectFromArray(e,t.visibleForComputerUnits)):"computer"===e.controlBy&&r.isObjectInArray(e,t.visibleForPlayerUnits)&&(t.visibleForPlayerUnits=r.deleteObjectFromArray(e,t.visibleForPlayerUnits))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(20),i=n(70);t.initialMap=[],t.searchMap={},t.createMap=function(){return new Promise(function(e){t.initialMap=r.createNodes(),e()})},t.initializeSearchMap=function(e){return new Promise(function(n){t.searchMap=i.createSearchMap(e),n()})},t.addObstaclesToMap=function(){return new Promise(function(e){t.initialMap=r.createObstacles(120,220,120,160,"river"),t.initialMap=r.createObstacles(640,800,160,160,"river"),t.initialMap=r.createObstacles(880,1120,160,160,"river"),t.initialMap=r.createOneObstacle(t.initialMap,320,280,"mountain"),t.initialMap=r.createObstacles(240,340,320,360,"mountain"),t.initialMap=r.createObstacles(480,580,400,440,"forest"),t.initialMap=r.createObstacles(960,1e3,360,400,"forest"),t.initialMap=r.createObstacles(920,1e3,400,440,"forest"),e()})},t.initializeMap=function(){return new Promise(function(e){console.error("initializeMap"),t.createMap().then(function(){return t.addObstaclesToMap()}).then(function(){r.addNeighbors(t.initialMap).then(function(){return t.initializeSearchMap(t.initialMap).then(function(){e()})})})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(73);t.onChooseUnit=r.onChooseUnit,t.chooseUnitType=r.chooseUnitType;var i=n(195);t.createUnit=i.createUnit;var o=n(79);t.drawUnit=o.drawUnit,t.redrawUnits=o.redrawUnits;var a=n(196);t.armourPenetration=a.armourPenetration,t.checkAttackSide=a.checkAttackSide,t.charge=a.charge,t.calculateCharge=a.calculateCharge,t.calculateDamage=a.calculateDamage,t.calculateDamageBaseOnEnemyPosition=a.calculateDamageBaseOnEnemyPosition,t.calculateDamageWhenItsLessThanOne=a.calculateDamageWhenItsLessThanOne,t.removeUnitFromEnemiesFightAgainst=a.removeUnitFromEnemiesFightAgainst,t.findUnitInFightAgainst=a.findUnitInFightAgainst,t.isUnitFighting=a.isUnitFighting,t.checkHealth=a.checkHealth,t.meleeAttack=a.meleeAttack,t.meleeCombat=a.meleeCombat,t.refreshment=a.refreshment;var s=n(23);t.updateUnit=s.updateUnit,t.pursueUnit=s.pursueUnit;var l=n(218);t.spotEnemy=l.spotEnemy,t.isUnitSpottedByEnemy=l.isUnitSpottedByEnemy,t.spotUnits=l.spotUnits;var u=n(74);t.Archers=u.Archers,t.HeavyInfantry=u.HeavyInfantry,t.HeavyCavalry=u.HeavyCavalry,t.Hoplites=u.Hoplites,t.LightInfantry=u.LightInfantry,t.LightCavalry=u.LightCavalry,t.Militia=u.Militia,t.Peltasts=u.Peltasts,t.Pikemen=u.Pikemen,t.Scouts=u.Scouts,t.Unit=u.Unit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(131);t.auxiliaryCanvas=r.auxiliaryCanvas;var i=n(135);t.backgroundCanvas=i.backgroundCanvas;var o=n(136);t.canvas=o.canvas;var a=n(137);t.terrain=a.terrain;var s=n(138);t.dragAndDropCanvas=s.dragAndDropCanvas;var l=n(139);t.mainMenu=l.mainMenu},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.quantity=0,this.totalHealth=0,this.totalSpeed=0,this.totalArmour=0,this.totalMeleeDamage=0,this.totalMissileDamage=0,this.totalDiscipline=0,this.totalMorale=0,this.totalCondition=0}return e.prototype.incrementQuantity=function(){this.quantity+=1},e.prototype.decrementQuantity=function(){this.quantity-=1},e.prototype.addHealth=function(e){this.totalHealth+=e},e.prototype.addSpeed=function(e){this.totalSpeed+=e},e.prototype.addArmour=function(e){this.totalArmour+=e},e.prototype.addMeleeDamage=function(e){this.totalMeleeDamage+=e},e.prototype.addMissileDamage=function(e){this.totalMissileDamage+=e},e.prototype.addDiscipline=function(e){this.totalDiscipline+=e},e.prototype.addMorale=function(e){this.totalMorale+=e},e.prototype.addCondition=function(e){this.totalCondition+=e},e.prototype.resetAllProperties=function(){this.quantity=0,this.totalHealth=0,this.totalSpeed=0,this.totalArmour=0,this.totalMeleeDamage=0,this.totalMissileDamage=0,this.totalDiscipline=0,this.totalMorale=0,this.totalCondition=0},e}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),i=n(4),o=n(40),a=n(1);t.computerArmy=[],t.computerArmyPositionX=i.unitRosterWidth+20,t.computerArmyPositionY=i.titleHeight+60,t.playerArmy=[],t.playerArmyPositionX=i.unitRosterWidth+20,t.playerArmyPositionY=i.titleHeight+60,t.addUnitToArmy=function(e){var n,i=Object.assign({},e);"player"===r.side?(n=t.playerArmy,i.armyPosition={x:t.playerArmyPositionX,y:t.playerArmyPositionY}):(n=t.computerArmy,i.armyPosition={x:t.computerArmyPositionX,y:t.computerArmyPositionY}),e&&n.push(i),"player"===r.side?t.changePlayerArmyPosition():t.changeComputerArmyPosition()},t.removeUnitFromArmy=function(e){var n;n="player"===r.side?t.playerArmy:t.computerArmy,e&&a.isUnitInArray(e,n)&&("player"===r.side?(t.playerArmy=a.deleteUnitFromArmy(e,t.playerArmy),t.rearrangePlayerArmyPosition()):(t.computerArmy=a.deleteUnitFromArmy(e,t.computerArmy),t.rearrangeComputerArmyPosition()))},t.changePlayerArmyPosition=function(){var e=t.playerArmy.length,n=o.armyImgWidth+10,r=o.armyImgHeight+15,a=i.unitRosterWidth+20;e%5==0?(t.playerArmyPositionX=a,t.playerArmyPositionY+=r):t.playerArmyPositionX+=n},t.changeComputerArmyPosition=function(){var e=t.computerArmy.length,n=o.armyImgWidth+10,r=o.armyImgHeight+15,a=i.unitRosterWidth+20;e%5==0?(t.computerArmyPositionX=a,t.computerArmyPositionY+=r):t.computerArmyPositionX+=n},t.rearrangePlayerArmyPosition=function(){for(var e=o.armyImgWidth+10,n=o.armyImgHeight+15,r=i.unitRosterWidth+20,a=i.unitRosterWidth+20,s=i.titleHeight+60,l=1,u=0,c=t.playerArmy;u<c.length;u++){c[u].armyPosition={x:a,y:s},l%5==0?(a=r,s+=n):a+=e,l++}if(0!==t.playerArmy.length){var d=t.playerArmy[t.playerArmy.length-1].armyPosition.x,f=t.playerArmy[t.playerArmy.length-1].armyPosition.y;l%5==0?(t.playerArmyPositionX=r,t.playerArmyPositionY=f+n):(t.playerArmyPositionX=d+e,t.playerArmyPositionY=f)}else t.playerArmyPositionX=i.unitRosterWidth+20,t.playerArmyPositionY=i.titleHeight+60},t.rearrangeComputerArmyPosition=function(){for(var e=o.armyImgWidth+10,n=o.armyImgHeight+15,r=i.unitRosterWidth+20,a=i.unitRosterWidth+20,s=i.titleHeight+60,l=1,u=0,c=t.computerArmy;u<c.length;u++){c[u].armyPosition={x:a,y:s},l%5==0?(s+=n,a=r):a+=e,l++}if(0!==t.computerArmy.length){var d=t.computerArmy[t.computerArmy.length-1].armyPosition.x,f=t.computerArmy[t.computerArmy.length-1].armyPosition.y;l%5==0?(t.computerArmyPositionX=r,t.computerArmyPositionY=f+n):(t.computerArmyPositionX=d+e,t.computerArmyPositionY=f)}else t.computerArmyPositionX=i.unitRosterWidth+20,t.computerArmyPositionY=i.titleHeight+60}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(62);t.goldBoxStartX=r.goldBoxStartX,t.goldBoxStartY=r.goldBoxStartY,t.startTotalMoneyTitleX=r.startTotalMoneyTitleX,t.startTotalMoneyTitleY=r.startTotalMoneyTitleY,t.boxWidth=r.boxWidth,t.boxHeight=r.boxHeight,t.goldOptions=r.goldOptions,t.unitInfoTitleX=r.unitInfoTitleX,t.unitInfoTitleY=r.unitInfoTitleY,t.propertyStartX=r.propertyStartX,t.propertyStartY=r.propertyStartY,t.valueStartX=r.valueStartX,t.valueStartY=r.valueStartY;var i=n(282);t.width=i.width,t.height=i.height,t.battleSettingsX=i.battleSettingsX,t.battleSettingsY=i.battleSettingsY,t.unitInfoX=i.unitInfoX,t.unitInfoY=i.unitInfoY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.currentlyChosenUnit=null,t.assignCurrentlyChosenUnit=function(e){e&&"player"===e.controlBy?t.currentlyChosenUnit=e:t.currentlyChosenUnit=null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(31),i=n(2),o=n(77),a=n(72),s=n(3),l=n(0),u=n(21),c=n(16);t.drawUnitIcon=function(e,n){if(void 0===n&&(n=!1),"player"===e.controlBy){var u=a.getUnitPositionInArray(e.id,s.playerUnits)+1,c=r.UNIT_LEFT_PANEL_WIDTH+r.UNIT_ICON_WIDTH*u,d=l.CANVAS_HEIGHT-r.UNIT_PANEL_HEIGHT;i.ctx.clearRect(c,d,r.UNIT_ICON_WIDTH,r.UNIT_ICON_HEIGHT);var f=n?.5:1,h=c,g=r.UNIT_ICON_WIDTH*f;i.ctx.strokeRect(c,d,g,r.UNIT_ICON_HEIGHT),t.drawMovementIcon(c,d,e,n),c+=o.movementIcon.width*f,t.drawFightIcon(c,d,e,n),c+=o.fightIcon.width*f,t.drawArrowIcon(c,d,n),c=h,d+=o.attributesHeight,t.fillHealthPoints(c,d,e,n),d+=o.healthPointsHeight,t.drawIcon(c,d,e,n)}},t.drawMovementIcon=function(e,t,n,r){if(void 0===r&&(r=!1),n.isMoving){var a=r?.5:1;i.ctx.drawImage(u.movementIconImage,e,t,o.movementIcon.width*a,o.movementIcon.height)}},t.drawFightIcon=function(e,t,n,r){if(void 0===r&&(r=!1),n.isFighting){var a=r?.5:1;i.ctx.drawImage(u.fightIconImage,e,t,o.fightIcon.width*a,o.fightIcon.height)}},t.drawArrowIcon=function(e,t,n){void 0===n&&(n=!1)},t.fillHealthPoints=function(e,t,n,a){void 0===a&&(a=!1);var s=a?.5:1,l=r.UNIT_ICON_WIDTH*s,u=n.initialHealth,c=.01*Math.round(n.health/u*100),d=l*c;c>=.7?i.ctx.fillStyle="green":c>=.4&&c<.7?i.ctx.fillStyle="yellow":c>0&&c<.4&&(i.ctx.fillStyle="red"),d<0&&(d=0),i.ctx.fillRect(e,t,d,o.healthPointsHeight)},t.drawIcon=function(e,t,n,a){void 0===a&&(a=!1),i.ctx.save(),(!c.currentlyChosenUnit||c.currentlyChosenUnit&&c.currentlyChosenUnit.id!==n.id)&&(i.ctx.filter="brightness(0.8)");var s=a?.5:1;i.ctx.drawImage(u.unitIconImages[n.name],e,t,r.UNIT_ICON_WIDTH*s,o.iconHeight),i.ctx.restore()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.loadingCanvas=document.getElementById("loadingCanvas"),t.loadingCanvas&&(t.loadingCanvas.width=r.MAP_WIDTH,t.loadingCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(10),o=n(163);t.getNodeFromMap=function(e,t,n){var a;void 0===n&&(n=i.searchMap);var s=r.MAP_WIDTH/r.gridSize,l=r.MAP_HEIGHT/r.gridSize,u=o.findXInSearchMap(0,s,e);return u&&(a=o.coordinateYBinarySearch(0,l,t,u)),a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(151);t.clearMap=r.clearMap;var i=n(153);t.drawGrid=i.drawGrid;var o=n(155);t.addNeighbors=o.addNeighbors,t.neighbors=o.neighbors;var a=n(157);t.createNodes=a.createNodes;var s=n(159);t.createOneObstacle=s.createOneObstacle,t.createObstacles=s.createObstacles,t.createUnitObstacle=s.createUnitObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(77),o=n(78);t.unitIconImages={},t.loadIcons=function(){l(),s(),t.loadSwordIconImage(),t.loadSpearIconImage(),t.loadSpearAndShieldIconImage(),t.loadSwordAndRoundShieldIconImage()},t.loadUnitIcons=function(){return new Promise(function(e){o.createDefaultUnits().then(function(){return a().then(function(){return e()})})})};var a=function(){return new Promise(function(e){u().then(function(){e()})})},s=function(){r.loadImage(i.moveIconSrc,function(e,n){if(e)throw new Error("cannot load movement icon");t.movementIconImage=n})},l=function(){r.loadImage(i.fightIconSrc,function(e,n){if(e)throw new Error("cannot load fight icon");t.fightIconImage=n})},u=function(e){return void 0===e&&(e=0),new Promise(function(n){e===o.defaultUnits.length&&n(),r.loadImage(o.defaultUnits[e].imgSrc,function(r,i){if(r)throw new Error("Cannot load images of unit "+o.defaultUnits[e].name);t.unitIconImages[o.defaultUnits[e].name]=i,n(u(e+1))})})};t.loadSwordIconImage=function(){r.loadImage(i.swordIconSrc,function(e,n){if(e)throw new Error("cannot load sword icon at path "+t.swordIconImage);t.swordIconImage=n})},t.loadSpearIconImage=function(){r.loadImage(i.spearIconSrc,function(e,n){if(e)throw new Error("cannot load spear icon at path: "+i.spearIconSrc);t.spearIconImage=n})},t.loadSpearAndShieldIconImage=function(){r.loadImage(i.spearAndShieldSrc,function(e,n){if(e)throw new Error("cannot load spear and shield icon at path "+i.spearAndShieldSrc);t.spearAndShieldIconImage=n})},t.loadSwordAndRoundShieldIconImage=function(){r.loadImage(i.swordAndRoundShieldSrc,function(e,n){if(e)throw new Error("cannot load sword and round shild icon at path "+i.swordAndRoundShieldSrc);t.swordAndRoundShieldIconImage=n})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.revealedUnits=[],t.addToRevealedUnits=function(e){if(!r.isUnitInArray(e,t.revealedUnits)&&"player"===e.controlBy){var n=Object.assign({},e);t.revealedUnits.push(n)}},t.removeFromRevealedUnits=function(e){r.isUnitInArray(e,t.revealedUnits)&&(t.revealedUnits=r.deleteUnitFromArray(e,t.revealedUnits))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(209);t.attackEnemy=r.attackEnemy,t.moveTo=r.moveTo,t.pursueUnit=r.pursueUnit,t.updateUnit=r.updateUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.armyImgWidth=80,t.armyImgHeight=80},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(292);t.isStartBattleAvailable=r.isStartBattleAvailable;var i=n(294);t.isStartBattleButtonSelected=i.isStartBattleButtonSelected;var o=n(296);t.showStartBattleButton=o.showStartBattleButton,t.showText=o.showText},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(130);t.launchBattle=r.launchBattle;var i=n(249);t.launchGame=i.launchGame;var o=n(309);t.activateBattleMode=o.activateBattleMode,t.activateMainMenuMode=o.activateMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(44),o=n(45),a=n(18);r.canvas&&(t.ctx=r.canvas.getContext("2d")),r.auxiliaryCanvas&&(t.auxiliaryCtx=r.auxiliaryCanvas.getContext("2d")),r.terrain&&(t.terrainCtx=r.terrain.getContext("2d")),r.backgroundCanvas&&(t.backgroundCtx=r.backgroundCanvas.getContext("2d")),r.mainMenu&&(t.mainMenuCtx=r.mainMenu.getContext("2d")),r.dragAndDropCanvas&&(t.dragAndDropCanvasCtx=r.dragAndDropCanvas.getContext("2d")),i.pathCanvas&&(t.pathCtx=i.pathCanvas.getContext("2d")),o.eventCanvas&&(t.eventCtx=o.eventCanvas.getContext("2d")),a.loadingCanvas&&(t.loadingCtx=a.loadingCanvas.getContext("2d"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(9);t.hidingEnemies=[],t.addToHidingEnemies=function(e){if(!r.isUnitInArray(e,i.visibleForComputerUnits)){var n=Object.assign({},e);r.isUnitInArray(e,t.hidingEnemies)||"player"!==e.controlBy||t.hidingEnemies.push(n)}},t.removeFromHidingEnemies=function(e){r.isUnitInArray(e,i.visibleForComputerUnits)&&r.isUnitInArray(e,t.hidingEnemies)&&(t.hidingEnemies=r.deleteUnitFromArray(e,t.hidingEnemies))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(30);t.getSurroundedNodes=r.getSurroundedNodes;var i=n(170);t.getSurroundedEnemies=i.getSurroundedEnemies;var o=n(171);t.getSurroundedAllies=o.getSurroundedAllies},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.getSurroundedNodes=function(e,t){void 0===t&&(t=1);for(var n=[],o=e.currentNode.x-t*r.gridSize,a=e.currentNode.x+t*r.gridSize,s=e.currentNode.y-t*r.gridSize,l=e.currentNode.y+t*r.gridSize,u=s;u<=l;u+=r.gridSize)for(var c=o;c<=a;c+=r.gridSize){var d=i.getNodeFromMap(c,u);d&&n.push(d)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.UNIT_PANEL_HEIGHT=r.CANVAS_HEIGHT-r.MAP_HEIGHT,t.UNIT_PANEL_WIDTH=r.MAP_WIDTH,t.UNIT_LEFT_PANEL_WIDTH=260,t.UNIT_RIGHT_PANEL_WIDTH=260,t.UNIT_ICONS_PANEL_WIDTH=1e3,t.UNIT_ICON_WIDTH=100,t.UNIT_ICON_HEIGHT=t.UNIT_PANEL_HEIGHT},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),o=n(16),a=n(3),s=n(76);t.drawUnit=function(e){var t,n=0;if("player"===e.controlBy)t="#dbdb0d";else if("computer"===e.controlBy&&(t="#d30c0c",!e.isVisible))return;if(r.ctx){o.currentlyChosenUnit&&o.currentlyChosenUnit.id===e.id&&(r.ctx.beginPath(),r.ctx.arc(e.centerX,e.centerY,e.radius,0,2*Math.PI),r.ctx.fillStyle="#a79ebf",r.ctx.fill(),r.ctx.closePath(),r.ctx.restore(),n=2);r.ctx.beginPath(),r.ctx.arc(e.centerX,e.centerY,e.radius-n,0,2*Math.PI),r.ctx.fillStyle=t,r.ctx.fill(),r.ctx.closePath(),r.ctx.restore();var i=e.x+8,a=e.y+8,l=2*e.radius-8;r.ctx.drawImage(s.unitToIconMap[e.name],i+2,a+2,l,l)}},t.clearUnitImage=function(e){r.ctx&&r.ctx.clearRect(e.x,e.y,i.gridSize,i.gridSize)},t.redrawUnits=function(e){for(var n=0,r=e;n<r.length;n++){var i=r[n];!0!==i.isMoving&&t.drawUnit(i)}},t.redrawPlayerUnits=function(){t.redrawUnits(a.playerUnits)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(1),o=n(20),a=n(10),s=n(48),l=n(1),u=n(93),c=n(5),d=n(94),f=n(34),h=n(95),g=n(96),y=n(98),v=n(99),m=n(17);t.pursueUnit=function(e,n,p,M,U,_,b,P){if(void 0===P&&(P=0),!(P>3)){if(e.isFighting){if(e.setUnitToPursueToNull(),!b||!u.unitCanGetOutOfCombat(e)){var I=i.getNodeFromMap(e.x,e.y);return e.setCurrentNode(I),e.setNextNode(I),void e.setIsMovingToFalse()}e.clearFightAgainst(),r.removeUnitFromEnemiesFightAgainst(e),e.setIsMovingToTrue()}if(null===e.unitToPursue){var x=i.getNodeFromMap(e.x,e.y),C=i.getNodeFromMap(e.moveToNode.x,e.moveToNode.y),T=s.aStar(a.initialMap,x,C);return e.assignMoveToPosition(C.x,C.y),void f.updateUnit(e,T,0,C.x,C.y,null,!1)}if(null!==e.unitToPursue&&n.id!==e.unitToPursue.id){var A=i.getNodeFromMap(e.x,e.y),S=i.getNodeFromMap(e.unitToPursue.x,e.unitToPursue.y);T=s.aStar(a.initialMap,A,S);return e.assignMoveToPosition(S.x,S.y),void t.pursueUnit(e,e.unitToPursue,S.x,S.y,0,T,!1)}if(0===y.getInterceptedEnemies(e).length){var O=Object.assign([],_),w=O[U];if(w){var N;N=U+1===O.length?w:O[U+1];var j=i.getNodeFromMap(e.x,e.y);e.setCurrentNode(j),e.setNextNode(N);var H=i.getNodeFromMap(e.x,e.y),B=i.getNodeFromMap(n.x,n.y);if(p===n.x&&M===n.y||(U=0,p=n.x,M=n.y,H=i.getNodeFromMap(e.x,e.y),B=i.getNodeFromMap(n.x,n.y),_=s.aStar(a.initialMap,H,B),e.assignMoveToPosition(n.currentNode.x,n.currentNode.y),w=_[U]),N.x===n.currentNode.x&&N.y===n.currentNode.y){console.log("UNIT REACHED ENEMY"),h.stopMoving(e,j),e.setUnitToPursueToNull(),m.drawUnitIcon(e),e.assignEnemy(n),n.assignEnemy(e);var F=i.getNodeFromMap(n.x,n.y);return h.stopMoving(n,F),m.drawUnitIcon(n),r.charge(e,n),void console.log("end of reached enemy")}if(l.anotherUnitIsOnTheWay(e)){if(console.error("ANOTHER UNIT IS ON THE WAY"),v.getBlockedEnemies(e).length>0){console.log("UNIT is blocked by enemy"),h.stopMoving(e,j),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var E=0,W=v.getBlockedEnemies(e);E<W.length;E++){q=W[E];e.assignEnemy(q),q.assignEnemy(e)}return}var D=g.unitCanMoveToTheNode(N,e);if(console.log("PERMISSION",D),!D){h.stopMoving(e,j);for(var R=Object.assign([],a.initialMap),k=0,G=c.getSurroundedBlockedNodes(e);k<G.length;k++){var z=G[k];R=o.createUnitObstacle(R,z.x,z.y)}o.addNeighbors(R);var L=i.getNodeFromMap(e.x,e.y,R),Y=i.getNodeFromMap(p,M,R);T=s.aStar(R,L,Y);return void t.pursueUnit(e,n,p,M,U,T,!1,P+=1)}}e.assignMoveToPosition(n.currentNode.x,n.currentNode.y),e.setIsMovingToTrue(),m.drawUnitIcon(e),r.spotEnemy(e),e.decreaseCondition(1),d.moveToNextNodeInPursueUnit(e,n,j,N,p,M,_,U)}}else{e.setIsMovingToFalse(),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var V=0,X=y.getInterceptedEnemies(e);V<X.length;V++){var q;(q=X[V]).setIsMovingToFalse(),e.assignEnemy(q),q.assignEnemy(e)}}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(1),o=n(20),a=n(10),s=n(48),l=n(1),u=n(93),c=n(5),d=n(95),f=n(94),h=n(33),g=n(96),y=n(98),v=n(99),m=n(17);t.updateUnit=function(e,n,p,M,U,_,b,P){if(void 0===p&&(p=0),void 0===_&&(_=null),void 0===P&&(P=0),!(P>3||e.health<=0))if(p!==n.length){if(e.isFighting){if(m.drawUnitIcon(e),!b||!u.unitCanGetOutOfCombat(e)){var I=i.getNodeFromMap(e.x,e.y);return void d.stopMoving(e,I)}e.setUnitToPursueToNull(),e.clearFightAgainst(),r.removeUnitFromEnemiesFightAgainst(e)}if(0===y.getInterceptedEnemies(e).length){if(e.unitToPursue){var x=i.getNodeFromMap(e.x,e.y);d.stopMoving(e,x);var C=i.getNodeFromMap(e.unitToPursue.x,e.unitToPursue.y),T=s.aStar(a.initialMap,x,C);return e.assignMoveToPosition(C.x,C.y),void h.pursueUnit(e,e.unitToPursue,C.x,C.y,0,T,!1)}if(M!==e.moveToNode.x||U!==e.moveToNode.y){x=i.getNodeFromMap(e.x,e.y),C=i.getNodeFromMap(e.moveToNode.x,e.moveToNode.y);d.stopMoving(e,x);T=s.aStar(a.initialMap,x,C);return e.assignMoveToPosition(C.x,C.y),void t.updateUnit(e,T,0,C.x,C.y,null,!1)}var A=Object.assign([],n),S=A[p];if(S){var O;O=p+1===A.length?S:A[p+1];var w=i.getNodeFromMap(e.x,e.y);if(e.setCurrentNode(w),e.setNextNode(S),p>=A.length)d.stopMoving(e,w);else{if(l.anotherUnitIsOnTheWay(e)&&p===A.length-1){if(v.getBlockedEnemies(e).length>0){d.stopMoving(e,w),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var N=0,j=v.getBlockedEnemies(e);N<j.length;N++){L=j[N];e.assignEnemy(L),L.assignEnemy(e)}return}return console.error("another unit occupying destination position"),e.assignMoveToPosition(e.x,e.y),void d.stopMoving(e,w)}if(l.anotherUnitIsOnTheWay(e)){if(console.log("another unit is on the way"),v.getBlockedEnemies(e).length>0){d.stopMoving(e,w),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var H=0,B=v.getBlockedEnemies(e);H<B.length;H++){L=B[H];e.assignEnemy(L),L.assignEnemy(e)}return}if(!g.unitCanMoveToTheNode(O,e)){d.stopMoving(e,w);for(var F=Object.assign([],a.initialMap),E=0,W=c.getSurroundedBlockedNodes(e);E<W.length;E++){var D=W[E];F=o.createUnitObstacle(F,D.x,D.y)}o.addNeighbors(F);x=i.getNodeFromMap(e.x,e.y,F),C=i.getNodeFromMap(M,U,F),T=s.aStar(F,x,C);return void t.updateUnit(e,T,0,M,U,null,!1,P+=1)}}e.setIsMovingToTrue(),m.drawUnitIcon(e);var R=S;r.spotEnemy(e),0!==p&&(R=A[p-1]),e.decreaseCondition(1),f.moveToNextNodeInUpdateUnit(e,R,S,M,U,n,p)}}}else{console.log("UNIT IS INTERCEPTED BY ENEMY");var k=i.getNodeFromMap(e.x,e.y);d.stopMoving(e,k),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var G=0,z=y.getInterceptedEnemies(e);G<z.length;G++){var L=z[G];d.stopMoving(L,L.nextNode),e.assignEnemy(L),L.assignEnemy(e),m.drawUnitIcon(L)}}}else{var Y=i.getNodeFromMap(e.x,e.y);d.stopMoving(e,Y)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(8),o=n(5);t.getClosestUnitToNode=function(e){for(var t=r.computerUnits[0],n=1;n<r.computerUnits.length;++n){var i=o.getDistanceBetweenUnitAndNodeInGrids(t,e);o.getDistanceBetweenUnitAndNodeInGrids(r.computerUnits[n],e)<i&&(t=r.computerUnits[n])}return t},t.getClosestUnitToOtherUnit=function(e,t){void 0===t&&(t=r.computerUnits);var n=Object.assign([],i.deleteUnitFromArray(e,t));if(0===n.length)return e;for(var o=n[0],a=1;a<n.length;++a){var s=i.getDistanceBetweenTwoUnitsInGrids(o,e);i.getDistanceBetweenTwoUnitsInGrids(n[a],e)<s&&(o=n[a])}return o},t.getBestUnitByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.computerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]<n[u][e]&&(l=n[u]);return l},t.getWorstUnitByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.computerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]>n[u][e]&&(l=n[u]);return l},t.getBestEnemyByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.playerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]<n[u][e]&&(l=n[u]);return l},t.getWorstEnemyByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.playerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]>n[u][e]&&(l=n[u]);return l},t.getNotFightingUnits=function(e){void 0===e&&(e=[]);var t=Object.assign([],r.computerUnits);if(0!==e.length)for(var n=0,o=e;n<o.length;n++){var a=o[n];t=i.deleteUnitFromArray(a,t)}if(0===t.length)return null;for(var s=[],l=0,u=t;l<u.length;l++){(a=u[l]).isFighting||s.push(a)}return s},t.getFightingUnits=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var i=r[n];i.isFighting&&t.push(i)}return t},t.getTotalUnitsHealth=function(e){for(var t=0,n=0,r=e;n<r.length;n++){t+=r[n].health}return t},t.getTotalUnitsInitialHealth=function(e){for(var t=0,n=0,r=e;n<r.length;n++){t+=r[n].health}return t},t.getClosestEnemyToUnit=function(e){var t=Object.assign([],i.deleteUnitFromArray(e,r.playerUnits));if(0===t.length)return null;for(var n=t[0],o=1;o<t.length;++o){var a=i.getDistanceBetweenTwoUnitsInGrids(n,e);i.getDistanceBetweenTwoUnitsInGrids(t[o],e)<a&&(n=t[o])}return n},t.getFreeUnits=function(e){void 0===e&&(e=[]);var t=Object.assign([],r.computerUnits);if(0!==e.length)for(var n=0,o=e;n<o.length;n++){var a=o[n];t=i.deleteUnitFromArray(a,t)}if(0===t.length)return null;for(var s=[],l=0,u=t;l<u.length;l++){(a=u[l]).task||s.push(a)}return s},t.getUnitsByTask=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.computerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=[],u=0,c=n;u<c.length;u++){(s=c[u]).task===e&&l.push(s)}return l},t.getUnitsByPropertyValue=function(e,t,n){void 0===n&&(n=[]);var o=Object.assign([],r.computerUnits);if(0!==n.length)for(var a=0,s=n;a<s.length;a++){var l=s[a];o=i.deleteUnitFromArray(l,o)}if(0===o.length)return null;for(var u=[],c=0,d=o;c<d.length;c++){(l=d[c])[e]===t&&u.push(l)}return u},t.getUnitsWhereValue=function(e,t,n,o){void 0===o&&(o=[]);var a=Object.assign([],r.computerUnits);if(0!==o.length)for(var s=0,l=o;s<l.length;s++){var u=l[s];a=i.deleteUnitFromArray(u,a)}if(0===a.length)return null;for(var c=[],d=0,f=a;d<f.length;d++){u=f[d];t.toLowerCase(),"="===t||"equal"===t||"=="===t||"==="===t?u[e]==n&&c.push(u):">"===t||"greater"===t?u[e]>n&&c.push(u):">="===t||">=="===t||"greaterOrEqual"===t?u[e]>=n&&c.push(u):"<"===t||"less"===t?u[e]<n&&c.push(u):"<="!==t&&"<=="!==t&&"lessOrEqual"!==t||u[e]<=n&&c.push(u)}return c},t.getDangerousUnits=function(e){var t=[],n=[];"computer"===e.controlBy?t=Object.assign([],r.playerUnits):"player"===e.controlBy&&(t=Object.assign([],r.computerUnits));for(var i=0,o=t;i<o.length;i++)for(var a=o[i],s=0,l=e.vulnerableAgainst;s<l.length;s++){var u=l[s];if(a.name==u){n.push(a);break}}return n},t.containsDangerousUnits=function(e,t){for(var n=0,r=t;n<r.length;n++)for(var i=r[n],o=0,a=e.vulnerableAgainst;o<a.length;o++){var s=a[o];if(i.name==s)return!0}return!1},t.isEnemyDangerousForUnit=function(e,t){for(var n=0,r=e.vulnerableAgainst;n<r.length;n++){var i=r[n];if(t.name==i)return!0}return!1},t.isEnemyVulnerableToUnit=function(e,t){for(var n=0,r=e.advantageOver;n<r.length;n++){var i=r[n];if(t.name==i)return!0}return!1},t.getScoutsNumber=function(){for(var e=0,n=r.computerUnits;e<n.length;e++){n[e];return t.getUnitsByTask("exploration").length}},t.isUnitsChanged=function(e,t){var n=function(e,t){return e.id<t.id?-1:e.id>t.id?1:0};if(e.length!=t.length)return!0;var r=Object.assign([],e),i=Object.assign([],t);r.sort(n),i.sort(n);for(var o=0;o<r.length;++o)if(r[o]!=i[o])return console.error("units changed"),!0;return!1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(30),i=n(19),o=n(8);t.getSurroundedUnits=function(e,t,n,a){void 0===n&&(n=3),void 0===a&&(a=!1);var s=[],l=Object.assign([],t);!a&&o.isUnitInArray(e,l)&&(l=o.deleteUnitFromArray(e,l));for(var u=0,c=r.getSurroundedNodes(e,n);u<c.length;u++)for(var d=c[u],f=0,h=l;f<h.length;f++){var g=h[f],y=i.getNodeFromMap(g.x,g.y);d.x===y.x&&d.y===y.y&&s.push(g)}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(78);t.roster=[],t.createRoster=function(){for(var e=0,n=r.defaultUnits;e<n.length;e++){var i=n[e];t.roster.push(i)}for(var o=0,a=t.roster;o<a.length;o++){(i=a[o]).selected=!1}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.totalGold=400,t.setTotalGold=function(e){t.totalGold=e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.showBattleSettings=!0,t.showUnitInfo=!1,t.changeBattleSettingsToTrue=function(){t.showBattleSettings=!0,t.showUnitInfo=!1},t.changeUnitInfoToTrue=function(){t.showBattleSettings=!1,t.showUnitInfo=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(110);t.displayArmy=r.displayArmy;var i=n(112);t.drawRemoveIcon=i.drawRemoveIcon;var o=n(276);t.isUnitShouldBeRemoved=o.isUnitShouldBeRemoved;var a=n(24);t.armyImgWidth=a.armyImgWidth,t.armyImgHeight=a.armyImgHeight;var s=n(277);t.displayChosenUnits=s.displayChosenUnits,t.displayChosenUnitsTitle=s.displayChosenUnitsTitle,t.onChooseUnitInArmy=s.onChooseUnitInArmy},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(287);t.displayComputer=r.displayComputer;var i=n(288);t.displayPlayer=i.displayPlayer;var o=n(289);t.displayRemainGold=o.displayRemainGold;var a=n(290);t.displayTitle=a.displayTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(132);t.MAP_HEIGHT=r.MAP_HEIGHT,t.MAP_WIDTH=r.MAP_WIDTH,t.CANVAS_HEIGHT=r.CANVAS_HEIGHT;var i=n(133);t.gridSize=i.gridSize},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.battleMode=!1,t.battleFinish=!1,t.mainMenuMode=!0,t.setBattleMode=function(){return new Promise(function(e){t.mainMenuMode=!1,t.battleMode=!0,e()})},t.setMainMenuMode=function(){return new Promise(function(e){t.mainMenuMode=!1,t.battleMode=!0,e()})},t.finishBattle=function(){t.battleFinish=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.pathCanvas=document.getElementById("pathCanvas"),t.pathCanvas&&(t.pathCanvas.width=r.MAP_WIDTH,t.pathCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.eventCanvas=document.getElementById("eventCanvas"),t.eventCanvas&&(t.eventCanvas.width=r.MAP_WIDTH,t.eventCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unitId=0,t.incUnitId=function(){t.unitId++}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(201);t.calculateDamage=r.calculateDamage,t.calculateDamageBaseOnEnemyPosition=r.calculateDamageBaseOnEnemyPosition,t.calculateDamageWhenItsLessThanOne=r.calculateDamageWhenItsLessThanOne},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(49);t.aStar=r.aStar;var i=n(92);t.drawPath=i.drawPath;var o=n(211);t.findPathFromOneNodeToAnother=o.findPathFromOneNodeToAnother;var a=n(91);t.getMinFScore=a.getMinFScore,t.unclosedNeigbors=a.unclosedNeigbors,t.isObjectInMapKeys=a.isObjectInMapKeys},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(20),i=n(1),o=n(91);t.aStar=function(e,n,a){var s=Object.assign([],e);if(n&&a){var l=[],u=[];n.gScore=0,n.fScore=n.gScore+t.h(n,a),l.push(n);for(var c=new Map;l;){var d=o.getMinFScore(l);if(!d)return;if(d.x===a.x&&d.y===a.y)return t.reconstructPath(c,d);l=i.deleteObjectFromArray(d,l),u.push(d);for(var f=0,h=o.unclosedNeigbors(d,u);f<h.length;f++){var g=h[f],y=o.getNeighborDistance(d,g),v=d.gScore+y;if(!i.isObjectInArray(g,l)||v<g.gScore){if(c.set(g,d),!g)return;g.gScore=v,g.fScore=g.gScore+t.h(g,a)}if(!i.isObjectInArray(g,l)){var m=r.neighbors(s,g);g.neighbors=m,l.push(g)}}}return 0}},t.h=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return 10*(n+r)+-6*Math.min(n,r)},t.reconstructPath=function(e,t){for(var n=[t],r=[];o.isObjectInMapKeys(t,e);)t=e.get(t),n.push(t);for(var i=n.length-1;i>=0;i--)r.push(n[i]);return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(19),i=n(10),o=n(34),a=n(49);t.moveTo=function(e,t,n){if(e.isMoving){e.setUnitToPursue(null);var s=r.getNodeFromMap(t,n);e.assignMoveToPosition(s.x,s.y)}else{e.setUnitToPursue(null);var l=r.getNodeFromMap(e.x,e.y),u=(s=r.getNodeFromMap(t,n),a.aStar(i.initialMap,l,s));e.assignMoveToPosition(s.x,s.y),o.updateUnit(e,u,0,s.x,s.y,null,!0)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.playerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.computerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(97);t.getRandomUnit=function(e){var t=Object.assign([],e);return r.shuffleUnits(t)[0]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(245);t.assessVulnerability=r.assessVulnerability},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateCurrentCommandNumber=function(){var e=Math.random();return t.currentCommandNumber=e,e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(254);t.rosterImgWidth=r.rosterImgWidth,t.rosterImgHeight=r.rosterImgHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(255);t.displayRoster=r.displayRoster;var i=n(271);t.displayRosterUnits=i.displayRosterUnits;var o=n(274);t.displayRosterTitle=o.displayRosterTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7);t.playerSpentGold=0,t.computerSpentGold=0,t.increaseSpentGold=function(e){"computer"===r.side?t.computerSpentGold+=e:"player"===r.side&&(t.playerSpentGold+=e)},t.decreaseSpentGold=function(e){"computer"===r.side?t.computerSpentGold-=e:"player"===r.side&&(t.playerSpentGold-=e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.startBattleAvailable=!1,t.disableStartBattleButton=function(){t.startBattleAvailable=!1},t.enableStartBattleButton=function(){t.startBattleAvailable=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectedUnitInRoster=null,t.selectUnitInRoster=function(e){t.selectedUnitInRoster=e||null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(280);t.changeTotalGold=r.changeTotalGold;var i=n(297);t.onChooseInfo=i.onChooseInfo,t.displayInfo=i.displayInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.goldBoxStartX=r.armyLayoutWidth+r.unitRosterWidth+100,t.goldBoxStartY=r.titleHeight+80,t.startTotalMoneyTitleX=t.goldBoxStartX+40,t.startTotalMoneyTitleY=t.goldBoxStartY-20,t.boxWidth=40,t.boxHeight=40,t.goldOptions=[200,300,400,600,1e3],t.unitInfoTitleX=r.armyLayoutWidth+r.unitRosterWidth+170,t.unitInfoTitleY=r.titleHeight+60,t.propertyStartX=t.unitInfoTitleX-100,t.propertyStartY=t.unitInfoTitleY+30,t.valueStartX=t.propertyStartX+200,t.valueStartY=t.unitInfoTitleY+30,t.changeY=function(){t.propertyStartY+=30,t.valueStartY+=30},t.setDefault=function(){t.propertyStartX=t.unitInfoTitleX-100,t.propertyStartY=t.unitInfoTitleY+30,t.valueStartX=t.propertyStartX+200,t.valueStartY=t.unitInfoTitleY+30}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(284);t.onChoosePlayer=r.onChoosePlayer,t.onChooseComputer=r.onChooseComputer;var i=n(41);t.displayTitle=i.displayTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(286);t.playerSwitcherX0=r.playerSwitcherX0,t.playerSwitcherX1=r.playerSwitcherX1,t.playerSwitcherY0=r.playerSwitcherY0,t.playerSwitcherY1=r.playerSwitcherY1,t.computerSwitcherX0=r.computerSwitcherX0,t.computerSwitcherX1=r.computerSwitcherX1,t.computerSwitcherY0=r.computerSwitcherY0,t.computerSwitcherY1=r.computerSwitcherY1,t.playerSwitcherWidth=r.playerSwitcherWidth,t.computerSwitcherWidth=r.computerSwitcherWidth,t.goldX=r.goldX,t.goldY=r.goldY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(295);t.startBattleButtonX=r.startBattleButtonX,t.startBattleButtonY=r.startBattleButtonY,t.startBattleButtonWidth=r.startBattleButtonWidth,t.startBattleButtonHeight=r.startBattleButtonHeight,t.startBattleTextX=r.startBattleTextX,t.startBattleTextY=r.startBattleTextY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(2),o=n(0),a=n(1),s=n(11),l=n(3),u=n(23),c=n(16),d=n(90),f=n(220),h=n(32),g=n(222),y=n(92),v=n(223);t.launchBattle=function(){r.auxiliaryCanvas.addEventListener("mousemove",function(e){var t=e.offsetX,n=e.offsetY;if(c.currentlyChosenUnit){for(var r=null,a=0,s=l.computerUnits;a<s.length;a++){var u=s[a],d=u.x+o.gridSize,f=u.y+o.gridSize;t>=u.x&&t<d&&n>=u.y&&n<f&&(r=u)}r&&r.isVisible?(i.auxiliaryCtx.fillStyle="#000",i.auxiliaryCtx.font="14px Arial",i.auxiliaryCtx.fillText("Attack",r.x,r.y+o.gridSize/2)):i.auxiliaryCtx.clearRect(0,0,o.MAP_WIDTH,o.MAP_HEIGHT)}}),r.auxiliaryCanvas.addEventListener("click",function(e){var t=e.offsetX,n=e.offsetY;s.onChooseUnit(l.units,t,n),h.redrawPlayerUnits(),d.displayUnitIcons(),y.clearPath()}),r.auxiliaryCanvas.addEventListener("contextmenu",function(e){e.preventDefault();var t=e.offsetX,n=e.offsetY;if(c.currentlyChosenUnit){for(var r=null,i=0,a=l.computerUnits;i<a.length;i++){var s=a[i],d=s.x+o.gridSize,f=s.y+o.gridSize;t>=s.x&&t<d&&n>=s.y&&n<f&&(r=s)}r&&r.isVisible?u.attackEnemy(c.currentlyChosenUnit,r):(u.moveTo(c.currentlyChosenUnit,t,n),g.drawClickedIcon(t,n)),y.clearPath()}}),a.drawBackground("./src/img/terrain/terrain.png"),d.displayUnitIcons(),f.battleListener(),v.computerMovement(),setInterval(function(){f.isBattleEnd()},15e3)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadImage=function(e,t){var n=new Image;n.onload=function(){t(null,n)},n.onerror=function(){t(new Error("Cannot load the image at "+e))},n.src=e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deleteObjectFromArray=function(e,t){return t.filter(function(t){return t.x!==e.x||t.y!==e.y})},t.isObjectInArray=function(e,t){if(0!==t.length)for(var n=0,r=t;n<r.length;n++){var i=r[n];if(e.x===i.x&&e.y===i.y)return!0}return!1},t.isObjectEmpty=function(e){var t=Object.prototype.hasOwnProperty;if(null==e)return!0;if(e.length>0)return!1;if(0===e.length)return!0;if("object"!=typeof e)return!0;for(var n in e)if(t.call(e,n))return!1;return!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(149);t.findClosestUnitsToTheNodeCenter=r.findClosestUnitsToTheNodeCenter,t.getClosestNodeToUnit=r.getClosestNodeToUnit,t.getBestUnitsByProperty=r.getBestUnitsByProperty},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(158);t.createNodes=function(){for(var e=[],t=0,n=0;n<r.MAP_WIDTH;n+=r.gridSize)for(var o=0;o<r.MAP_HEIGHT;o+=r.gridSize){var a=new i.default(t,n,o);e.push(a),t++}return e},t.createSearchMap=function(e){for(var t={},n=0,i=[],o=0;o<e.length;++o)i.push(e[o]),o<=e.length-2&&e[o+1].x!==n&&(t[n]=i,n+=r.gridSize,i=[]);return t[n]=i,t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(167);t.shuffleNodes=r.shuffleNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(3);t.addUnitIntoArray=function(e,n){var r=Object.assign([],n);return t.isUnitInArray(e,n)||r.push(e),r},t.deleteUnitFromArray=function(e,t){return t.filter(function(t){return t.id!==e.id})},t.deleteUnitFromArmy=function(e,t){return t.filter(function(t){return t.armyPosition.x!==e.armyPosition.x||t.armyPosition.y!==e.armyPosition.y})},t.getDistanceBetweenTwoUnitsInGrids=function(e,t){var n=e.currentNode.x,i=e.currentNode.y,o=t.currentNode.x,a=t.currentNode.y;return Math.abs(n-o)/r.gridSize+Math.abs(i-a)/r.gridSize},t.isUnitInArray=function(e,t){if(0!==t.length)for(var n=0,r=t;n<r.length;n++){if(r[n].id===e.id)return!0}return!1},t.getUnitById=function(e,t){void 0===t&&(t=i.units);for(var n=0,r=t;n<r.length;n++){var o=r[n];if(e===o.id)return o}},t.getUnitPositionInArray=function(e,t){for(var n=0;n<t.length;++n)if(t[n].id===e)return n;return null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(181);t.chooseUnitType=r.chooseUnitType;var i=n(194);t.onChooseUnit=i.onChooseUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(182);t.Archers=r.default;var i=n(185);t.HeavyCavalry=i.default;var o=n(186);t.HeavyInfantry=o.default;var a=n(187);t.Hoplites=a.default;var s=n(188);t.LightCavalry=s.default;var l=n(189);t.LightInfantry=l.default;var u=n(190);t.Militia=u.default;var c=n(191);t.Peltasts=c.default;var d=n(192);t.Pikemen=d.default;var f=n(193);t.Scouts=f.default;var h=n(6);t.Unit=h.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(46),o=n(32),a=n(73);t.createUnit=function(e,t,n,s){if("player"===s||"computer"===s){var l;return l=a.chooseUnitType(e,t,n,s),r.addToUnits(l),o.drawUnit(l),i.incUnitId(),l}throw new Error("Unit cannot be controlled by "+s)},t.createDefaultUnit=function(e,t,n,r){if("player"===r||"computer"===r){return a.chooseUnitType(e,t,n,r)}throw new Error("Unit cannot be controlled by "+r)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(21);t.fillUnitToIconMap=function(){t.unitToIconMap={Archers:r.swordIconImage,HeavyCavalry:r.swordIconImage,Hoplites:r.spearAndShieldIconImage,LightCavalry:r.swordIconImage,LightInfantry:r.swordIconImage,HeavyInfantry:r.swordAndRoundShieldIconImage,Militia:r.swordIconImage,Peltasts:r.swordIconImage,Pikemen:r.spearIconImage,Scouts:r.swordIconImage}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(31);t.attributesHeight=20,t.healthPointsHeight=10,t.iconHeight=r.UNIT_ICON_HEIGHT-(t.attributesHeight+t.healthPointsHeight),t.moveIconSrc="./src/img/icons/MoveIcon.png",t.fightIconSrc="./src/img/icons/Swords.png",t.swordIconSrc="./src/img/units/icons/sword.png",t.spearIconSrc="./src/img/units/icons/spear.png",t.spearAndShieldSrc="./src/img/units/icons/spearAndShield.png",t.swordAndRoundShieldSrc="./src/img/units/icons/swordAndRoundShield.png",t.movementIcon={width:30,height:t.attributesHeight},t.fightIcon={width:40,height:t.attributesHeight},t.arrowIcon={width:30,height:t.attributesHeight}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(75);t.defaultUnits=[];var i=["HeavyCavalry","HeavyInfantry","Hoplites","LightCavalry","LightInfantry","Militia","Pikemen","Scouts"];t.createDefaultUnits=function(){return new Promise(function(e){for(var n=0,o=i;n<o.length;n++){var a=o[n],s=r.createDefaultUnit(a,0,0,"player");t.defaultUnits.push(s)}e()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(32);t.drawUnit=r.drawUnit,t.redrawUnits=r.redrawUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(197);t.armourPenetration=r.armourPenetration},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(198);t.checkAttackSide=r.checkAttackSide},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(202);t.removeUnitFromEnemiesFightAgainst=r.removeUnitFromEnemiesFightAgainst,t.findUnitInFightAgainst=r.findUnitInFightAgainst},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(203);t.checkHealth=r.checkHealth;var i=n(87);t.isUnitFighting=i.isUnitFighting;var o=n(207);t.meleeAttack=o.meleeAttack;var a=n(208);t.meleeCombat=a.meleeCombat},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(204);t.removeUnit=r.removeUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(205);t.assignCurrentlyChosenUnit=r.assignCurrentlyChosenUnit,t.addUnitToSpottedUnits=r.addUnitToSpottedUnits,t.removeUnitFromSpottedUnits=r.removeUnitFromSpottedUnits,t.incUnitId=r.incUnitId,t.addUnitIntoVisibleUnits=r.addUnitIntoVisibleUnits,t.removeUnitFromVisibleUnits=r.removeUnitFromVisibleUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.spottedUnits=[],t.addUnitToSpottedUnits=function(e){r.isUnitInArray(e,t.spottedUnits)||t.spottedUnits.push(e)},t.removeUnitFromSpottedUnits=function(e){r.isUnitInArray(e,t.spottedUnits)&&(t.spottedUnits=r.deleteObjectFromArray(e,t.spottedUnits))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.isUnitFighting=function(e){var t=!1,n=e.figthAgainst;r.isObjectEmpty(n.front)&&r.isObjectEmpty(n.rear)?0!==n.flank.length&&(t=!0):t=!0,t||e.setIsFightingToFalse()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(206);t.refreshment=r.refreshment},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomizeMeleeDamage=function(e){var t=e-Math.ceil(.2*e),n=e+Math.floor(.2*e);return Math.floor(Math.random()*(t-n+1))+n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(31),o=n(0),a=n(17),s=n(2);t.displayUnitIcons=function(){var e=i.UNIT_LEFT_PANEL_WIDTH,t=o.CANVAS_HEIGHT-i.UNIT_PANEL_HEIGHT;s.ctx.clearRect(e,t,i.UNIT_PANEL_WIDTH,i.UNIT_PANEL_HEIGHT);for(var n=0,l=r.playerUnits;n<l.length;n++){var u=l[n];a.drawUnitIcon(u,!1)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMinFScore=function(e){for(var t=0,n=1;n<e.length-1;++n)e[t].fScore>e[n].fScore&&(t=n);return e[t]},t.unclosedNeigbors=function(e,t){for(var n=[],r=0,i=e.neighbors;r<i.length;r++){for(var o=i[r],a=!1,s=0,l=t;s<l.length;s++){var u=l[s];o.x===u.x&&o.y===u.y&&(a=!0)}a||n.push(o)}return n},t.isObjectInMapKeys=function(e,t){for(var n=Array.from(t),r=!1,i=0;i<n.length;++i)n[i][0].x===e.x&&n[i][0].y===e.y&&(r=!0);return r},t.getNeighborDistance=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return 0!==n&&0!==r?14:10}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(27),o=n(16),a=n(1);t.drawPath=function(e,n,a){if(void 0===a&&(a=0),o.currentlyChosenUnit&&o.currentlyChosenUnit.id===e.id){t.clearPath(),0!=a&&(a-=1);for(var s=!0,l=a;l!=n.length-1;++l){var u=n[l].x+r.gridSize/2,c=n[l].y+r.gridSize/2,d=n[l+1].x+r.gridSize/2,f=n[l+1].y+r.gridSize/2;if(i.pathCtx.save(),i.pathCtx.strokeStyle="yellow",i.pathCtx.beginPath(),s?(i.pathCtx.moveTo(e.centerX,e.centerY),s=!1):i.pathCtx.moveTo(u,c),i.pathCtx.lineTo(d,f),i.pathCtx.stroke(),l==n.length-2){var h=Math.round(r.gridSize/4);i.pathCtx.beginPath(),i.pathCtx.arc(d,f,h,0,2*Math.PI),i.pathCtx.fill(),i.pathCtx.closePath()}i.pathCtx.restore()}}},t.clearPath=function(){i.pathCtx.clearRect(0,0,r.MAP_WIDTH,r.MAP_HEIGHT)},t.clearCurrentNode=function(e){var t=a.getNodeFromMap(e.x,e.y);i.pathCtx.clearRect(t.x,t.y,r.gridSize,r.gridSize)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(212);t.calculateChanceToGetOutOfCombat=r.calculateChanceToGetOutOfCombat,t.unitCanGetOutOfCombat=r.unitCanGetOutOfCombat},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(48),o=n(213);t.moveToNextNodeInPursueUnit=function(e,t,n,a,s,l,u,c){var d=n.x+.5*r.gridSize,f=n.y+.5*r.gridSize,h=a.x+.5*r.gridSize,g=a.y+.5*r.gridSize,y=i.findPathFromOneNodeToAnother(d,f,h,g);o.makeMovementInPursueUnit(e,t,n,a,y,u,s,l,0,c)},t.moveToNextNodeInUpdateUnit=function(e,t,n,a,s,l,u){var c=t.x+.5*r.gridSize,d=t.y+.5*r.gridSize,f=n.x+.5*r.gridSize,h=n.y+.5*r.gridSize,g=i.findPathFromOneNodeToAnother(c,d,f,h);o.makeMovementInUpdateUnit(e,t,n,g,l,a,s,0,u)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(17);t.stopMoving=function(e,t){e.setIsMovingToFalse(),e.setCurrentNode(t),e.setNextNode(t),r.drawUnitIcon(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(214);t.getPriorityUnit=r.getPriorityUnit,t.unitCanMoveToTheNode=r.unitCanMoveToTheNode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(215);t.shuffleUnits=r.shuffleUnits;var i=n(216);t.shuffleID=i.shuffleID},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(217),i=n(3),o=n(8);t.getInterceptedEnemies=function(e){var t;"player"===e.controlBy?t=Object.assign([],i.computerUnits):"computer"===e.controlBy&&(t=Object.assign([],i.playerUnits));for(var n=[],a=r.getInterceptionNodes(e),s=0,l=t;s<l.length;s++)for(var u=l[s],c=0,d=a;c<d.length;c++){var f=d[c];u.currentNode.x==f.x&&u.currentNode.y===f.y&&(o.isUnitInArray(u,n)||n.push(u))}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.getBlockedEnemies=function(e){var t,n=[];"player"===e.controlBy?t=Object.assign([],r.computerUnits):"computer"===e.controlBy&&(t=Object.assign([],r.playerUnits));for(var i=0,o=t;i<o.length;i++){var a=o[i];e.nextNode.x===a.nextNode.x&&e.nextNode.y===a.nextNode.y&&n.push(a)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(225),i=n(226),o=n(51),a=n(52),s=n(3),l=n(22),u=n(9),c=n(227),d=n(228),f=n(13);t.calculateTotalComputerPower=function(){var e=new f.default;a.computerPower.resetAllProperties();for(var n=0,r=s.computerUnits;n<r.length;n++){var i=r[n];t.decomposeUnitProps(i,"computer"),t.decomposePower(e,i)}return e},t.calculateTotalPlayerPower=function(){var e=new f.default;o.playerPower.resetAllProperties();for(var n=0,r=s.playerUnits;n<r.length;n++){var i=r[n];t.decomposeUnitProps(i),t.decomposePower(e,i)}return e},t.calculateRevealedUnitsPower=function(){d.revealedUnitsPower.resetAllProperties();for(var e=0,n=l.revealedUnits;e<n.length;e++){var r=n[e];t.decomposeUnitProps(r,"revealedUnits")}},t.calculateVisiblePlayerPower=function(){c.visiblePlayerUnitsPower.resetAllProperties();for(var e=0,n=u.visibleForComputerUnits;e<n.length;e++){var r=n[e];t.decomposeUnitProps(r,"visiblePlayerUnits")}},t.calculateInitialComputerPower=function(){r.initialComputerPower.resetAllProperties();for(var e=0,n=s.computerUnits;e<n.length;e++){var i=n[e];t.decomposeUnitProps(i,"initialComputer")}},t.calculateInitialPlayerPower=function(){i.initialPlayerPower.resetAllProperties();for(var e=0,n=s.playerUnits;e<n.length;e++){var r=n[e];t.decomposeUnitProps(r,"initialPlayer")}},t.calculateTotalPower=function(){t.calculateTotalComputerPower(),t.calculateTotalPlayerPower()},t.calculateInitialPower=function(){t.calculateInitialComputerPower(),t.calculateInitialPlayerPower()},t.decomposeUnitProps=function(e,n){void 0===n&&(n="player"),"visiblePlayerUnits"===n&&t.decomposePower(c.visiblePlayerUnitsPower,e),"player"===n?t.decomposePower(o.playerPower,e):"computer"===n?t.decomposePower(a.computerPower,e):"initialComputer"===n?t.decomposePower(r.initialComputerPower,e):"initialPlayer"===n?t.decomposePower(i.initialPlayerPower,e):"revealedUnits"===n&&t.decomposePower(d.revealedUnitsPower,e)},t.decomposePower=function(e,t){e.incrementQuantity(),e.addHealth(t.health),e.addSpeed(t.speed),e.addArmour(t.armour),e.addMeleeDamage(t.meleeDamage),e.addMissileDamage(t.missileDamage),e.addDiscipline(t.discipline),e.addMorale(t.morale),e.addCondition(t.condition)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValueInRange=function(e,t){if(e>=t)throw new Error("invalid min or max");if(e>0&&e<1&&t>0&&t<1){var n=Math.round(100*e),r=Math.round(100*t);return.01*(Math.floor(Math.random()*(r-n+1))+n)}return Math.floor(Math.random()*(t-e+1))+e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Attack=0]="Attack",e[e.BeCloseToUnit=1]="BeCloseToUnit",e[e.MoveToNode=2]="MoveToNode"}(t.Command||(t.Command={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(35);t.getClosestUnitToNode=r.getClosestUnitToNode,t.getClosestUnitToOtherUnit=r.getClosestUnitToOtherUnit,t.getBestUnitByProperty=r.getBestUnitByProperty,t.getWorstUnitByProperty=r.getWorstUnitByProperty,t.getBestEnemyByProperty=r.getBestEnemyByProperty,t.getWorstEnemyByProperty=r.getWorstEnemyByProperty,t.getNotFightingUnits=r.getNotFightingUnits,t.getClosestEnemyToUnit=r.getClosestEnemyToUnit,t.getFreeUnits=r.getFreeUnits,t.getUnitsByTask=r.getUnitsByTask,t.getUnitsByPropertyValue=r.getUnitsByPropertyValue,t.getScoutsNumber=r.getScoutsNumber,t.getUnitsWhereValue=r.getUnitsWhereValue},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.calculateTotalUnitsWeight=function(e){for(var t=0,n=0,r=e;n<r.length;n++){t+=r[n].weight}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(53),o=n(23),a=n(36),s=n(9),l=n(5),u=n(55),c=n(50);t.beCloseTo=function(e,n,d,f,h){if(void 0===f&&(f=!1),void 0===h&&(h=!1),d===u.currentCommandNumber){if(h||!e.isFighting&&!e.isMoving){var g=r.getDistanceBetweenTwoUnitsInGrids(e,n);if(n.isFighting){if(0!=n.figthAgainst.all.length){var y=i.getRandomUnit(n.figthAgainst.all);o.attackEnemy(e,y)}}else if(f&&a.getSurroundedUnits(n,s.visibleForComputerUnits,3).length>0){var v=a.getSurroundedUnits(n,s.visibleForComputerUnits,3);y=i.getRandomUnit(v);o.attackEnemy(e,y)}else if(g>=2){var m=r.getSurroundedNodes(n,2),p=l.getRandomNode(m);c.moveTo(e,p.x,p.y)}}setTimeout(function(){t.beCloseTo(e,n,d,f)},2e3)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(56),i=n(37);t.isUnitSelectedInRoster=function(e,t){for(var n=0,o=i.roster;n<o.length;n++){var a=o[n],s=a.x,l=s+r.rosterImgWidth,u=a.y,c=u+r.rosterImgHeight;if(e>=s&&e<l&&t>=u&&t<c)return a}return null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(257);t.armyLayoutHeight=r.armyLayoutHeight,t.armyLayoutWidth=r.armyLayoutWidth;var i=n(259);t.infoLayoutHeight=i.infoLayoutHeight,t.infoLayoutWidth=i.infoLayoutWidth;var o=n(261);t.unitRosterHeight=o.unitRosterHeight,t.unitRosterWidth=o.unitRosterWidth;var a=n(263);t.startBattleStartY=a.startBattleStartY,t.startBattleHeight=a.startBattleHeight,t.startBattleWidth=a.startBattleWidth;var s=n(108);t.titleHeight=s.titleHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(265);t.titleHeight=r.titleHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hoveredUnit=null,t.changeHoveredUnit=function(e){e&&(t.hoveredUnit=e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(111);t.displayArmy=r.displayArmy},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(7),o=n(14),a=n(4),s=n(24),l=n(21);t.displayArmy=function(e){void 0===e&&(e=1);var n=[];if((n="player"===i.side?o.playerArmy:o.computerArmy).length>=1&&n.length>=e){var u=n[e-1],c=u.armyPosition.x,d=u.armyPosition.y;r.mainMenuCtx.drawImage(l.unitIconImages[u.name],c,d,s.armyImgWidth,s.armyImgHeight),e++,t.displayArmy(e)}else{var f=n.length,h=s.armyImgWidth+10,g=s.armyImgHeight+15,y=a.unitRosterWidth+20;c=void 0,d=void 0;if(0===n.length)c=a.unitRosterWidth+20,d=a.titleHeight+60;else{var v=n[n.length-1].armyPosition.x,m=n[n.length-1].armyPosition.y;f%5==0?(c=y,d=m+g):(c=v+h,d=m)}e<=10?(r.mainMenuCtx.fillStyle="#fff",r.mainMenuCtx.fillRect(c,d,s.armyImgWidth,s.armyImgHeight),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.strokeRect(c,d,s.armyImgWidth,s.armyImgHeight),t.emptyBox={i:e,x:c,y:d,filled:!1}):t.emptyBox={i:e,x:c,y:d,filled:!0}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(275);t.drawRemoveIcon=r.drawRemoveIcon},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),i=n(14),o=n(24);t.isUnitShouldBeRemoved=function(e,t){for(var n=0,a="player"===r.side?i.playerArmy:i.computerArmy;n<a.length;n++){var s=a[n],l=s.armyPosition.x+o.armyImgWidth-15,u=s.armyPosition.x+o.armyImgWidth-5,c=s.armyPosition.y+4,d=s.armyPosition.y+15;if(e>=l&&e<u&&t>=c&&t<d)return s}return null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(281);t.drawMoneyBox=r.drawMoneyBox},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(283);t.changeTotalGold=r.changeTotalGold,t.fillTotalGold=r.fillTotalGold,t.showTotalGold=r.showTotalGold},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(40);t.displayChosenUnits=r.displayChosenUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(293);t.drawBottomLayout=r.drawBottomLayout;var i=n(118);t.fillLayout=i.fillLayout},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2);t.fillLayout=function(){i.mainMenuCtx.clearRect(0,r.startBattleStartY,r.startBattleWidth,r.startBattleHeight),i.mainMenuCtx.fillStyle="#2c2f33",i.mainMenuCtx.fillRect(0,r.startBattleStartY,r.startBattleWidth,r.startBattleWidth)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(15);t.onChooseBattleSettings=function(e,t){var n=r.battleSettingsX,i=r.battleSettingsX+r.width,o=r.battleSettingsY,a=r.battleSettingsY+r.height;return e>=n&&e<i&&t>=o&&t<a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(15);t.onChooseUnitInfo=function(e,t){var n=r.unitInfoX,i=r.unitInfoX+r.width,o=r.unitInfoY,a=r.unitInfoY+r.height;return e>=n&&e<i&&t>=o&&t<a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(300);t.displayInfo=r.displayInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(123);t.battleSettingSwitcher=r.battleSettingSwitcher;var i=n(301);t.showSwither=i.showSwither;var o=n(124);t.unitInfoSwitcher=o.unitInfoSwitcher},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(15),o=n(39);t.battleSettingSwitcher=function(){o.showBattleSettings?r.mainMenuCtx.fillStyle="#fff":r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.battleSettingsX,i.battleSettingsY,i.width,i.height),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.strokeRect(i.battleSettingsX,i.battleSettingsY,i.width,i.height),r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Battle Settings",i.battleSettingsX+5,i.battleSettingsY+20)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(15),o=n(39);t.unitInfoSwitcher=function(){o.showUnitInfo?r.mainMenuCtx.fillStyle="#fff":r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.unitInfoX,i.unitInfoY,i.width,i.height),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.strokeRect(i.unitInfoX,i.unitInfoY,i.width,i.height),r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Unit Info",i.unitInfoX+35,i.unitInfoY+20)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(27),i=n(18),o=n(0);t.drawLoadingCanvas=function(){i.loadingCanvas.style.zIndex="7",r.loadingCtx.fillStyle="#ccc",r.loadingCtx.fillRect(0,0,o.MAP_WIDTH,o.CANVAS_HEIGHT),r.loadingCtx.font="48px serif",r.loadingCtx.fillStyle="#000";var e=o.MAP_WIDTH/2-100,t=o.CANVAS_HEIGHT/2-50;r.loadingCtx.fillText("Loading...",e,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(314);t.deleteNodeFromComputerNodes=r.deleteNodeFromComputerNodes,t.deleteNodeFromPlayerNodes=r.deleteNodeFromPlayerNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.computerUnitsNodes=[],t.initializeComputerUnitsNodes=function(){return new Promise(function(e){for(var n=r.MAP_WIDTH-2*r.gridSize,o=r.MAP_WIDTH,a=r.MAP_HEIGHT,s=n;s<=o;s+=r.gridSize)for(var l=0;l<=a;l+=r.gridSize){var u=i.getNodeFromMap(s,l);u&&t.computerUnitsNodes.push(u)}e()})},t.deleteNodeFromComputerNodes=function(e){e&&(t.computerUnitsNodes=i.deleteObjectFromArray(e,t.computerUnitsNodes))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.playerUnitsNodes=[],t.initializePlayerUnitsNodes=function(){return new Promise(function(e){for(var n=2*r.gridSize,o=r.MAP_HEIGHT,a=0;a<=n;a+=r.gridSize)for(var s=0;s<=o;s+=r.gridSize){var l=i.getNodeFromMap(a,s);l&&t.playerUnitsNodes.push(l)}e()})},t.deleteNodeFromPlayerNodes=function(e){e&&(t.playerUnitsNodes=i.deleteObjectFromArray(e,t.playerUnitsNodes))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(26).launchGame()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(66);t.launchBattle=r.launchBattle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.auxiliaryCanvas=document.getElementById("auxiliary"),t.auxiliaryCanvas&&(t.auxiliaryCanvas.width=r.MAP_WIDTH,t.auxiliaryCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAP_WIDTH=1520,t.MAP_HEIGHT=600,t.CANVAS_HEIGHT=720},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gridSize=40},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(43);t.mainMenuMode=r.mainMenuMode,t.setBattleMode=r.setBattleMode,t.setMainMenuMode=r.setMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.backgroundCanvas=document.getElementById("background"),t.backgroundCanvas&&(t.backgroundCanvas.width=r.MAP_WIDTH,t.backgroundCanvas.height=r.MAP_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.canvas=document.getElementById("canvas"),t.canvas&&(t.canvas.width=r.MAP_WIDTH,t.canvas.height=r.CANVAS_HEIGHT,t.canvas.style.border="1px solid")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.terrain=document.getElementById("terrain"),t.terrain&&(t.terrain.width=r.MAP_WIDTH,t.terrain.height=r.MAP_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.dragAndDropCanvas=document.getElementById("dragAndDrop"),t.dragAndDropCanvas&&(t.dragAndDropCanvas.width=r.MAP_WIDTH,t.dragAndDropCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.mainMenu=document.getElementById("mainMenu"),t.mainMenu&&(t.mainMenu.width=r.MAP_WIDTH,t.mainMenu.height=r.CANVAS_HEIGHT,t.mainMenu.style.border="1px solid")},function(e,t,n){"use strict";n.r(t);var r=n(67);n.d(t,"loadImage",function(){return r.loadImage})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(142);t.addNodeIntoArray=r.addNodeIntoArray},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(143);t.addNodeIntoArray=function(e,t){var n=Object.assign([],t);return r.isObjectInArray(e,t)||n.push(e),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(68);t.deleteObjectFromArray=r.deleteObjectFromArray,t.isObjectInArray=r.isObjectInArray,t.isObjectEmpty=r.isObjectEmpty},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(145);t.getDistanceBetweenUnitAndNodeInGrids=r.getDistanceBetweenUnitAndNodeInGrids,t.getDistanceBetweenTwoNodesInGrids=r.getDistanceBetweenTwoNodesInGrids},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(42);t.getDistanceBetweenUnitAndNodeInGrids=function(e,t){var n=t.x,i=t.y,o=e.currentNode.x,a=e.currentNode.y;return Math.abs(o-n)/r.gridSize+Math.abs(a-i)/r.gridSize},t.getDistanceBetweenTwoNodesInGrids=function(e,t){var n=e.x,i=e.y,o=t.x,a=t.y;return Math.abs(n-o)/r.gridSize+Math.abs(i-a)/r.gridSize}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(147);t.getNodeFromArray=r.getNodeFromArray;var i=n(148);t.getClosestToEnemySideNodes=i.getClosestToEnemySideNodes,t.getClosestToEnemyNodes=i.getClosestToEnemyNodes;var o=n(150);t.getFarthestNodeFromEnemy=o.getFarthestNodeFromEnemy,t.getFarthestXNodes=o.getFarthestXNodes;var a=n(19);t.getNodeFromMap=a.getNodeFromMap;var s=n(164);t.getMinValueFromNodes=s.getMinValueFromNodes,t.getMaxValueFromNodes=s.getMaxValueFromNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getNodeFromArray=function(e,t){for(var n=0,r=t;n<r.length;n++){var i=r[n];if(i.x===e.x&&i.y&&e.y)return i}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(69),o=n(28);t.getClosestToEnemySideNodes=function(e){for(var t=[],n=r.getMinValueFromNodes("x",e),i=0,o=e;i<o.length;i++){var a=o[i];a.x===n&&t.push(a)}return t},t.getClosestToEnemyNodes=function(e){var n=[];if(0===o.hidingEnemies.length)n=t.getClosestToEnemySideNodes(e);else for(var r=0,a=o.hidingEnemies;r<a.length;r++){var s=a[r],l=i.getClosestNodeToUnit(s,e);n.push(l)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(42),i=n(5);t.getClosestNodeToUnit=function(e,t){for(var n=t[0],r=1;r<t.length;++r){var o=i.getDistanceBetweenUnitAndNodeInGrids(e,n);i.getDistanceBetweenUnitAndNodeInGrids(e,t[r])<o&&(n=t[r])}return n},t.getBestUnitsByProperty=function(e,t){for(var n=Object.assign([],e),r=[],i=n[0],o=0;o<n.length;++o)i[t]<n[o][t]&&(i=n[o]);for(var a=0,s=n;a<s.length;a++){var l=s[a];l[t]===i[t]&&r.push(l)}return r},t.findClosestUnitsToTheNodeCenter=function(e,t){var n,i=Object.assign([],t),o=e.x+.5*r.gridSize,a=e.y+.5*r.gridSize,s=[],l=i[0];if(i.length>1)for(var u=1;u<i.length;++u){var c=l.centerX,d=l.centerY,f=i[u].centerX,h=i[u].centerY,g=Math.abs(c-o),y=Math.abs(d-a),v=Math.abs(f-o),m=Math.abs(h-a),p=Math.sqrt(Math.pow(g,2)+Math.pow(y,2));n=p,(_=Math.sqrt(Math.pow(v,2)+Math.pow(m,2)))<p&&(l=i[u],n=_)}for(var M=0,U=i;M<U.length;M++){var _,b=U[M];f=b.centerX,h=b.centerY,v=Math.abs(f-o),m=Math.abs(h-a);(_=Math.sqrt(Math.pow(v,2)+Math.pow(m,2)))===n&&s.push(b)}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.getFarthestNodeFromEnemy=function(e,t){for(var n=t[0],i=0;i<t.length;++i){var o=r.getDistanceBetweenUnitAndNodeInGrids(e,n);r.getDistanceBetweenUnitAndNodeInGrids(e,t[i])>o&&(n=t[i])}return n},t.getFarthestXNodes=function(e){for(var t=[],n=r.getMinValueFromNodes("x",e),i=r.getMaxValueFromNodes("x",e),o=0,a=e;o<a.length;o++){var s=a[o];s.x!==n&&s.x!==i||t.push(s)}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(152);t.clearMap=r.clearMap},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0);t.clearMap=function(){r.ctx.clearRect(0,0,i.MAP_WIDTH,i.CANVAS_HEIGHT)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(154);t.drawGrid=r.drawGrid},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0);t.drawGrid=function(){for(var e=0;e<=i.MAP_HEIGHT;e+=i.gridSize)for(var t=0;t<=i.MAP_WIDTH;t+=i.gridSize)r.ctx.strokeRect(t,e,i.gridSize,i.gridSize)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(156);t.addNeighbors=r.addNeighbors,t.neighbors=r.neighbors},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.neighbors=function(e,t){for(var n=[],i=0,o=[{x:-r.gridSize,y:-r.gridSize},{x:0,y:-r.gridSize,distance:10},{x:r.gridSize,y:-r.gridSize},{x:-r.gridSize,y:0},{x:r.gridSize,y:0},{x:-r.gridSize,y:r.gridSize},{x:0,y:r.gridSize},{x:r.gridSize,y:r.gridSize}];i<o.length;i++){var a=o[i],s={x:t.x+a.x,y:t.y+a.y};if(s.x>=0&&s.x<=r.MAP_WIDTH&&s.y>=0&&s.y<=r.MAP_HEIGHT){for(var l=void 0,u=0,c=e;u<c.length;u++){var d=c[u];s.x===d.x&&s.y===d.y&&(l=d)}l&&n.push(l)}}return n},t.addNeighbors=function(e){return new Promise(function(n){for(var r=0,i=e;r<i.length;r++){var o=i[r],a=t.neighbors(e,o);o.neighbors=a}n()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(70);t.createNodes=r.createNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=function(){return function(e,t,n){if(t%r.gridSize!=0||n%r.gridSize!=0)throw new Error("Node coordinates do not corresponds to map grid size");if(!(t>=0&&t<=r.MAP_WIDTH&&n>=0&&n<=r.MAP_HEIGHT))throw new Error("Node is out of bound");this.id=e,this.x=t,this.y=n}}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(160);t.createOneObstacle=r.createOneObstacle;var i=n(161);t.createObstacles=i.createObstacles;var o=n(162);t.createUnitObstacle=o.createUnitObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.createOneObstacle=function(e,t,n,o){void 0===o&&(o="forest");var a={x:t,y:n};return"forest"===o?i.drawObstacle(a.x,a.y,r.gridSize,r.gridSize,"./src/img/terrain/trees.png"):"mountain"===o?i.drawObstacle(a.x,a.y,r.gridSize,r.gridSize,"./src/img/terrain/mountain.png"):"river"===o&&i.drawObstacle(a.x,a.y,r.gridSize,r.gridSize,"./src/img/terrain/river.jpg"),i.deleteObjectFromArray(a,e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),i=n(0),o=n(1);t.createObstacles=function(e,t,n,a,s){void 0===s&&(s="forest");for(var l=r.initialMap,u=e;u<=t;u+=i.gridSize)for(var c=n;c<=a;c+=i.gridSize){var d={x:u,y:c};l=o.deleteObjectFromArray(d,l);var f=void 0;"forest"===s?f="./src/img/terrain/trees.png":"mountain"===s?f="/src/img/terrain/mountain.png":"river"===s&&(f="./src/img/terrain/river.jpg"),o.drawObstacle(d.x,d.y,i.gridSize,i.gridSize,f)}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.createUnitObstacle=function(e,t,n){var i={x:t,y:n};return r.deleteObjectFromArray(i,e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(10);t.findXInSearchMap=function(e,n,o){if(n>=e){var a=Math.floor(e+(n-e)/2),s=a*r.gridSize;if(o>=s&&o<s+r.gridSize)return i.searchMap[s];if(o===s+r.gridSize)return i.searchMap[s+r.gridSize];if(s>o)return t.findXInSearchMap(e,a-1,o);if(s<o)return t.findXInSearchMap(a+1,n,o)}},t.coordinateYBinarySearch=function(e,n,i,o){if(n>=e){var a=Math.floor(e+(n-e)/2),s=o[a];if(!s)return null;if(i>=s.y&&i<s.y+r.gridSize)return o[a];if(i===s.y+r.gridSize)return o[a+1];if(s.y>i)return t.coordinateYBinarySearch(e,a-1,i,o);if(s.y<i)return t.coordinateYBinarySearch(a+1,n,i,o)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMinValueFromNodes=function(e,t){for(var n=t[0],r=1;r<t.length;++r)n[e]>t[r][e]&&(n=t[r]);return n[e]},t.getMaxValueFromNodes=function(e,t){for(var n=t[0],r=1;r<t.length;++r)n[e]<t[r][e]&&(n=t[r]);return n[e]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(166);t.getRandomNode=r.getRandomNode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(71);t.getRandomNode=function(e){return r.shuffleNodes(e)[0]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r};t.assignRandomValue=function(e){for(var t=0,n=e;t<n.length;t++){var r=n[t],i=Math.random();r.randomValue=i}return e},t.shuffleNodes=function(e){for(var n=Object.assign([],e),i=t.assignRandomValue(n),o=0;o<i.length;++o){for(var a=o,s=o+1;s<i.length;++s)i[s].randomValue===i[a].randomValue&&(a=s),i[s].randomValue<i[a].randomValue&&(a=s);a!==o&&r(i,a,o)}for(var l=[],u=0,c=i;u<c.length;u++){var d=c[u];delete d.randomValue,l.push(d)}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(169);t.getSurroundedBlockedNodes=r.getSurroundedBlockedNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(29),i=n(3),o=n(1);t.getSurroundedBlockedNodes=function(e){var t,n=r.getSurroundedNodes(e,1),a=[];t="player"===e.controlBy?i.playerUnits:i.computerUnits;for(var s=o.deleteUnitFromArray(e,t),l=0,u=n;l<u.length;l++)for(var c=u[l],d=0,f=s;d<f.length;d++){var h=f[d];h.currentNode.x===c.x&&h.currentNode.y===c.y&&(a=o.addNodeIntoArray(c,a)),h.nextNode.x===c.x&&h.nextNode.y===c.y&&(a=o.addNodeIntoArray(c,a))}return a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(30);t.getSurroundedEnemies=function(e,t){void 0===t&&(t=1);var n=[],o=[];o="computer"===e.controlBy?Object.assign([],r.playerUnits):Object.assign([],r.computerUnits);for(var a=0,s=i.getSurroundedNodes(e,t);a<s.length;a++)for(var l=s[a],u=0,c=o;u<c.length;u++){var d=c[u];l.x===d.x&&l.y===d.y&&n.push(d)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(30),o=n(19),a=n(8);t.getSurroundedAllies=function(e){var t,n=[],s=[];s="computer"===e.controlBy?Object.assign([],r.computerUnits):Object.assign([],r.playerUnits),t=a.deleteUnitFromArray(e,s);for(var l=0,u=i.getSurroundedNodes(e,3);l<u.length;l++)for(var c=u[l],d=0,f=t;d<f.length;d++){var h=f[d],g=o.getNodeFromMap(h.x,h.y);c.x===g.x&&c.y===g.y&&n.push(h)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(173);t.getUnitsMinProperty=r.getUnitsMinProperty,t.getUnitsMaxProperty=r.getUnitsMaxProperty;var i=n(175);t.anotherUnitIsOnTheWay=i.anotherUnitIsOnTheWay;var o=n(8);t.addUnitIntoArray=o.addUnitIntoArray,t.deleteUnitFromArray=o.deleteUnitFromArray,t.deleteUnitFromArmy=o.deleteUnitFromArmy,t.getDistanceBetweenTwoUnitsInGrids=o.getDistanceBetweenTwoUnitsInGrids,t.isUnitInArray=o.isUnitInArray},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(174);t.getUnitsMinProperty=r.getUnitsMinProperty,t.getUnitsMaxProperty=r.getUnitsMaxProperty},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getUnitsMinProperty=function(e,t){if(t.length>0){for(var n=t[0][e],r=1;r<t.length;++r)n>t[r][e]&&(n=t[r][e]);return n}},t.getUnitsMaxProperty=function(e,t){if(t.length>0){for(var n=t[0][e],r=1;r<t.length;++r)n<t[r][e]&&(n=t[r][e]);return n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(176);t.anotherUnitIsOnTheWay=r.anotherUnitIsOnTheWay;var i=n(177);t.getUnitsOnTheNode=i.getUnitsOnTheNode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(8),i=n(3);t.anotherUnitIsOnTheWay=function(e){for(var t=Object.assign([],i.units),n=r.deleteUnitFromArray(e,t),o=e.nextNode,a=0,s=n;a<s.length;a++){var l=s[a];if(o.x===l.currentNode.x&&o.y===l.currentNode.y)return!0;if(o.x===l.nextNode.x&&o.y===l.nextNode.y)return!0}return!1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(8);t.getUnitsOnTheNode=function(e,t,n){void 0===n&&(n=null);Object.assign([],t);var i=Object.assign([],t);n&&(i=r.deleteUnitFromArray(n,t));for(var o=e.x,a=e.y,s=[],l=0,u=i;l<u.length;l++){var c=u[l],d=c.currentNode.x,f=c.currentNode.y,h=c.nextNode.x,g=c.nextNode.y;d===o&&f===a?s.push(c):h===o&&g===a&&s.push(c)}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(179);t.drawBackground=r.drawBackground;var i=n(180);t.drawObstacle=i.drawObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(1),o=n(0);t.drawBackground=function(e){i.loadImage(e,function(e,t){r.backgroundCtx.drawImage(t,0,0,o.MAP_WIDTH,o.MAP_HEIGHT)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(1);t.drawObstacle=function(e,t,n,o,a){i.loadImage(a,function(i,a){r.terrainCtx.drawImage(a,e,t,n,o)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(74),i=n(46);t.chooseUnitType=function(e,t,n,o){if("archers"===e||"Archers"===e)return new r.Archers(i.unitId,t,n,o);if("heavyCavalry"===e||"HeavyCavalry"===e)return new r.HeavyCavalry(i.unitId,t,n,o);if("heavyInfantry"===e||"HeavyInfantry"===e)return new r.HeavyInfantry(i.unitId,t,n,o);if("hoplites"===e||"Hoplites"===e)return new r.Hoplites(i.unitId,t,n,o);if("lightCavalry"===e||"LightCavalry"===e)return new r.LightCavalry(i.unitId,t,n,o);if("lightInfantry"===e||"LightInfantry"===e)return new r.LightInfantry(i.unitId,t,n,o);if("militia"===e||"Militia"===e)return new r.Militia(i.unitId,t,n,o);if("peltasts"===e||"Peltasts"===e)return new r.Peltasts(i.unitId,t,n,o);if("pikemen"===e||"Pikemen"===e)return new r.Pikemen(i.unitId,t,n,o);if("scouts"===e||"Scouts"===e)return new r.Scouts(i.unitId,t,n,o);throw new Error("No existing unit type "+e)}},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="High range skirmishers armed with bows",o.cost=50,o.advantageOver=["Pikemen","Hoplites"],o.vulnerableAgainst=["LightCavalry","HeavyCavalry"],o.name="Archers",o.type="skirmishers",o.imgSrc="./src/img/units/pikemen.jpg",o.health=25,o.speed=25,o.armour=2,o.range=8,o.mobility=4,o.meleeDamage=7,o.missileDamage=7,o.shotsRemained=10,o.charge=1,o.discipline=40,o.weight=20,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(184);t.radius=r.radius},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.radius=13},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="heavy and cavalry aimed to break through enemy's lines",o.cost=150,o.advantageOver=["Archers","Peltasts"],o.vulnerableAgainst=["Pikemen","Hoplites"],o.name="HeavyCavalry",o.type="cavalry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=150,o.speed=35,o.armour=8,o.range=0,o.mobility=5,o.meleeDamage=12,o.missileDamage=0,o.charge=8,o.discipline=70,o.initialWeight=100,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Heavily armed infantry trained to mount frontal assaults",o.cost=70,o.advantageOver=["LightInfantry","Militia"],o.vulnerableAgainst=[],o.name="HeavyInfantry",o.type="infantry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=170,o.speed=18,o.armour=8,o.range=0,o.mobility=3,o.meleeDamage=12,o.missileDamage=0,o.charge=4,o.discipline=70,o.initialWeight=60,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Infantry armed with spears and shields",o.cost=80,o.advantageOver=["LightCavalry","HeavyCavalry"],o.vulnerableAgainst=["Archers","Peltasts"],o.name="Hoplites",o.type="spearmen",o.imgSrc="./src/img/units/hoplites.jpg",o.health=190,o.speed=12,o.armour=7,o.range=0,o.mobility=1,o.meleeDamage=16,o.missileDamage=0,o.charge=1,o.discipline=90,o.initialWeight=70,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Light and fast cavalry",o.cost=90,o.advantageOver=["Archers","Peltasts"],o.vulnerableAgainst=["Hoplites","Pikemen"],o.name="LightCavalry",o.type="cavalry",o.imgSrc="./src/img/units/lightCavalry.png",o.health=80,o.speed=40,o.armour=2,o.range=0,o.mobility=7,o.meleeDamage=8,o.missileDamage=0,o.charge=6,o.discipline=40,o.initialWeight=80,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Frontline soldiers trained for hand-to-hand combat with their enemies",o.cost=30,o.advantageOver=[],o.vulnerableAgainst=[],o.name="LightInfantry",o.type="infantry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=80,o.speed=22,o.armour=2,o.range=0,o.mobility=5,o.meleeDamage=8,o.missileDamage=0,o.charge=2,o.discipline=30,o.initialWeight=40,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="A military force that is raised from the civil population to supplement a regular army in an emergency.",o.cost=20,o.advantageOver=[],o.vulnerableAgainst=[],o.name="Militia",o.type="infantry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=120,o.speed=25,o.armour=1,o.range=0,o.mobility=3,o.meleeDamage=7,o.missileDamage=0,o.charge=1,o.discipline=10,o.initialWeight=30,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Low range skirmishers armed with javelins",o.cost=50,o.advantageOver=["Hoplites","Pikemen"],o.vulnerableAgainst=["LightCavalry","HeavyCavalry"],o.name="Peltasts",o.type="skirmishers",o.imgSrc="./src/img/units/pikemen.jpg",o.health=50,o.speed=22,o.armour=4,o.range=3,o.ammunition=10,o.mobility=6,o.meleeDamage=4,o.missileDamage=12,o.shotsRemained=5,o.charge=1,o.discipline=50,o.initialWeight=25,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Infantry armed with long spears",o.cost=80,o.advantageOver=["HeavyCavalry","LightCavalry"],o.vulnerableAgainst=["Archers","Peltasts"],o.name="Pikemen",o.type="spearmen",o.imgSrc="./src/img/units/pikemen.jpg",o.health=120,o.speed=10,o.armour=4,o.range=0,o.mobility=1,o.meleeDamage=24,o.missileDamage=0,o.charge=1,o.discipline=80,o.initialWeight=90,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="small and mobile band that inteded to descover the map",o.cost=20,o.advantageOver=[],o.vulnerableAgainst=[],o.name="Scouts",o.type="scouts",o.imgSrc="./src/img/units/pikemen.jpg",o.health=60,o.speed=27,o.armour=1,o.range=0,o.mobility=9,o.meleeDamage=7,o.missileDamage=0,o.charge=1,o.discipline=10,o.initialWeight=20,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(16),o=n(3),a=n(31);t.onChooseUnit=function(e,t,n){for(var s=null,l=0,u=e;l<u.length;l++){var c=(p=u[l]).x+r.gridSize,d=p.y+r.gridSize;if(t>=p.x&&t<c&&n>=p.y&&n<d){console.log("unit",p.name," was chosen"),p.isCurrentlyChosen=!0,s=p;break}}for(var f=a.UNIT_LEFT_PANEL_WIDTH,h=r.CANVAS_HEIGHT-a.UNIT_PANEL_HEIGHT,g=h+a.UNIT_ICON_HEIGHT,y=0;y<o.playerUnits.length;++y){var v=f+a.UNIT_ICON_WIDTH*(y+1),m=v+a.UNIT_ICON_WIDTH;if(t>=v&&t<m&&n>=h&&n<g){var p;(p=o.playerUnits[y]).isCurrentlyChosen=!0,s=p;break}}i.assignCurrentlyChosenUnit(s)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(75);t.createUnit=r.createUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(80);t.armourPenetration=r.armourPenetration;var i=n(81);t.checkAttackSide=i.checkAttackSide;var o=n(199);t.charge=o.charge,t.calculateCharge=o.calculateCharge;var a=n(47);t.calculateDamage=a.calculateDamage,t.calculateDamageBaseOnEnemyPosition=a.calculateDamageBaseOnEnemyPosition,t.calculateDamageWhenItsLessThanOne=a.calculateDamageWhenItsLessThanOne;var s=n(82);t.removeUnitFromEnemiesFightAgainst=s.removeUnitFromEnemiesFightAgainst,t.findUnitInFightAgainst=s.findUnitInFightAgainst;var l=n(83);t.isUnitFighting=l.isUnitFighting,t.checkHealth=l.checkHealth,t.meleeAttack=l.meleeAttack,t.meleeCombat=l.meleeCombat;var u=n(88);t.refreshment=u.refreshment},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.armourPenetration=function(e,t){var n=Math.random();return e>t?n<.1?e:e<.1?Math.round(e-t/2):e-t:e<=t?n<.2?1:0:void 0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.checkAttackSide=function(e,t){var n=t.currentNode,i=e.currentNode;if(t.figthAgainst.front.id===e.id)return"front";if(!t.isFighting&&t.isMoving){var o=t.nextNode;return o.x===i.x&&o.y===i.y?"front":o.x-i.x>r.gridSize||o.y-i.y>r.gridSize?"back":"side"}if(t.isFighting){var a=t.figthAgainst.front.currentNode;return i.x===n.x&&i.x===a.x?"back":i.y===n.y&&i.y===a.y?"back":Math.abs(a.x-n.x)===r.gridSize&&Math.abs(a.x-i.x)===2*r.gridSize?"back":Math.abs(a.y-n.y)===r.gridSize&&Math.abs(a.y-i.y)===2*r.gridSize?"back":"side"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(200);t.charge=r.charge,t.calculateCharge=r.calculateCharge},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(81),i=n(47);t.charge=function(e,n){var i=r.checkAttackSide(e,n),o=t.calculateCharge(e,n,i);n.health=Math.round(n.health-o)},t.calculateCharge=function(e,t,n){var r;return"front"===n?(r=e.charge-t.armour)<1?i.calculateDamageWhenItsLessThanOne(r):r:"side"===n?(r=1.5*e.charge-t.armour)<1?i.calculateDamageWhenItsLessThanOne(r):r:"back"===n?e.charge:void 0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.calculateDamage=function(e,t){var n=e.health,r=e.condition;return n>=80&&r>=80?t:n>=80&&r>=50||r>=80&&n>=50?Math.round(.9*t):n>=50&&r>=50?Math.round(.8*t):n>=50||r>=50?Math.round(.7*t):Math.round(.6*t)},t.calculateDamageBaseOnEnemyPosition=function(e,n){return e<=1?t.calculateDamageWhenItsLessThanOne(e):"front"===n?e:"flank"===n?(r=Math.round(.3*e))<=1?t.calculateDamageWhenItsLessThanOne(r):r:"rear"===n?(r=Math.round(.1*e))<=1?t.calculateDamageWhenItsLessThanOne(r):r:void 0;var r},t.calculateDamageWhenItsLessThanOne=function(e){return Math.random()>.5?0:1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.removeUnitFromEnemiesFightAgainst=function(e){var t;if(0!==(t="computer"===e.controlBy?r.playerUnits:r.computerUnits).length)for(var n=0,i=t;n<i.length;n++){i[n].removeEnemyFromFightAgainst(e)}},t.findUnitInFightAgainst=function(e){var t=[],n=[];"computer"===e.controlBy?t=r.playerUnits:"player"===e.controlBy&&(t=r.computerUnits);for(var i=0,o=t;i<o.length;i++){var a=o[i],s=a.figthAgainst;s.front.id===e.id?n.push(a):s.rear.id===e.id&&n.push(a);for(var l=0,u=s.flank;l<u.length;l++){u[l].id===e.id&&n.push(a)}}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(84),o=n(86),a=n(82),s=n(87),l=n(2),u=n(88),c=n(0);t.checkHealth=function(){return new Promise(function(e){for(var t=0,n=r.units;t<n.length;t++){var d=n[t];if(d.health<=0){if("player"===d.controlBy&&o.removeUnitFromSpottedUnits(d),a.findUnitInFightAgainst(d).length>0)for(var f=0,h=a.findUnitInFightAgainst(d);f<h.length;f++){h[f].removeEnemyFromFightAgainst(d)}i.removeUnit(d),l.ctx.clearRect(d.x,d.y,c.gridSize,c.gridSize)}else s.isUnitFighting(d),u.refreshment(d)}e()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(9),o=n(22),a=n(32),s=n(85);t.removeUnit=function(e){e&&(a.clearUnitImage(e),r.removeFromUnits(e),i.removeUnitFromVisibleUnits(e),s.removeUnitFromSpottedUnits(e),"player"===e.controlBy&&o.removeFromRevealedUnits(e))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(16);t.assignCurrentlyChosenUnit=r.assignCurrentlyChosenUnit;var i=n(86);t.addUnitToSpottedUnits=i.addUnitToSpottedUnits,t.spottedUnits=i.spottedUnits,t.removeUnitFromSpottedUnits=i.removeUnitFromSpottedUnits;var o=n(46);t.incUnitId=o.incUnitId,t.unitId=o.unitId;var a=n(9);t.addUnitIntoVisibleUnits=a.addUnitIntoVisibleUnits,t.removeUnitFromVisibleUnits=a.removeUnitFromVisibleUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.refreshment=function(e){e.isFighting||e.isMoving||e.condition<100&&e.increaseCondition(1)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(89),i=n(47),o=n(80),a=n(84),s=n(17),l=n(90);t.meleeAttack=function(e,t,n){return void 0===n&&(n="front"),new Promise(function(u){var c=r.randomizeMeleeDamage(e.meleeDamage),d=i.calculateDamage(e,c);d<1&&(d=1);var f=i.calculateDamageBaseOnEnemyPosition(d,n),h=t.armour;if(t.health<=0)return console.error("defendUnit is destroyed"),e.removeEnemyFromFightAgainst(t),a.removeUnit(t),void l.displayUnitIcons();t.health=Math.round(t.health-o.armourPenetration(f,h)),e.condition-=1,s.drawUnitIcon(t),u()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(1),o=n(83),a=n(17);t.meleeCombat=function(){for(var e=0,t=r.units;e<t.length;e++){var n=t[e];if(!i.isObjectEmpty(n.figthAgainst.front)){if(!n.figthAgainst.front.isFighting)return void a.drawUnitIcon(n);o.meleeAttack(n,n.figthAgainst.front,"front")}if(!i.isObjectEmpty(n.figthAgainst.rear)){if(!n.figthAgainst.rear.isFighting)return void a.drawUnitIcon(n);o.meleeAttack(n,n.figthAgainst.rear,"rear")}if(n.figthAgainst.flank.length>0)for(var s=0,l=n.figthAgainst.flank;s<l.length;s++){var u=l[s];if(!u.isFighting)return void a.drawUnitIcon(n);o.meleeAttack(n,u,"flank")}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(210);t.attackEnemy=r.attackEnemy;var i=n(50);t.moveTo=i.moveTo;var o=n(33);t.pursueUnit=o.pursueUnit;var a=n(34);t.updateUnit=a.updateUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(19),i=n(10),o=n(33),a=n(49);t.attackEnemy=function(e,t){if(e.isMoving)e.setUnitToPursue(t);else{var n=e.x,s=e.y,l=t.x,u=t.y;e.setUnitToPursue(t);var c=r.getNodeFromMap(n,s),d=r.getNodeFromMap(l,u),f=a.aStar(i.initialMap,c,d);o.pursueUnit(e,t,l,u,0,f,!0)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.findPathFromOneNodeToAnother=function(e,t,n,r){var i=n-e,o=r-t,a=e,s=n,l=t,u=r,c=[];if(a===s&&l===u)return c.push({x:a,y:l}),c;if(a<=s){if(Math.abs(i)>=Math.abs(o)){if(l>u)for(var d=a;d<=s;++d){var f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}if(l<=u)for(d=a;d<=s;++d){f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}}if(Math.abs(i)<Math.abs(o)){if(l>u)for(f=l;f>=u;--f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}if(l<=u)for(f=l;f<=u;++f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}}}if(a>s){if(Math.abs(i)>=Math.abs(o)){if(l>u)for(d=a;d>=s;--d){f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}if(l<=u)for(d=a;d>=s;--d){f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}}if(Math.abs(i)<Math.abs(o)){if(l>u)for(f=l;f>=u;--f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}if(l<=u)for(f=l;f<=u;++f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}}}return c}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.calculateChanceToGetOutOfCombat=function(e){var t=0,n=0,i=(e.speed,e.mobility),o=0,a=!1;if(r.isObjectEmpty(e.figthAgainst.front)||(n++,o+=e.figthAgainst.front.speed),r.isObjectEmpty(e.figthAgainst.rear)||(n++,o+=e.figthAgainst.rear.speed,a=!0),e.figthAgainst.flank.length>0)for(var s=0,l=e.figthAgainst.flank;s<l.length;s++){n++,o+=l[s].speed}return 1===n?t-=.1:2===n?t-=.3:n>2&&n<=4?t-=.4:n>4&&(t-=.5),a&&(t-=.5),e.condition>=50&&e.condition<80?t-=.1:e.condition>=25&&e.condition<50?t-=.2:e.condition<25&&(t-=.4),e.speed>=o?e.speed/o>=3?t+=.8:e.speed/o>2&&e.speed/o<3?t+=.6:e.speed/o>=1?t+=.4:t+=.2:o/e.speed<=1.25&&(t+=.1),e.mobility>=2&&e.mobility<3?t+=.1:i>=3&&i<5?t+=.3:5===i?t+=.5:i>=5&&i<7?t+=.7:i>=7&&i<8?t+=.8:i>=8&&(t+=.9),t<=0&&(t=.1),t>=1&&(t=.9),t},t.unitCanGetOutOfCombat=function(e){var n=t.calculateChanceToGetOutOfCombat(e),r=Math.random();return r>=0&&r<=n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(0),o=n(2),a=n(34),s=n(33);t.makeMovementInUpdateUnit=function(e,n,s,l,u,c,d,f,h){if(e.x===s.x&&e.y===s.y&&(h++,a.updateUnit(e,u,h,c,d,null,!1)),!(f>=l.length)){f>0?(l[f-1].x-.5*i.gridSize,l[f-1].y-.5*i.gridSize):(l[f].x-.5*i.gridSize,l[f].y-.5*i.gridSize);var g=e.centerX-e.radius,y=e.centerY-e.radius,v=2*e.radius;o.ctx.clearRect(g,y,v,v);var m=l[f].x,p=l[f].y;e.setX(m-.5*i.gridSize),e.setY(p-.5*i.gridSize),r.drawUnit(e),setTimeout(function(){f++,t.makeMovementInUpdateUnit(e,n,s,l,u,c,d,f,h)},Math.round(1e3/e.speed))}},t.makeMovementInPursueUnit=function(e,n,a,l,u,c,d,f,h,g){if(e.x===l.x&&e.y===l.y&&(g++,s.pursueUnit(e,n,d,f,g,c,!1)),!(h>=u.length)){h>0?(u[h-1].x-.5*i.gridSize,u[h-1].y-.5*i.gridSize):(u[h].x-.5*i.gridSize,u[h].y-.5*i.gridSize);var y=e.centerX-e.radius,v=e.centerY-e.radius,m=2*e.radius;o.ctx.clearRect(y,v,m,m);var p=u[h].x,M=u[h].y;e.setX(p-.5*i.gridSize),e.setY(M-.5*i.gridSize),r.drawUnit(e),setTimeout(function(){h++,t.makeMovementInPursueUnit(e,n,a,l,u,c,d,f,h,g)},Math.round(1e3/e.speed))}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(69),i=n(97),o=n(3);t.getPriorityUnit=function(e,t){var n=Object.assign([],t),o=r.findClosestUnitsToTheNodeCenter(e,n);if(1===o.length)return o[0];if(o.length>1){var a=r.getBestUnitsByProperty(o,"speed");if(1===a.length)return a[0];if(a.length>1)return i.shuffleUnits(a)[0]}},t.unitCanMoveToTheNode=function(e,n){var r=t.getPriorityUnit(e,o.units),i=!1;return n.id===r.id&&(i=!0),i}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r};t.shuffleUnits=function(e){for(var t=Object.assign([],e),n=function(e){for(var t=Object.assign([],e),n=0,r=t;n<r.length;n++){var i=r[n],o=Math.random();i.randomValue=o}return t}(e),i=0;i<n.length;++i){for(var o=i,a=i+1;a<e.length;++a)n[a].randomValue===n[o].randomValue&&(o=a),n[a].randomValue<n[o].randomValue&&(o=a);o!==i&&r(t,o,i)}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRandomValue=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var i=r[n],o=Math.random(),a={id:i.id,randomValue:o};t.push(a)}return t},t.swap=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r},t.shuffleID=function(e){for(var n=Object.assign([],e),r=t.setRandomValue(n),i=0;i<r.length;++i){for(var o=i,a=i+1;a<r.length;++a)r[a].randomValue===r[o].randomValue&&(o=a),r[a].randomValue<r[o].randomValue&&(o=a);o!==i&&t.swap(r,o,i)}return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(5);t.getInterceptionNodes=function(e){for(var t=e.currentNode,n=[],o=t.x-r.gridSize;o<=t.x+r.gridSize;o+=r.gridSize){(s=i.getNodeFromMap(o,t.y))&&o!==t.x&&n.push(s)}for(var a=t.y-r.gridSize;a<=t.y+r.gridSize;a+=r.gridSize){var s;(s=i.getNodeFromMap(t.x,a))&&a!=t.y&&n.push(s)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(219);t.spotEnemy=r.spotEnemy,t.isUnitSpottedByEnemy=r.isUnitSpottedByEnemy,t.spotUnits=r.spotUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),o=n(79),a=n(85),s=n(22),l=n(3),u=n(1),c=n(28);t.spotEnemy=function(e){var t;"player"===e.controlBy&&(t=Object.assign([],l.computerUnits)),"computer"===e.controlBy&&(t=Object.assign([],l.playerUnits));for(var n=e.visibility*i.gridSize,r=e.currentNode.x,d=e.currentNode.y,f=u.getNodeFromMap(r,d),h=0,g=t;h<g.length;h++){var y=g[h],v=y.currentNode.x,m=y.currentNode.y,p=u.getNodeFromMap(v,m),M=Math.abs(f.x-p.x),U=Math.abs(f.y-p.y);n>=M&&n>=U&&("computer"===e.controlBy&&!1===y.isVisible&&c.removeFromHidingEnemies(y),y.isVisible=!0,o.drawUnit(y),a.addUnitIntoVisibleUnits(y),"computer"===e.controlBy&&(a.addUnitToSpottedUnits(y),s.addToRevealedUnits(y)))}},t.isUnitSpottedByEnemy=function(e){var t;if("player"===e.controlBy&&(t=Object.assign([],l.computerUnits)),"computer"===e.controlBy&&(t=Object.assign([],l.playerUnits)),0!==t.length){for(var n=e.currentNode.x,s=e.currentNode.y,d=u.getNodeFromMap(n,s),f=!1,h=0,g=t;h<g.length;h++){var y=g[h],v=y.visibility*i.gridSize,m=y.currentNode.x,p=y.currentNode.y,M=u.getNodeFromMap(m,p),U=Math.abs(d.x-M.x),_=Math.abs(d.y-M.y);v>=U&&v>=_&&(a.addUnitIntoVisibleUnits(e),f=!0,!1===e.isVisible&&"player"===e.controlBy&&c.removeFromHidingEnemies(e),e.isVisible=!0,"computer"===e.controlBy&&a.addUnitToSpottedUnits(y),"computer"===e.controlBy&&o.drawUnit(e))}f||(a.removeUnitFromVisibleUnits(e),"player"===e.controlBy&&!0===e.isVisible&&c.addToHidingEnemies(e),e.isVisible=!1,"computer"!==e.controlBy||e.isMoving||r.ctx.clearRect(e.x,e.y,i.gridSize,i.gridSize))}},t.spotUnits=function(e){if(e.length>0)for(var n=0,r=e;n<r.length;n++){var i=r[n];t.isUnitSpottedByEnemy(i)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(221),o=n(11),a=n(43);t.battleListener=function(){o.spotUnits(r.units),o.meleeCombat(),setTimeout(function(){t.battleListener()},600)},t.isBattleEnd=function(){var e=r.computerUnits.length,n=r.playerUnits.length;0!==e&&0!==n||(a.finishBattle(),t.checkWinner(e,n))},t.checkWinner=function(e,t){0===e?i.drawMessage("Victory"):0===t&&(a.finishBattle(),i.drawMessage("Defeat"))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(2);t.drawMessage=function(e){i.ctx.fillStyle="#000",i.ctx.font="256px serif",i.ctx.textAlign="left",i.ctx.fillText(e,r.MAP_WIDTH/2-400,r.CANVAS_HEIGHT/2)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(27),i=n(0),o=n(1);t.drawClickedIcon=function(e,t){r.eventCtx.clearRect(0,0,i.MAP_WIDTH,i.MAP_HEIGHT);var n=o.getNodeFromMap(e,t);if(n){var a=n.x+i.gridSize/2,s=n.y+i.gridSize/2,l=Math.round(i.gridSize/3);r.eventCtx.beginPath(),r.eventCtx.arc(a,s,l,0,2*Math.PI),r.eventCtx.strokeStyle="#20ef09",r.eventCtx.stroke(),r.eventCtx.closePath(),setTimeout(function(){r.eventCtx.clearRect(0,0,i.MAP_WIDTH,i.MAP_HEIGHT)},1e3)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(224),i=n(229),o=n(230),a=n(100);t.computerAction=function(){var e=new r.default;a.calculateTotalPower(),setTimeout(function(){i.needToChangePosition(e)&&(console.error("Need to change position"),o.moveUnits()),e.setPreviousState(),t.computerAction()},600)},t.computerMovement=function(){o.moveUnits(),t.computerAction()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(100),o=n(9),a=n(28),s=function(){function e(){var e=i.calculateTotalPlayerPower(),t=i.calculateTotalComputerPower();this.playerUnits=Object.assign([],r.playerUnits),this.computerUnits=Object.assign([],r.computerUnits),this.playerTotalHealth=e.totalHealth,this.computerTotalHealth=t.totalHealth,this.visibleForPlayerUnits=Object.assign([],o.visibleForPlayerUnits),this.visibleForComputerUnits=Object.assign([],o.visibleForComputerUnits),this.hidingEnemies=Object.assign([],a.hidingEnemies)}return e.prototype.setPreviousState=function(){var e=i.calculateTotalPlayerPower(),t=i.calculateTotalComputerPower();this.playerUnits=Object.assign([],r.playerUnits),this.computerUnits=Object.assign([],r.computerUnits),this.playerTotalHealth=e.totalHealth,this.computerTotalHealth=t.totalHealth,this.visibleForPlayerUnits=Object.assign([],o.visibleForPlayerUnits),this.visibleForComputerUnits=Object.assign([],o.visibleForComputerUnits),this.hidingEnemies=Object.assign([],a.hidingEnemies)},e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.initialComputerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.initialPlayerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.visiblePlayerUnitsPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.revealedUnitsPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(9),i=n(3),o=n(51),a=n(52),s=n(28),l=n(35);t.needToChangePosition=function(e){return!!l.isUnitsChanged(r.visibleForComputerUnits,e.visibleForComputerUnits)||(i.computerUnits.length!=e.computerUnits.length||(i.playerUnits.length!=e.playerUnits.length||(1-e.playerTotalHealth/o.playerPower.totalHealth>=.2||(1-e.computerTotalHealth/a.computerPower.totalHealth>=.2||(!!l.isUnitsChanged(s.hidingEnemies,e.hidingEnemies)||!!l.isUnitsChanged(l.getFightingUnits(i.computerUnits),l.getFightingUnits(e.computerUnits)))))))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(231),o=n(102),a=n(23),s=n(54),l=n(105),u=n(55),c=n(246),d=n(247);t.moveUnits=function(){console.error("moveUnits");var e=u.generateCurrentCommandNumber();c.setCommandNumberToUnits(e);for(var t=i.bestActionAlgorithm(),n=0,f=r.computerUnits;n<f.length;n++){var h=f[n];console.error("command unit "+h.id+" "+t.getCommandsByUnitId(h.id).command)}for(var g=0,y=r.computerUnits;g<y.length;g++){h=y[g];var v=t.getCommandsByUnitId(h.id),m=v.command;v.node;if(m===o.Command.Attack)a.attackEnemy(h,v.actionUnit);else if(m===o.Command.MoveToNode)d.advance(h,v.node,e,!0);else if(m===o.Command.BeCloseToUnit){var p=v.actionUnit;s.assessVulnerability(h)>=s.assessVulnerability(p)?l.beCloseTo(h,p,e,!0,!0):l.beCloseTo(h,p,e,!1,!0)}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(232),i=n(3),o=n(236),a=n(237),s=n(238);t.bestActionAlgorithm=function(){for(var e=new o.default,t=0;t<=10;){for(var n=new a.default,l=0,u=i.computerUnits;l<u.length;l++){var c=u[l],d=r.generateRandomAction(c);n.addCommand(c.id,d)}var f=n.getUnitsWithSimulatingPositions(),h=s.calculateTotalEfficiency(f);e.insert(h,n),t+=1}return e.extractMax()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(9),i=n(53),o=n(3),a=n(1),s=n(5),l=n(233),u=n(102),c=n(235);t.generateRandomAction=function(e){var t,n=null,l=d();if(0!==r.visibleForComputerUnits.length||l!==u.Command.MoveToNode&&l!==u.Command.Attack)if(l===u.Command.Attack)t=(n=i.getRandomUnit(r.visibleForComputerUnits)).currentNode;else if(l===u.Command.MoveToNode){h=a.getSurroundedNodes(e);t=s.getRandomNode(h)}else l===u.Command.BeCloseToUnit&&(t=(n=i.getRandomUnit(o.computerUnits)).currentNode);else{l=u.Command.MoveToNode;var f=i.getRandomUnit(o.playerUnits),h=a.getSurroundedNodes(f,3);t=s.getRandomNode(h)}return new c.default(e,t,l,n)};var d=function(){var e=l.getRandomValueInRange(0,2);return[u.Command.BeCloseToUnit,u.Command.Attack,u.Command.MoveToNode][e]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(101);t.getRandomValueInRange=r.getRandomValueInRange;var i=n(89);t.randomizeMeleeDamage=i.randomizeMeleeDamage;var o=n(234);t.getRandomValueInRangeWithProbability=o.getRandomValueInRangeWithProbability},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(101);t.getRandomValueInRangeWithProbability=function(e,t,n){if(e>=t)throw new Error("min cannot be more or equal to max");if(!n.interval)throw new Error("probability interval is required");if(2!=n.interval.length)throw new Error("invalid probability interval syntax");if(n.interval[0]<e||n.interval[1]<e)throw new Error("one of probability interval is less than min");if(n.interval[0]>t||n.interval[1]>t)throw new Error("one of probability interval is more than max");if(n.interval[0]>=n.interval[1])throw new Error("invalid probability interval");if(!n.probability)throw new Error("probabilities argument required");if(n.probability<0||n.probability>100)throw new Error("invalid probability value");if(n.probability>0&&n.probability<1)throw new Error("invalid probability value");var i=Math.random(),o=n.interval[0],a=n.interval[1],s=.01*n.probability;return i>=0&&i<=s?r.getRandomValueInRange(o,a):r.getRandomValueInRange(e,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(e,t,n,r){void 0===r&&(r=null),this.unit=e,this.node=t,this.command=n,this.actionUnit=r}}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.elements=[],this.commandId=1}return e.prototype.insert=function(e,t){this.elements.push({efficiency:e,commands:t,commandId:this.commandId}),this.commandId+=1},e.prototype.extractMax=function(){for(var e=this.elements[0],t=1;t<this.elements.length;++t)this.elements[t].efficiency>e.efficiency&&(e=this.elements[t],t);return this.elements=this.elements.filter(function(t){return t.commandId!==e.commandId}),e.commands},e.prototype.isEmpty=function(){return 0===this.elements.length},e.prototype.clearElements=function(){this.elements=[]},e}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=function(){function e(){this.commands={}}return e.prototype.addCommand=function(e,t){this.commands[e]=t},e.prototype.clearCommands=function(){this.commands={}},e.prototype.getCommandsByUnitId=function(e){return this.commands[e]},e.prototype.getUnitsWithSimulatingPositions=function(){for(var e=[],t=0,n=r.computerUnits;t<n.length;t++){var i=n[t],o=Object.create(i),a=this.getCommandsByUnitId(o.id).node;o.setX(a.x),o.setY(a.y),o.setCurrentNode(a),e.push(o)}return e},e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(239);t.calculateTotalEfficiency=function(e){for(var t=0,n=0,i=e;n<i.length;n++){var o=i[n];t+=r.calculateEfficiency(o,e)}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(240),i=n(1),o=n(241),a=n(9),s=n(35),l=n(36),u=n(243),c=n(104),d=n(244);t.calculateEfficiency=function(e,n){return 0===a.visibleForComputerUnits.length?t.explorationUnitEfficiency(e,n):t.unitEfficiency(e,n)},t.explorationUnitEfficiency=function(e,n){o.assignExplorationTask();var a=r.getExplorationNode(),s=i.getDistanceBetweenTwoNodesInGrids(e.currentNode,a);if("exploration"===e.task){var l=100-10*s;return l=l>0?l:0}return t.unitEfficiency(e,n)},t.unitEfficiency=function(e,t){var n=l.getSurroundedUnits(e,a.visibleForComputerUnits,5),r=l.getSurroundedUnits(e,t,5),i=Object.assign([],r);i.push(e);var o,f,h=n.length,g=r.length,y=c.calculateTotalUnitsWeight(r)+e.weight,v=c.calculateTotalUnitsWeight(n),m=e.health/e.initialHealth,p=s.getTotalUnitsInitialHealth(n),M=(s.getTotalUnitsInitialHealth(r),s.getTotalUnitsInitialHealth(i)),U=s.getTotalUnitsHealth(n),_=(s.getTotalUnitsHealth(r),s.getTotalUnitsHealth(i)),b=U/p,P=_/M;if(1===h&&0===g){var I=n[0],x=I.health/I.initialHealth;return s.isEnemyVulnerableToUnit(e,I)&&m>=.7?100:s.isEnemyDangerousForUnit(e,I)&&x>=.7?0:u.simulateFight(e,I).unitHealthRemain}if(h>1&&0===g)return b>=.6&&m>=.6?(o=(o=e.weight/v)<=2?o:2,Math.round(50*o)):(f=(f=e.health/U)<=2?f:2,Math.round(50*f));if(h>1||g>0)return b>=.6&&P>=.6?(o=(o=(y+e.weight)/v)<=2?o:2,Math.round(50*o)):(f=(f=_/U)<=2?f:2,Math.round(50*f));if(!(0===h&&g>0))return 0;var C=d.calculateTotalVulnerability(r,e)/g-(d.calculateTotalVulnerability(r)/g+1);if(C>0){var T=1.4*C;return T=T<=100?T:100}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(53),i=n(3),o=n(29),a=n(5);t.getExplorationNode=function(){var e=r.getRandomUnit(i.playerUnits),t=o.getSurroundedNodes(e,4);return a.getRandomNode(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(242),i=n(103),o=n(3);t.assignExplorationTask=function(e){void 0===e&&(e=60);var t=r.calculateUnitTypes();if(0===t.scouts&&0===t.cavalry){var n=i.getFreeUnits();if(n&&0!==n.length){var a=i.getBestUnitByProperty("speed");if(a.assignTask("exploration"),n.length>1){var s=[a];i.getBestUnitByProperty("speed",s).assignTask("exploration")}}}else for(var l=0,u=o.computerUnits;l<u.length;l++){var c=u[l],d=Math.round(0/o.computerUnits.length*100);!c.task&&("scouts"===c.type||"cavalry"===c.type)&&d<e&&c.assignTask("exploration")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(51),i=n(52),o=n(3),a=n(22),s=n(29);t.calculateUnitsToBeware=function(e){var t=0;if(0!==o.playerUnits.length)for(var n=0,r=o.playerUnits;n<r.length;n++){var i=r[n];if(0!==e.vulnerableAgainst.length)for(var a=0,s=e.vulnerableAgainst;a<s.length;a++){s[a]===i.name&&t++}}return t},t.calculateSurroundedEnemyPower=function(e){var t={health:0,speed:0,armour:0,meleeDamage:0,missileDamage:0,morale:0,condition:0},n=s.getSurroundedEnemies(e);if(0!==n.length)for(var r=0,i=n;r<i.length;r++){var o=i[r];t.health+=o.health,t.speed+=o.speed,t.armour+=o.armour,t.meleeDamage+=o.meleeDamage,t.missileDamage+=o.missileDamage,t.morale+=o.morale,t.condition+=o.condition}return t},t.calculateSurroundedAlliesPower=function(e){var t={health:0,speed:0,armour:0,meleeDamage:0,missileDamage:0,morale:0,condition:0},n=s.getSurroundedAllies(e);if(0!==n.length)for(var r=0,i=n;r<i.length;r++){var o=i[r];t.health+=o.health,t.speed+=o.speed,t.armour+=o.armour,t.meleeDamage+=o.meleeDamage,t.missileDamage+=o.missileDamage,t.morale+=o.morale,t.condition+=o.condition}return t},t.calculatePowerAdvantageInTheArea=function(e){var n=t.calculateSurroundedEnemyPower(e),r=t.calculateSurroundedAlliesPower(e);return{health:r.health-n.health,speed:r.speed-n.speed,armour:r.armour-n.armour,meleeDamage:r.meleeDamage-n.meleeDamage,missileDamage:r.missileDamage-n.missileDamage,condition:r.condition-n.condition,morale:r.morale-n.morale}},t.calculateUnitTypes=function(e){void 0===e&&(e="computer");var t,n={infantry:0,spearmen:0,lightInfantry:0,heavyInfantry:0,scouts:0,skirmishers:0,cavalry:0};if("computer"===e)t=Object.assign([],o.computerUnits);else if("revealed"===e)t=Object.assign([],a.revealedUnits);else{if("player"!==e)throw new Error("incorrect side argument");t=Object.assign([],o.playerUnits)}for(var r=0,i=t;r<i.length;r++){var s=i[r];"infantry"!==s.type&&"spearmen"!==s.type&&"scouts"!==s.type||(n.infantry+=1),"spearmen"===s.type&&(n.spearmen+=1),"infantry"===s.type&&"HeavyInfantry"!==s.name&&(n.lightInfantry+=1),"HeavyInfantry"===s.name&&(n.heavyInfantry+=1),"scouts"===s.type&&(n.scouts+=1),"skirmishers"===s.type&&(n.skirmishers+=1),"cavalry"===s.type&&(n.cavalry+=1)}return n},t.getUnitTypesInPercentage=function(){var e={infantry:0,spearmen:0,lightInfantry:0,heavyInfantry:0,scouts:0,skirmishers:0,cavalry:0},n=t.calculateUnitTypes(),r=o.computerUnits.length;return e.infantry=Math.round(n.infantry/r*100),e.spearmen=Math.round(n.spearmen/r*100),e.lightInfantry=Math.round(n.lightInfantry/r*100),e.heavyInfantry=Math.round(n.heavyInfantry/r*100),e.scouts=Math.round(n.scouts/r*100),e.skirmishers=Math.round(n.skirmishers/r*100),e.cavalry=Math.round(n.cavalry/r*100),e},t.getInitialPropeties=function(){return{initialNumberOfUnits:o.computerUnits.length,initialNumberOfEnemies:o.playerUnits.length,initialUnitsHealth:i.computerPower.totalHealth,initialEnemiesHealth:r.playerPower.totalHealth}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11);t.simulateFight=function(e,t){for(var n=1,i=e.health,o=t.health,a=e.health,s=t.health;a>=0&&s>=0;){var l=r.calculateDamage(e,e.meleeDamage),u=r.calculateDamage(t,t.meleeDamage);a-=r.armourPenetration(u,e.armour),s-=r.armourPenetration(l,t.armour),n+=1}var c=Math.round(100*a/i),d=Math.round(100*s/o);return{unitHealthRemain:c>=0?c:0,enemyHealthRemain:d>=0?d:0,unitHealth:a,enemyHealth:s,attacks:n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(54);t.calculateTotalVulnerability=function(e,t){void 0===t&&(t=null);for(var n=0,i=0,o=e;i<o.length;i++){var a=o[i];n+=r.assessVulnerability(a,t)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(104),i=n(35),o=n(36),a=n(3),s=n(22),l=n(1);t.assessVulnerability=function(e,t){void 0===t&&(t=null);var n,u,c=0;"computer"===e.controlBy?(n=Object.assign([],a.computerUnits),u=Object.assign([],s.revealedUnits)):"player"===e.controlBy&&(n=Object.assign([],a.playerUnits),u=Object.assign([],a.computerUnits)),t&&(n=l.deleteUnitFromArray(e,n));var d=o.getSurroundedUnits(e,n,5),f=o.getSurroundedUnits(e,u,5),h=r.calculateTotalUnitsWeight(d)+e.weight,g=r.calculateTotalUnitsWeight(f),y=i.getDangerousUnits(e).length,v=i.containsDangerousUnits(e,f);if(0===d.length&&0===f.length&&(e.speed>=70&&e.speed<80?c+=10:e.speed>=50&&e.speed<70?c+=30:e.speed<50&&(c+=50)),0===d.length&&1==f.length){v&&(c+=70);var m=f[0].speed;e.speed/m>1&&e.speed/m<1.5?c+=h>g?20:35:e.speed/m>=1.5?c+=h>g?5:15:g/h>1.2?c+=40:g/h>1.5&&(c+=90)}return 0===d.length&&f.length>1&&(v&&(c+=70),c+=g/h>=1.5?80:30),d.length>=1&&f.length>1&&(c+=10,v&&(c+=30),g/h>=1.5?c+=50:g/h>=1.2&&(c+=30)),y>0&&e.speed<25&&"skirmishers"!=e.type&&(c+=30),c<0?c=0:c>100&&(c=100),c}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.setCommandNumberToUnits=function(e){for(var t=0,n=r.computerUnits;t<n.length;t++){n[t].setCommandNumber(e)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(55),i=n(3),o=n(103),a=n(23),s=n(36),l=n(54),u=n(248),c=n(8),d=n(50),f=n(105);t.advance=function(e,n,h,g){if(void 0===g&&(g=!1),h===r.currentCommandNumber){if(g||!e.isMoving&&!e.isFighting)if(console.log("unit "+e.id+" commandNumber "+h),e.currentNode.x!=n.x&&e.currentNode.y!=n.y)d.moveTo(e,n.x,n.y);else if(1===i.computerUnits.length){var y=o.getClosestEnemyToUnit(e);a.attackEnemy(e,y)}else{for(var v=s.getSurroundedUnits(e,i.computerUnits,5),m=new u.default,p=0,M=v;p<M.length;p++){var U=M[p],_=l.assessVulnerability(U);m.insert(U.id,_)}for(;!m.isEmpty();){var b=m.extractMax();U=c.getUnitById(b.key);if(b.value>=80&&U.isFighting){f.beCloseTo(e,U,h,!0);break}}}setTimeout(function(){t.advance(e,n,h)},2e3)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.elements=[]}return e.prototype.insert=function(e,t){this.elements.push({key:e,value:t})},e.prototype.update=function(e,t){for(var n=0,r=this.elements;n<r.length;n++){var i=r[n];i.key==e&&(i.value=t)}},e.prototype.extractMax=function(){for(var e=this.elements[0],t=1;t<this.elements.length;++t)this.elements[t].value>e.value&&(e=this.elements[t],t);return this.elements=this.elements.filter(function(t){return t.key!==e.key}),e},e.prototype.isEmpty=function(){return 0===this.elements.length},e}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(250);t.launchGame=r.launchGame},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(251),i=n(66),o=n(43);t.launchGame=function(){o.mainMenuMode?r.launchMainMenu():o.battleMode&&i.launchBattle()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),o=n(252),a=n(40),s=n(61),l=n(63),u=n(306),c=n(308),d=n(10),f=n(21),h=n(37),g=n(125),y=n(18);t.launchMainMenu=function(){g.drawLoadingCanvas(),d.initializeMap().then(function(){f.loadUnitIcons().then(function(){r.mainMenuCtx.fillRect(0,0,i.MAP_WIDTH,i.CANVAS_HEIGHT),h.createRoster(),o.displayRoster(),a.displayChosenUnits(),s.displayInfo(),l.displayTitle(),u.dragAndDrop(),c.drawBottomLayout(),f.loadIcons(),y.loadingCanvas.style.zIndex="1"})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(253);t.isUnitSelectedInRoster=r.isUnitSelectedInRoster;var i=n(57);t.displayRoster=i.displayRoster},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(106);t.isUnitSelectedInRoster=r.isUnitSelectedInRoster},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rosterImgWidth=100,t.rosterImgHeight=100},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(57);t.displayRoster=function(){i.mainMenuCtx.fillStyle="#cdd1d6",i.mainMenuCtx.fillRect(0,r.titleHeight,r.unitRosterWidth,r.unitRosterHeight),o.displayRosterTitle()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(58);t.decreaseSpentGold=r.decreaseSpentGold,t.increaseSpentGold=r.increaseSpentGold;var i=n(38);t.setTotalGold=i.setTotalGold},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(258);t.armyLayoutHeight=r.armyLayoutHeight,t.armyLayoutWidth=r.armyLayoutWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.armyLayoutHeight=r.CANVAS_HEIGHT-140,t.armyLayoutWidth=Math.round(r.MAP_WIDTH/3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(260);t.infoLayoutHeight=r.infoLayoutHeight,t.infoLayoutWidth=r.infoLayoutWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.infoLayoutHeight=r.CANVAS_HEIGHT-140,t.infoLayoutWidth=Math.round(r.MAP_WIDTH/3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(262);t.unitRosterHeight=r.unitRosterHeight,t.unitRosterWidth=r.unitRosterWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.unitRosterHeight=r.CANVAS_HEIGHT-140,t.unitRosterWidth=Math.round(r.MAP_WIDTH/3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(264);t.startBattleStartY=r.startBattleStartY,t.startBattleHeight=r.startBattleHeight,t.startBattleWidth=r.startBattleWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(107),o=n(108);t.startBattleStartY=o.titleHeight+i.infoLayoutHeight,t.startBattleHeight=r.CANVAS_HEIGHT-(o.titleHeight+i.infoLayoutHeight),t.startBattleWidth=r.MAP_WIDTH},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.titleHeight=70},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(39);t.changeBattleSettingsToTrue=r.changeBattleSettingsToTrue,t.changeUnitInfoToTrue=r.changeUnitInfoToTrue,t.showBattleSettings=r.showBattleSettings,t.showUnitInfo=r.showUnitInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7);t.changeToComputer=r.changeToComputer,t.changeToPlayer=r.changeToPlayer,t.side=r.side},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(59);t.disableStartBattleButton=r.disableStartBattleButton,t.enableStartBattleButton=r.enableStartBattleButton,t.startBattleAvailable=r.startBattleAvailable},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(109);t.changeHoveredUnit=r.changeHoveredUnit,t.hoveredUnit=r.hoveredUnit;var i=n(270);t.computerHasUnits=i.computerHasUnits,t.playerHasUnits=i.playerHasUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.playerHasUnits=!1,t.computerHasUnits=!1},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(4),o=n(37),a=n(1),s=n(56),l=n(272);t.displayRosterUnits=function(e,n,u){void 0===e&&(e=0),void 0===n&&(n=60),void 0===u&&(u=i.titleHeight+60),e>=o.roster.length||a.loadImage(o.roster[e].imgSrc,function(i,a){r.mainMenuCtx.font="14px serif",r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText(o.roster[e].name,n+5,u),r.mainMenuCtx.drawImage(a,n,u+5,s.rosterImgWidth,s.rosterImgHeight),l.drawCoin(n+15,u+s.rosterImgHeight+15,5),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.fillText(o.roster[e].cost,n+25,u+s.rosterImgHeight+20),o.roster[e].x=n,o.roster[e].y=u,n=n+s.rosterImgWidth+15,2!==e&&5!==e&&8!==e&&11!==e||(n=60,u+=s.rosterImgHeight+45),e++,t.displayRosterUnits(e,n,u)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(273);t.drawCoin=r.drawCoin},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2);t.drawCoin=function(e,t,n){r.mainMenuCtx.beginPath(),r.mainMenuCtx.arc(e,t,n,0,2*Math.PI,!1),r.mainMenuCtx.fillStyle="#ffd700",r.mainMenuCtx.fill()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(57);t.displayRosterTitle=function(){i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="24px serif",i.mainMenuCtx.textAlign="left",i.mainMenuCtx.fillText("Roster",150,r.titleHeight+20),o.displayRosterUnits()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(24);t.drawRemoveIcon=function(e){var t=e.armyPosition.x+i.armyImgWidth,n=e.armyPosition.y,o=t-15,a=n+15,s=t-5,l=n+4,u=o,c=l,d=s,f=a;Math.round(i.armyImgWidth/4),Math.round(i.armyImgHeight/4);r.dragAndDropCanvasCtx.fillStyle="rgb(200, 0,0)",r.dragAndDropCanvasCtx.beginPath(),r.dragAndDropCanvasCtx.moveTo(o,a),r.dragAndDropCanvasCtx.lineTo(s,l),r.dragAndDropCanvasCtx.stroke(),r.dragAndDropCanvasCtx.beginPath(),r.dragAndDropCanvasCtx.fillStyle="red",r.dragAndDropCanvasCtx.moveTo(u,c),r.dragAndDropCanvasCtx.lineTo(d,f),r.dragAndDropCanvasCtx.stroke()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(113);t.isUnitShouldBeRemoved=r.isUnitShouldBeRemoved},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(278);t.onChooseUnitInArmy=r.onChooseUnitInArmy;var i=n(279);t.displayChosenUnits=i.displayChosenUnits,t.displayChosenUnitsTitle=i.displayChosenUnitsTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),i=n(2),o=n(0),a=n(60),s=n(112),l=n(14),u=n(24);t.onChooseUnitInArmy=function(e,t){for(var n=null,c=0,d="player"===r.side?l.playerArmy:l.computerArmy;c<d.length;c++){var f=d[c],h=f.armyPosition.x,g=h+u.armyImgWidth,y=f.armyPosition.y,v=y+u.armyImgHeight;e>=h&&e<g&&t>y&&t<v?n=f:a.selectedUnitInRoster||i.dragAndDropCanvasCtx.clearRect(0,0,o.MAP_WIDTH,o.CANVAS_HEIGHT)}n&&!a.selectedUnitInRoster&&s.drawRemoveIcon(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(4),o=n(110);t.displayChosenUnits=function(){r.mainMenuCtx.clearRect(i.unitRosterWidth,i.titleHeight,i.armyLayoutWidth,i.armyLayoutHeight),r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.unitRosterWidth,i.titleHeight,i.armyLayoutWidth,i.armyLayoutHeight),r.mainMenuCtx.strokeRect(i.unitRosterWidth,i.titleHeight,i.armyLayoutWidth,i.armyLayoutHeight),t.displayChosenUnitsTitle(),o.displayArmy()},t.displayChosenUnitsTitle=function(){r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Units",i.unitRosterWidth+150,i.titleHeight+20)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(114);t.drawMoneyBox=r.drawMoneyBox;var i=n(115);t.changeTotalGold=i.changeTotalGold,t.fillTotalGold=i.fillTotalGold,t.showTotalGold=i.showTotalGold},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(38),i=n(2),o=n(15);t.drawMoneyBox=function(e,t,n){n===r.totalGold?i.mainMenuCtx.fillStyle="#fff":i.mainMenuCtx.fillStyle="#cdd1d6",i.mainMenuCtx.fillRect(e,t,o.boxWidth,o.boxHeight),i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.strokeRect(e,t,o.boxWidth,o.boxHeight),i.mainMenuCtx.font="12px serif",i.mainMenuCtx.textAlign="left",i.mainMenuCtx.fillText(n,e+10,t+25)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.width=160,t.height=30,t.battleSettingsX=r.armyLayoutWidth+r.unitRosterWidth+50,t.battleSettingsY=r.titleHeight,t.unitInfoX=r.armyLayoutWidth+r.unitRosterWidth+50+t.width+20,t.unitInfoY=r.titleHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(15),i=n(2),o=n(4),a=n(63),s=n(114),l=n(25);t.goldBoxes=[],t.changeTotalGold=function(e,n){for(var i=0,s=t.goldBoxes;i<s.length;i++){var u=s[i];e>=u.x&&e<u.x+r.boxWidth&&n>=u.y&&n<u.y+r.boxHeight&&(o.setTotalGold(u.gold),t.showTotalGold(),a.displayTitle(),l.isStartBattleAvailable())}},t.fillTotalGold=function(){t.goldBoxes=[];for(var e=r.goldBoxStartX,n=r.goldBoxStartY,i=0,o=r.goldOptions;i<o.length;i++){var a=o[i];t.goldBoxes.push({x:e,y:n,gold:a}),e+=r.boxWidth+5}},t.showTotalGold=function(){i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="24px serif",i.mainMenuCtx.textAlign="left",i.mainMenuCtx.fillText("Total Money:",r.startTotalMoneyTitleX,r.startTotalMoneyTitleY),i.mainMenuCtx.font="12px serif",t.fillTotalGold();for(var e=0,n=t.goldBoxes;e<n.length;e++){var o=n[e];s.drawMoneyBox(o.x,o.y,o.gold)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(285);t.onChooseComputer=r.onChooseComputer;var i=n(291);t.onChoosePlayer=i.onChoosePlayer},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(64),i=n(7),o=n(41),a=n(116);t.onChooseComputer=function(e,t){e>=r.computerSwitcherX0&&e<r.computerSwitcherX1&&t>=r.computerSwitcherY0&&t<r.computerSwitcherY1&&(i.changeToComputer(),a.displayChosenUnits(),o.displayComputer(),o.displayTitle())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.playerSwitcherX0=r.armyLayoutWidth,t.playerSwitcherX1=r.armyLayoutWidth+r.armyLayoutWidth/2,t.playerSwitcherY0=0,t.playerSwitcherY1=r.titleHeight/2,t.computerSwitcherX0=t.playerSwitcherX1,t.computerSwitcherX1=t.computerSwitcherX0+r.armyLayoutWidth/2,t.computerSwitcherY0=0,t.computerSwitcherY1=r.titleHeight/2,t.playerSwitcherWidth=r.armyLayoutWidth/2,t.computerSwitcherWidth=r.armyLayoutWidth/2,t.goldX=t.playerSwitcherX0+t.playerSwitcherWidth,t.goldY=r.titleHeight/2+25},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(7);t.displayComputer=function(){var e="#ccc";"computer"===o.side&&(e="#fff"),i.mainMenuCtx.fillStyle=e,i.mainMenuCtx.fillRect(r.unitRosterWidth+r.armyLayoutWidth/2,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.strokeRect(r.unitRosterWidth+r.armyLayoutWidth/2,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="28px serif",i.mainMenuCtx.fillText("Computer",r.armyLayoutWidth+360,r.titleHeight/2-10)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(7);t.displayPlayer=function(){var e="#ccc";"player"===o.side&&(e="#fff"),i.mainMenuCtx.fillStyle=e,i.mainMenuCtx.fillRect(r.unitRosterWidth,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.strokeRect(r.unitRosterWidth,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="28px serif",i.mainMenuCtx.fillText("Player",r.armyLayoutWidth+120,r.titleHeight/2-10)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(7),o=n(58),a=n(38),s=n(64);t.displayRemainGold=function(){var e;"computer"===i.side?e=o.computerSpentGold:"player"===i.side&&(e=o.playerSpentGold),e>a.totalGold?r.mainMenuCtx.fillStyle="red":r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.fillText(e+"/"+a.totalGold,s.goldX,s.goldY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(41),i=n(4),o=n(0),a=n(2);t.displayTitle=function(){a.mainMenuCtx.clearRect(0,0,o.MAP_WIDTH,i.titleHeight),a.mainMenuCtx.fillStyle="#2c2f33",a.mainMenuCtx.fillRect(0,0,o.MAP_WIDTH,i.titleHeight),a.mainMenuCtx.fillStyle="#cdd1d6",a.mainMenuCtx.font="38px serif",a.mainMenuCtx.textAlign="center",r.displayPlayer(),r.displayComputer(),r.displayRemainGold()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(64),i=n(7),o=n(41),a=n(4),s=n(116);t.onChoosePlayer=function(e,t){e>=a.unitRosterWidth&&e<r.playerSwitcherX1&&t>=r.playerSwitcherY0&&t<r.playerSwitcherY1&&(i.changeToPlayer(),s.displayChosenUnits(),o.displayPlayer(),o.displayTitle())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(14),i=n(58),o=n(38),a=n(4),s=n(117);t.isStartBattleAvailable=function(){var e=r.computerArmy.length,t=r.playerArmy.length,n=o.totalGold-i.computerSpentGold,l=o.totalGold-i.playerSpentGold;e<1||t<1?(a.disableStartBattleButton(),s.drawBottomLayout()):n<0||l<0?(a.disableStartBattleButton(),s.drawBottomLayout()):(a.enableStartBattleButton(),s.drawBottomLayout())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(118),i=n(25),o=n(25);t.drawBottomLayout=function(){r.fillLayout(),i.showStartBattleButton(),o.showText()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(65);t.isStartBattleButtonSelected=function(e,t){var n=r.startBattleButtonX,i=n+r.startBattleButtonWidth,o=r.startBattleButtonY,a=o+r.startBattleButtonHeight;return e>=n&&e<i&&t>=o&&t<a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.startBattleButtonX=Math.round(r.startBattleWidth/3)+120,t.startBattleButtonY=r.startBattleStartY+15,t.startBattleButtonWidth=200,t.startBattleButtonHeight=40,t.startBattleTextX=t.startBattleButtonX+30,t.startBattleTextY=t.startBattleButtonY+30},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(59),o=n(65);t.showStartBattleButton=function(){var e;e=i.startBattleAvailable?"#fff":"#ccc",r.mainMenuCtx.fillStyle=e,r.mainMenuCtx.fillRect(o.startBattleButtonX,o.startBattleButtonY,o.startBattleButtonWidth,o.startBattleButtonHeight)},t.showText=function(){r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="32px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Start Battle",o.startBattleTextX,o.startBattleTextY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(298);t.onChooseBattleSettings=r.onChooseBattleSettings,t.onChooseInfo=r.onChooseInfo,t.onChooseUnitInfo=r.onChooseUnitInfo;var i=n(121);t.displayInfo=i.displayInfo;var o=n(122);t.battleSettingSwitcher=o.battleSettingSwitcher,t.showSwither=o.showSwither,t.unitInfoSwitcher=o.unitInfoSwitcher},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(119);t.onChooseBattleSettings=r.onChooseBattleSettings;var i=n(299);t.onChooseInfo=i.onChooseInfo;var o=n(120);t.onChooseUnitInfo=o.onChooseUnitInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(119),i=n(4),o=n(120),a=n(121);t.onChooseInfo=function(e,t){r.onChooseBattleSettings(e,t)&&(i.changeBattleSettingsToTrue(),a.displayInfo()),o.onChooseUnitInfo(e,t)&&(i.changeUnitInfoToTrue(),a.displayInfo())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(4),o=n(122);t.displayInfo=function(){r.mainMenuCtx.clearRect(i.armyLayoutWidth+i.unitRosterWidth,i.titleHeight,i.infoLayoutWidth,i.infoLayoutHeight),r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.armyLayoutWidth+i.unitRosterWidth,i.titleHeight,i.infoLayoutWidth,i.infoLayoutHeight),o.showSwither()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(123),i=n(124),o=n(302),a=n(39),s=n(115);t.showSwither=function(){r.battleSettingSwitcher(),i.unitInfoSwitcher(),a.showBattleSettings?s.showTotalGold():o.unitInfo()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(303);t.unitInfo=r.unitInfo,t.displayUnitInfo=r.displayUnitInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(62),o=n(62),a=n(109),s=n(304),l=["name","cost","type","health","speed","armour","range","mobility","meleeDamage","missileDamage","charge","visibility"];t.unitInfo=function(){s.displayTitle(),t.displayUnitInfo(a.hoveredUnit)},t.displayUnitInfo=function(e){if(o.setDefault(),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",a.hoveredUnit)for(var t=0,n=l;t<n.length;t++){var s=n[t];r.mainMenuCtx.fillText(s,i.propertyStartX,i.propertyStartY),r.mainMenuCtx.fillText(e[s],i.valueStartX,i.valueStartY),o.changeY()}else r.mainMenuCtx.fillText("No unit selected",i.propertyStartX,i.propertyStartY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(305);t.displayTitle=r.displayTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(15);t.displayTitle=function(){r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Unit Info:",i.unitInfoTitleX,i.unitInfoTitleY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(307);t.dragAndDrop=r.dragAndDrop},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(2),o=n(4),a=n(59),s=n(14),l=n(37),u=n(60),c=n(60),d=n(56),f=n(106),h=n(1),g=n(0),y=n(63),v=n(40),m=n(113),p=n(111),M=n(61),U=n(61),_=n(25),b=n(26);t.dragAndDrop=function(){r.dragAndDropCanvas.addEventListener("click",function(e){var n=e.offsetX,r=e.offsetY;if(U.changeTotalGold(n,r),M.onChooseInfo(n,r),y.onChoosePlayer(n,r),y.onChooseComputer(n,r),m.isUnitShouldBeRemoved(n,r)){var l=m.isUnitShouldBeRemoved(n,r);o.decreaseSpentGold(l.cost),s.removeUnitFromArmy(l),v.displayChosenUnits(),y.displayTitle(),i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT),_.isStartBattleAvailable()}if(a.startBattleAvailable&&_.isStartBattleButtonSelected(n,r)&&b.activateBattleMode(),c.selectedUnitInRoster)if(t.isUnitAddedToArmy(n,r)){l=t.isUnitAddedToArmy(n,r);s.addUnitToArmy(l),v.displayChosenUnits(),o.increaseSpentGold(l.cost),y.displayTitle(),i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT),_.isStartBattleAvailable()}else v.displayChosenUnits(),i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT);t.onChooseRoster(n,r)}),r.dragAndDropCanvas.addEventListener("mousemove",function(e){var n=e.offsetX,r=e.offsetY;if(t.onDragUnit(n,r),v.onChooseUnitInArmy(n,r),f.isUnitSelectedInRoster(n,r)){var i=f.isUnitSelectedInRoster(n,r);o.hoveredUnit?i.x!==o.hoveredUnit.x&&i.y!==o.hoveredUnit&&(o.changeHoveredUnit(i),M.displayInfo()):o.changeHoveredUnit(i),o.showUnitInfo||(o.changeUnitInfoToTrue(),M.displayInfo())}})},t.onChooseRoster=function(e,t){for(var n=null,r=d.rosterImgWidth,i=d.rosterImgHeight,a=0,s=l.roster;a<s.length;a++){var c=s[a],f=c.x,h=c.y;e>=f&&e<f+r&&t>=h&&t<h+i&&(n=c)}u.selectUnitInRoster(n),o.changeHoveredUnit(n),M.displayInfo()},t.onDragUnit=function(e,t){if(c.selectedUnitInRoster){var n=e-d.rosterImgWidth/2,r=t-d.rosterImgHeight/2;h.loadImage(c.selectedUnitInRoster.imgSrc,function(e,t){i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT),i.dragAndDropCanvasCtx.drawImage(t,n,r,d.rosterImgWidth,d.rosterImgHeight)})}},t.isUnitAddedToArmy=function(e,t){var n=v.armyImgWidth,r=v.armyImgHeight,i=p.emptyBox.x,o=p.emptyBox.y;return!p.emptyBox.filled&&e>=i&&e<i+n&&t>=o&&t<o+r?c.selectedUnitInRoster:null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(25);t.isStartBattleAvailable=r.isStartBattleAvailable,t.isStartBattleButtonSelected=r.isStartBattleButtonSelected,t.showStartBattleButton=r.showStartBattleButton,t.showText=r.showText;var i=n(117);t.drawBottomLayout=i.drawBottomLayout,t.fillLayout=i.fillLayout;var o=n(65);t.startBattleButtonX=o.startBattleButtonX,t.startBattleButtonY=o.startBattleButtonY,t.startBattleButtonWidth=o.startBattleButtonWidth,t.startBattleButtonHeight=o.startBattleButtonHeight,t.startBattleTextX=o.startBattleTextX,t.startBattleTextY=o.startBattleTextY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(310);t.activateBattleMode=r.activateBattleMode;var i=n(316);t.activateMainMenuMode=i.activateMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(12),o=n(0),a=n(26),s=n(311),l=n(312),u=n(21),c=n(44),d=n(45),f=n(18),h=n(125),g=n(76);t.activateBattleMode=function(){h.drawLoadingCanvas(),o.setBattleMode().then(function(){s.clearMainMenu(),g.fillUnitToIconMap(),l.createArmy().then(function(){return u.loadUnitIcons()}).then(function(){r.dragAndDropCanvas.style.zIndex="0",r.mainMenu.style.zIndex="0",i.auxiliaryCanvas.style.zIndex="6",d.eventCanvas.style.zIndex="5",i.canvas.style.zIndex="4",c.pathCanvas.style.zIndex="3",i.terrain.style.zIndex="2",i.backgroundCanvas.style.zIndex="1",f.loadingCanvas.style.zIndex="0",a.launchGame()})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(2);t.clearMainMenu=function(){i.mainMenuCtx.clearRect(0,0,r.MAP_WIDTH,r.CANVAS_HEIGHT),i.dragAndDropCanvasCtx.clearRect(0,0,r.MAP_WIDTH,r.CANVAS_HEIGHT)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(313),i=n(315);t.createArmy=function(){return new Promise(function(e){r.createPlayerArmy().then(function(){return i.createComputerArmy()}),e()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(14),i=n(126),o=n(5),a=n(128),s=n(11);t.createPlayerArmy=function(){return new Promise(function(e){a.initializePlayerUnitsNodes().then(function(){for(var t=0,n=r.playerArmy;t<n.length;t++){var l=n[t],u=o.getRandomNode(a.playerUnitsNodes),c=l.name,d=u.x,f=u.y;s.createUnit(c,d,f,"player"),i.deleteNodeFromPlayerNodes(u)}e()})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(127);t.deleteNodeFromComputerNodes=r.deleteNodeFromComputerNodes;var i=n(128);t.deleteNodeFromPlayerNodes=i.deleteNodeFromPlayerNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(14),i=n(126),o=n(5),a=n(127),s=n(11);t.createComputerArmy=function(){a.initializeComputerUnitsNodes().then(function(){for(var e=0,t=r.computerArmy;e<t.length;e++){var n=t[e],l=o.getRandomNode(a.computerUnitsNodes),u=n.name,c=l.x,d=l.y;s.createUnit(u,c,d,"computer"),i.deleteNodeFromComputerNodes(l)}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(20),o=n(12),a=n(0),s=n(26),l=n(45),u=n(44),c=n(18);t.activateMainMenuMode=function(){r.dragAndDropCanvas.style.zIndex="6",r.mainMenu.style.zIndex="5",o.auxiliaryCanvas.style.zIndex="4",o.canvas.style.zIndex="3",o.terrain.style.zIndex="2",l.eventCanvas.style.zIndex="1",u.pathCanvas.style.zIndex="1",o.backgroundCanvas.style.zIndex="1",c.loadingCanvas.style.zIndex="1",i.clearMap(),a.setMainMenuMode(),s.launchGame()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9jb250ZXh0L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS91bml0L3VuaXRzLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvdHlwZXMvVW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L3NpZGVzL3NpZGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvZ2VuZXJhbC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvdW5pdC92aXNpYmxlVW5pdHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hcC9jcmVhdGVNYXAvaW5pdGlhbE1hcC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2NhbnZhcy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvQUkvcG93ZXIvUG93ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL3Jvc3Rlci9hcm15LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvaW5mb1NldHRpbmdzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS91bml0L2N1cnJlbnRseUNob3NlblVuaXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2RyYXdVbml0SWNvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2NhbnZhcy9sb2FkaW5nLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL2dldC9mcm9tTWFwLnRzIiwid2VicGFjazovLy8uL3NyYy9tYXAvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL2ltYWdlcy91bml0SWNvbkltYWdlcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvQUkvZW5lbWllcy9yZXZlYWxlZEVuZW1pZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvbW92ZW1lbnQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYXJteUxheW91dC9hcm15U2V0dGluZ3MvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2J1dHRvbi9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbGF1bmNoL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvY29udGV4dC9jb250ZXh0LnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9BSS9lbmVtaWVzL2hpZGluZ0VuZW1pZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3N1cnJvdW5kZWQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3N1cnJvdW5kZWQvZ2V0U3Vycm91bmRlZE5vZGVzLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9iYXR0bGVVSS91bml0UGFuZWwvc2V0dGluZ3MudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvZHJhdy9kcmF3VW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9tb3ZlbWVudC9jb21tb24vcHVyc3VlVW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9tb3ZlbWVudC9jb21tb24vdXBkYXRlVW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9BSS9BSV9hY3Rpb25zLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9zdXJyb3VuZGVkL2dldFN1cnJvdW5kZWRVbml0cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvcm9zdGVyL3Jvc3Rlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L2dvbGQvdG90YWxHb2xkLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvc2hvdy9zaG93SW5mby50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9hcm15TGF5b3V0L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3VwcGVyTGF5b3V0L2Rpc3BsYXkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYXAvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9nbG9iYWwvZ2xvYmFsQ29uZmlnLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvY2FudmFzL3BhdGgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9jYW52YXMvZXZlbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL3VuaXQvdW5pdElkLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL2RhbWFnZS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvcGF0aC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvcGF0aC9hU3Rhci9BU3Rhci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9tb3ZlbWVudC9jb21tb24vbW92ZVRvLnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9BSS9wb3dlci9wbGF5ZXJQb3dlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvQUkvcG93ZXIvY29tcHV0ZXJQb3dlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9yYW5kb20vZ2V0UmFuZG9tVW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvQUkvcHJvY2Vzc01vZHVsZS92dWxuZXJhYmlsaXR5L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9BSS9zdHJhdGVneU1vZHVsZS9kZWNpc2lvblVuaXQvY29tbWFuZE51bWJlci9jdXJyZW50Q29tbWFuZE51bWJlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9yb3N0ZXJMYXlvdXQvcm9zdGVyU2V0dGluZ3MvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvcm9zdGVyTGF5b3V0L2Rpc3BsYXkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS9nb2xkL3NwZW50R29sZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L3N0YXJ0QmF0dGxlL3N0YXJ0QmF0dGxlQXZhaWxhYmxlLnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9yb3N0ZXIvc2VsZWN0ZWRVbml0LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9pbmZvU2V0dGluZ3MvaW5mb1NldHRpbmdzLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3VwcGVyTGF5b3V0L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3VwcGVyTGF5b3V0L3VwcGVyTGF5b3V0U2V0dGluZ3MvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2JvdHRvbVNldHRpbmdzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvYmF0dGxlL2xhdW5jaEJhdHRsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvaW1hZ2UvbG9hZEltYWdlLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9vYmplY3Qvb2JqVXRpbHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvYWN0aW9ucy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL25vZGVzL2NyZWF0ZU5vZGVzLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL3NodWZmbGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvZ2VuZXJhbC9nZW5lcmFsVXRpbHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvY2hvb3NlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L3R5cGVzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2NyZWF0ZS9jcmVhdGVVbml0LnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9pbWFnZXMvdW5pdFRvSWNvbk1hcC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvYmF0dGxlVUkvdW5pdFBhbmVsL2ljb24vaWNvblNldHRpbmdzLnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS91bml0L2RlZmF1bHRVbml0cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9kcmF3L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL2FybW91ci9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9hdHRhY2tTaWRlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL2ZpZ2h0QWdhaW5zdC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9tZWxlZS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9yZW1vdmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS91bml0L3Nwb3R0ZWRVbml0cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9tZWxlZS9jaGVja0ZpZ2h0aW5nLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL3JlZnJlc2htZW50L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9yYW5kb20vbWVsZWVEYW1hZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9kaXNwbGF5L2Rpc3BsYXlVbml0SWNvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhdGgvYVN0YXIvYVN0YXJVdGlscy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvcGF0aC9kcmF3L2RyYXdQYXRoLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy91bml0L21vdmVtZW50VXRpbHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvbW92ZW1lbnQvY29tbW9uL21vdmVUb05leHROb2RlLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L21vdmVtZW50L2NvbW1vbi9zdG9wTW92aW5nLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy91bml0L3ByaW9yaXR5L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy91bml0L3NodWZmbGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvaW50ZXJjZXB0aW9uL2dldEludGVyY2VwdGVkRW5lbWllcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC91bml0UG9zaXRpb24vZ2V0QmxvY2tlZEVuZW1pZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL2FuYWx5emVNb2R1bGUvcG93ZXJBbmFseXplLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9yYW5kb20vZ2V0UmFuZG9tVmFsdWVJblJhbmdlLnRzIiwid2VicGFjazovLy8uL3NyYy9BSS9zdHJhdGVneU1vZHVsZS9kZWNpc2lvblVuaXQvcmFuZG9tQWN0aW9uL0NvbW1hbmQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvQUkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3Byb2Nlc3NNb2R1bGUvd2VpZ2h0L2NhbGN1bGF0ZVVuaXRzV2VpZ2h0LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L21vdmVtZW50L2NvbXB1dGVyL2JlQ2xvc2VUby50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9yb3N0ZXJMYXlvdXQvdW5pdC9pc1VuaXRTZWxlY3RlZEluUm9zdGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvbGF5b3V0cy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L2xheW91dHMvdXBwZXJMYXlvdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS91bml0L2hvdmVyZWRVbml0LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2FybXlMYXlvdXQvYXJteS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9hcm15TGF5b3V0L2FybXkvZGlzcGxheUFybXkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYXJteUxheW91dC9pY29uL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2FybXlMYXlvdXQvcmVtb3ZlL3JlbW92ZVVuaXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9iYXR0bGVJbmZvL21vbmV5Qm94L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvYmF0dGxlSW5mby90b3RhbEdvbGQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2xheW91dC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9ib3R0b21MYXlvdXQvbGF5b3V0L2ZpbGxMYXlvdXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9pbmZvL2Nob29zZS9iYXR0bGVTZXR0aW5ncy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0L2luZm8vY2hvb3NlL3VuaXRJbmZvLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvaW5mby9kaXNwbGF5L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvaW5mby9zd2l0Y2hlci9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0L2luZm8vc3dpdGNoZXIvYmF0dGxlU2V0dGluZ1N3aXRjaGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvaW5mby9zd2l0Y2hlci91bml0SW5mb1N3aXRjaGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvbG9hZGluZy9kcmF3TG9hZGluZ0NhbnZhcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYmF0dGxlL3Jvc3Rlci9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYmF0dGxlL3Jvc3Rlci9ub2Rlcy9jb21wdXRlck5vZGVzLnRzIiwid2VicGFjazovLy8uL3NyYy9iYXR0bGUvcm9zdGVyL25vZGVzL3BsYXllck5vZGVzLnRzIiwid2VicGFjazovLy8uL3NyYy9nYW1lLnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvYmF0dGxlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvY2FudmFzL2F1eGlsaWFyeS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21hcC9tYXAudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYXAvZ3JpZFNpemUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9nbG9iYWwvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9jYW52YXMvYmFja2dyb3VuZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2NhbnZhcy9jYW52YXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9jYW52YXMvdGVycmFpbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2NhbnZhcy9kcmFnQW5kRHJvcC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL2NhbnZhcy9tYWluTWVudS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvaW1hZ2UvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvYWRkL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL2FkZC90b0FycmF5LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9vYmplY3QvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvZGlzdGFuY2UvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvZGlzdGFuY2UvZGlzdGFuY2VJbkdyaWRzLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL2dldC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvbm9kZS9nZXQvZnJvbUFycmF5LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL2dldC9jbG9zZXN0VG9FbmVteS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9hY3Rpb25zL3VuaXRBY3Rpb25zLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL2dldC9mYXJ0aGVzdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL2NsZWFyTWFwL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9tYXAvY2xlYXJNYXAvY2xlYXJNYXAudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hcC9ncmlkL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9tYXAvZ3JpZC9kcmF3R3JpZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL25laWdoYm9ycy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL25laWdoYm9ycy9hZGROZWlnaGJvcnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hcC9ub2Rlcy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFwL25vZGVzL01hcE5vZGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hcC9vYnN0YWNsZXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hcC9vYnN0YWNsZXMvY3JlYXRlT2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL21hcC9vYnN0YWNsZXMvY3JlYXRlT2JzdGFjbGVzLnRzIiwid2VicGFjazovLy8uL3NyYy9tYXAvb2JzdGFjbGVzL3VuaXRPYnN0YWNsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvc2VhcmNoL2JpbmFyeVNlYXJjaC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvbm9kZS9nZXQvZnJvbU5vZGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvcmFuZG9tL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL3JhbmRvbS9yYW5kb20udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvc2h1ZmZsZS9zaHVmZmxlLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9ub2RlL3N1cnJvdW5kZWQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL25vZGUvc3Vycm91bmRlZC9nZXRTdXJyb3VuZGVkQmxvY2tlZE5vZGVzLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9zdXJyb3VuZGVkL2dldFN1cnJvdW5kZWRFbmVtaWVzLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy9zdXJyb3VuZGVkL2dldFN1cnJvdW5kZWRBbGxpZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvcHJvcGVydHkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvcHJvcGVydHkvcHJvcGVydHkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3VuaXQvdW5pdFBvc2l0aW9uL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy91bml0L3VuaXRQb3NpdGlvbi9wb3NpdGlvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC91bml0UG9zaXRpb24vZ2V0VW5pdHNPblRoZU5vZGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL2RyYXcvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL2RyYXcvZHJhd0JhY2tncm91bmQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL2RyYXcvZHJhd09ic3RhY2xlLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2Nob29zZS9jaG9vc2VVbml0VHlwZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC90eXBlcy9BcmNoZXJzLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvdW5pdC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL3VuaXQvdW5pdENvbmZpZy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC90eXBlcy9IZWF2eUNhdmFscnkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvdHlwZXMvSGVhdnlJbmZhbnRyeS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC90eXBlcy9Ib3BsaXRlcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC90eXBlcy9MaWdodENhdmFscnkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvdHlwZXMvTGlnaHRJbmZhbnRyeS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC90eXBlcy9NaWxpdGlhLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L3R5cGVzL1BlbHRhc3RzLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L3R5cGVzL1Bpa2VtZW4udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvdHlwZXMvU2NvdXRzLnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2Nob29zZS9vbkNob29zZVVuaXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvY3JlYXRlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL2FybW91ci9hcm1vdXJQZW5ldHJhdGlvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9hdHRhY2tTaWRlL2F0dGFja1NpZGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvZmlnaHRpbmcvY2hhcmdlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy91bml0L2ZpZ2h0aW5nL2NoYXJnZS9jaGFyZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvZmlnaHRpbmcvZGFtYWdlL2RhbWFnZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9maWdodEFnYWluc3QvdW5pdEZpZ2h0QWdhaW5zdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9tZWxlZS9jaGVja0hlYWx0aC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9yZW1vdmUvcmVtb3ZlVW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvdW5pdC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9yZWZyZXNobWVudC9yZWZyZXNobWVudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9tZWxlZS9tZWxlZUF0dGFjay50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9maWdodGluZy9tZWxlZS9tZWxlZUNvbWJhdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdW5pdC9tb3ZlbWVudC9jb21tb24vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvbW92ZW1lbnQvY29tbW9uL2F0dGFjay50cyIsIndlYnBhY2s6Ly8vLi9zcmMvcGF0aC9maW5kL2ZpbmRQYXRoLnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy91bml0L21vdmVtZW50VXRpbHMvb3V0T2ZDb21iYXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvbW92ZW1lbnQvY29tbW9uL21ha2VNb3ZlbWVudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9wcmlvcml0eS9hc3Nlc3NQcmlvcml0eS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9zaHVmZmxlL3NodWZmbGVVbml0cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9zaHVmZmxlL3NodWZmbGVJRC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdW5pdC9pbnRlcmNlcHRpb24vZ2V0SW50ZXJjZXB0aW9uTm9kZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvc3BvdHRpbmcvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvc3BvdHRpbmcvdW5pdFNwb3R0aW5nLnRzIiwid2VicGFjazovLy8uL3NyYy9nYW1lTG9vcC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWVzc2FnZXMvZHJhd01lc3NhZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2NsaWNrSWNvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvQUkvc3RyYXRlZ3lNb2R1bGUvY29udHJvbFVuaXQvY29tcHV0ZXJBY3Rpb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3N0cmF0ZWd5TW9kdWxlL2RlY2lzaW9uVW5pdC9tYXBDaGFuZ2VzRGV0ZWN0aW9uL1ByZXZpb3VzU3RhdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL0FJL3Bvd2VyL2luaXRpYWxDb21wdXRlclBvd2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9BSS9wb3dlci9pbml0aWFsUGxheWVyUG93ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL0FJL3Bvd2VyL3Zpc2libGVQbGF5ZXJVbml0c1Bvd2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9BSS9wb3dlci9yZXZlYWxlZFVuaXRzUG93ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3N0cmF0ZWd5TW9kdWxlL2RlY2lzaW9uVW5pdC9tYXBDaGFuZ2VzRGV0ZWN0aW9uL2NoYW5nZVBvc2l0aW9uRGV0ZWN0aW9uLnRzIiwid2VicGFjazovLy8uL3NyYy9BSS9zdHJhdGVneU1vZHVsZS9jb250cm9sVW5pdC9tb3ZlVW5pdHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3N0cmF0ZWd5TW9kdWxlL2RlY2lzaW9uVW5pdC9iZXN0UG9zaXRpb25BbGdvcml0aG0vYmVzdEFjdGlvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3N0cmF0ZWd5TW9kdWxlL2RlY2lzaW9uVW5pdC9yYW5kb21BY3Rpb24vZ2VuZXJhdGVSYW5kb21BY3Rpb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxzL3JhbmRvbS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvcmFuZG9tL3JhbmdlV2l0aFByb2JhYmlsaXR5LnRzIiwid2VicGFjazovLy8uL3NyYy9BSS9zdHJhdGVneU1vZHVsZS9kZWNpc2lvblVuaXQvcmFuZG9tQWN0aW9uL0FjdGlvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvcXVldWVzL0NvbW1hbmRRdWV1ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvQUkvY29tbWFuZHMvQ29tbWFuZHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3Byb2Nlc3NNb2R1bGUvZWZmaWNpZW5jeS90b3RhbEVmZmljaWVuY3kudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FJL3Byb2Nlc3NNb2R1bGUvZWZmaWNpZW5jeS9jYWxjdWxhdGVFZmZpY2llbmN5LnRzIiwid2VicGFjazovLy8uL3NyYy91dGlscy91bml0L2V4cGxvcmF0aW9uL2dldEV4cGxvcmF0aW9uTm9kZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvQUkvcHJvY2Vzc01vZHVsZS90YXNrcy9hc3NpZ25FeHBsb3JhdGlvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvQUkvYW5hbHl6ZU1vZHVsZS91bml0QW5hbHl6ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvQUkvcHJvY2Vzc01vZHVsZS9zaW11bGF0aW9ucy9zaW11bGF0ZUZpZ2h0LnRzIiwid2VicGFjazovLy8uL3NyYy9BSS9wcm9jZXNzTW9kdWxlL3Z1bG5lcmFiaWxpdHkvdG90YWxWdWxuZXJhYmlsaXR5LnRzIiwid2VicGFjazovLy8uL3NyYy9BSS9wcm9jZXNzTW9kdWxlL3Z1bG5lcmFiaWxpdHkvYXNzZXNzVnVsbmVyYWJpbGl0eS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvQUkvc3RyYXRlZ3lNb2R1bGUvZGVjaXNpb25Vbml0L2NvbW1hbmROdW1iZXIvc2V0Q29tbWFuZE51bWJlclRvVW5pdHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3VuaXQvbW92ZW1lbnQvY29tcHV0ZXIvYWR2YW5jZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvcXVldWVzL1ByaW9yaXR5UXVldWUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2xhdW5jaC9nYW1lL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvZ2FtZS9sYXVuY2hHYW1lLnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvbWFpbk1lbnUvbGF1bmNoTWFpbk1lbnUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvcm9zdGVyTGF5b3V0L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3Jvc3RlckxheW91dC91bml0L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3Jvc3RlckxheW91dC9yb3N0ZXJTZXR0aW5ncy9zZXR0aW5ncy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9yb3N0ZXJMYXlvdXQvZGlzcGxheS9kaXNwbGF5Um9zdGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvZ29sZC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L2xheW91dHMvYXJteUxheW91dC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L2xheW91dHMvYXJteUxheW91dC9sYXlvdXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvbGF5b3V0LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvbGF5b3V0cy9yb3N0ZXJMYXlvdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS9sYXlvdXRzL3Jvc3RlckxheW91dC9sYXlvdXQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS9sYXlvdXRzL2JvdHRvbUxheW91dC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2xheW91dC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L2xheW91dHMvdXBwZXJMYXlvdXQvbGF5b3V0LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvc2hvdy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uZmlnL21haW5NZW51L3NpZGVzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvc3RhcnRCYXR0bGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbmZpZy9tYWluTWVudS91bml0L2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9jb25maWcvbWFpbk1lbnUvdW5pdC91bml0cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9yb3N0ZXJMYXlvdXQvZGlzcGxheS9kaXNwbGF5VW5pdHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvcm9zdGVyTGF5b3V0L2NvaW4vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvcm9zdGVyTGF5b3V0L2NvaW4vZHJhd0NvaW4udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvcm9zdGVyTGF5b3V0L2Rpc3BsYXkvZGlzcGxheVRpdGxlLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2FybXlMYXlvdXQvaWNvbi9yZW1vdmVJY29uLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2FybXlMYXlvdXQvcmVtb3ZlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2FybXlMYXlvdXQvdW5pdC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9hcm15TGF5b3V0L3VuaXQvY2hvb3NlVW5pdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9hcm15TGF5b3V0L3VuaXQvY2hvc2VuVW5pdHMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9iYXR0bGVJbmZvL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvYmF0dGxlSW5mby9tb25leUJveC9kcmF3TW9uZXlCb3gudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9pbmZvU2V0dGluZ3MvYmF0dGxlU2V0dGluZ3MudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9iYXR0bGVJbmZvL3RvdGFsR29sZC90b3RhbEdvbGQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvdXBwZXJMYXlvdXQvY2hvb3NlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3VwcGVyTGF5b3V0L2Nob29zZS9vbkNob29zZUNvbXB1dGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL3VwcGVyTGF5b3V0L3VwcGVyTGF5b3V0U2V0dGluZ3Mvc2V0dGluZ3MudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvdXBwZXJMYXlvdXQvZGlzcGxheS9jb21wdXRlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy91cHBlckxheW91dC9kaXNwbGF5L3BsYXllci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy91cHBlckxheW91dC9kaXNwbGF5L3JlbWFpbkdvbGQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvdXBwZXJMYXlvdXQvZGlzcGxheS90aXRsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy91cHBlckxheW91dC9jaG9vc2Uvb25DaG9vc2VQbGF5ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2J1dHRvbi9idXR0b25BdmFpbGFibGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2xheW91dC9kcmF3bGF5b3V0LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2JvdHRvbUxheW91dC9idXR0b24vYnV0dG9uU2VsZWN0ZWQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvYm90dG9tTGF5b3V0L2JvdHRvbVNldHRpbmdzL2xheW91dFNldHRpbmdzLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2JvdHRvbUxheW91dC9idXR0b24vc2hvd0J1dHRvbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0L2luZm8vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9pbmZvL2Nob29zZS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0L2luZm8vY2hvb3NlL2luZm8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9pbmZvL2Rpc3BsYXkvZGlzcGxheUluZm8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC9pbmZvL3N3aXRjaGVyL3Nob3dTd2l0Y2hlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0L3VuaXRJbmZvL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2luZm9MYXlvdXQvdW5pdEluZm8vdW5pdEluZm8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1VJL21haW5NZW51L2xheW91dHMvaW5mb0xheW91dC90aXRsZS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0L3RpdGxlL2Rpc3BsYXlUaXRsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbWFpbi9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvbWFpbi9tYWluLnRzIiwid2VicGFjazovLy8uL3NyYy9VSS9tYWluTWVudS9sYXlvdXRzL2JvdHRvbUxheW91dC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbGF1bmNoL21vZGVzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvbW9kZXMvYmF0dGxlTW9kZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvVUkvbWFpbk1lbnUvc2V0dGluZ3MvY2xlYXJNYWluTWVudS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYmF0dGxlL3Jvc3Rlci9hcm15L2NyZWF0ZUFybXkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2JhdHRsZS9yb3N0ZXIvYXJteS9wbGF5ZXJBcm15LnRzIiwid2VicGFjazovLy8uL3NyYy9iYXR0bGUvcm9zdGVyL25vZGVzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9iYXR0bGUvcm9zdGVyL2FybXkvY29tcHV0ZXJBcm15LnRzIiwid2VicGFjazovLy8uL3NyYy9sYXVuY2gvbW9kZXMvbWFpbk1lbnVNb2RlLnRzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwibWFwXzEiLCJNQVBfSEVJR0hUIiwiTUFQX1dJRFRIIiwiQ0FOVkFTX0hFSUdIVCIsImdyaWRTaXplIiwiZ2xvYmFsXzEiLCJtYWluTWVudU1vZGUiLCJzZXRCYXR0bGVNb2RlIiwic2V0TWFpbk1lbnVNb2RlIiwiaW1hZ2VfMSIsImxvYWRJbWFnZSIsIm5vZGVfMSIsImdldE5vZGVGcm9tTWFwIiwiZ2V0RGlzdGFuY2VCZXR3ZWVuVW5pdEFuZE5vZGVJbkdyaWRzIiwiZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvTm9kZXNJbkdyaWRzIiwiYWRkTm9kZUludG9BcnJheSIsImdldE5vZGVGcm9tQXJyYXkiLCJnZXRNaW5WYWx1ZUZyb21Ob2RlcyIsImdldE1heFZhbHVlRnJvbU5vZGVzIiwib2JqVXRpbHNfMSIsImRlbGV0ZU9iamVjdEZyb21BcnJheSIsImlzT2JqZWN0SW5BcnJheSIsImlzT2JqZWN0RW1wdHkiLCJ1bml0XzEiLCJhZGRVbml0SW50b0FycmF5IiwiYW5vdGhlclVuaXRJc09uVGhlV2F5IiwiZGVsZXRlVW5pdEZyb21BcnJheSIsImRlbGV0ZVVuaXRGcm9tQXJteSIsImdldERpc3RhbmNlQmV0d2VlblR3b1VuaXRzSW5HcmlkcyIsImdldFVuaXRzTWluUHJvcGVydHkiLCJnZXRVbml0c01heFByb3BlcnR5IiwiaXNVbml0SW5BcnJheSIsInN1cnJvdW5kZWRfMSIsImdldFN1cnJvdW5kZWROb2RlcyIsImdldFN1cnJvdW5kZWRFbmVtaWVzIiwiZHJhd18xIiwiZHJhd0JhY2tncm91bmQiLCJkcmF3T2JzdGFjbGUiLCJjb250ZXh0XzEiLCJjdHgiLCJhdXhpbGlhcnlDdHgiLCJiYWNrZ3JvdW5kQ3R4IiwiZHJhZ0FuZERyb3BDYW52YXNDdHgiLCJtYWluTWVudUN0eCIsInRlcnJhaW5DdHgiLCJ1dGlsc18xIiwiZ2VuZXJhbF8xIiwidW5pdHMiLCJwbGF5ZXJVbml0cyIsImNvbXB1dGVyVW5pdHMiLCJhZGRUb1VuaXRzIiwidW5pdCIsIkVycm9yIiwiY29udHJvbEJ5IiwiYWRkVG9Db21wdXRlclVuaXRzIiwicHVzaCIsImFkZFRvUGxheWVyVW5pdHMiLCJyZW1vdmVGcm9tVW5pdHMiLCJyZW1vdmVGcm9tQ29tcHV0ZXJVbml0cyIsInJlbW92ZUZyb21QbGF5ZXJVbml0cyIsInJlbW92ZUFsbENvbXB1dGVyVW5pdHMiLCJyZW1vdmVBbGxQbGF5ZXJVbml0cyIsInJlbW92ZUFsbFVuaXRzIiwiZ29sZF8xIiwiZGVjcmVhc2VTcGVudEdvbGQiLCJpbmNyZWFzZVNwZW50R29sZCIsInNldFRvdGFsR29sZCIsImxheW91dHNfMSIsImFybXlMYXlvdXRIZWlnaHQiLCJhcm15TGF5b3V0V2lkdGgiLCJpbmZvTGF5b3V0SGVpZ2h0IiwiaW5mb0xheW91dFdpZHRoIiwidW5pdFJvc3RlckhlaWdodCIsInVuaXRSb3N0ZXJXaWR0aCIsInN0YXJ0QmF0dGxlU3RhcnRZIiwic3RhcnRCYXR0bGVIZWlnaHQiLCJzdGFydEJhdHRsZVdpZHRoIiwidGl0bGVIZWlnaHQiLCJzaG93XzEiLCJjaGFuZ2VCYXR0bGVTZXR0aW5nc1RvVHJ1ZSIsImNoYW5nZVVuaXRJbmZvVG9UcnVlIiwic2hvd0JhdHRsZVNldHRpbmdzIiwic2hvd1VuaXRJbmZvIiwic2lkZXNfMSIsImNoYW5nZVRvQ29tcHV0ZXIiLCJjaGFuZ2VUb1BsYXllciIsInNpZGUiLCJzdGFydEJhdHRsZV8xIiwiZGlzYWJsZVN0YXJ0QmF0dGxlQnV0dG9uIiwiZW5hYmxlU3RhcnRCYXR0bGVCdXR0b24iLCJzdGFydEJhdHRsZUF2YWlsYWJsZSIsImNoYW5nZUhvdmVyZWRVbml0IiwiaG92ZXJlZFVuaXQiLCJjb21wdXRlckhhc1VuaXRzIiwicGxheWVySGFzVW5pdHMiLCJhZGRfMSIsImRpc3RhbmNlXzEiLCJnZXRfMSIsInJhbmRvbV8xIiwiZ2V0UmFuZG9tTm9kZSIsInNodWZmbGVfMSIsInNodWZmbGVOb2RlcyIsImdldFN1cnJvdW5kZWRCbG9ja2VkTm9kZXMiLCJjb25maWdfMSIsIlVuaXQiLCJpZCIsIngiLCJ5IiwidGhpcyIsInJhZGl1cyIsImlzQ3VycmVudGx5Q2hvc2VuIiwiaW1nU3JjIiwiaXNNb3ZpbmciLCJpc1Zpc2libGUiLCJ1bml0VG9QdXJzdWUiLCJpc0ZpZ2h0aW5nIiwiZmlndGhBZ2FpbnN0IiwiZnJvbnQiLCJmbGFuayIsInJlYXIiLCJhbGwiLCJoZWFsdGgiLCJzcGVlZCIsImFybW91ciIsInJhbmdlIiwibW9iaWxpdHkiLCJtZWxlZURhbWFnZSIsIm1pc3NpbGVEYW1hZ2UiLCJzaG90c1JlbWFpbmVkIiwiY2hhcmdlIiwiZGlzY2lwbGluZSIsIndlaWdodCIsInZpc2liaWxpdHkiLCJtb3JhbGUiLCJjb25kaXRpb24iLCJiYXNlTm9kZSIsImlzVW5pdFVuZGVyUHJvdGVjdGlvbiIsImlzVW5pdE5lZWRIZWxwIiwiYmVDbG9zZVRvIiwiZnJvemVuIiwiY2VudGVyWCIsImNlbnRlclkiLCJjdXJyZW50Tm9kZSIsIm5leHROb2RlIiwic2V0WCIsInNldFkiLCJzZXRJc01vdmluZ1RvRmFsc2UiLCJzZXRJc01vdmluZ1RvVHJ1ZSIsInNldFVuaXRUb1B1cnN1ZSIsIm9wcG9uZW50c1VuaXQiLCJzZXRVbml0VG9QdXJzdWVUb051bGwiLCJzZXRJc0ZpZ2h0aW5nVG9UcnVlIiwic2V0SXNGaWdodGluZ1RvRmFsc2UiLCJhc3NpZ25Nb3ZlVG9Qb3NpdGlvbiIsIm5vZGUiLCJtb3ZlVG9Ob2RlIiwicmVtb3ZlRW5lbXlGcm9tRmxhbmsiLCJvcHBvbmVudCIsImxlbmd0aCIsImluY3JlYXNlQ29uZGl0aW9uIiwiZGVjcmVhc2VDb25kaXRpb24iLCJzZXRDdXJyZW50Tm9kZSIsImZvdW5kTm9kZSIsInNldE5leHROb2RlIiwiYXNzaWduRW5lbXkiLCJlbmVteSIsImZyb250RW5lbXlOb2RlIiwibmV3RW5lbXlOb2RlIiwidW5pdE5vZGUiLCJmcm9udEVuZW15RGlmZlgiLCJmcm9udEVuZW15RGlmZlkiLCJuZXdFbmVteURpZmZYIiwibmV3RW5lbXlEaWZmWSIsImluY3JlYXNlV2VpZ2h0SW5QZXJjZW50YWdlIiwicGVyY2VudGFnZSIsIm5ld1dlaWdodCIsIk1hdGgiLCJyb3VuZCIsInJlbW92ZUVuZW15RnJvbUZpZ2h0QWdhaW5zdCIsImFycmFuZ2VGaWdodEFnYWluc3QiLCJfaSIsIl9hIiwidXBkYXRlZEZsYW5rIiwiYXNzaWduIiwidXBkYXRlZFJlYXIiLCJ1cGRhdGVkRmxhbmtfMSIsImNsZWFyRmlnaHRBZ2FpbnN0IiwiYXNzaWduVGFzayIsInRhc2siLCJjb25zb2xlIiwiZXJyb3IiLCJjbGVhclRhc2siLCJzZXRJc1VuaXRVbmRlclByb3RlY3Rpb25Ub1RydWUiLCJzZXRJc1VuaXRVbmRlclByb3RlY3Rpb25Ub0ZhbHNlIiwiYXNzaWduVW5pdFRvUHJvdGVjdCIsInVuaXRJZCIsInVuaXRUb1Byb3RlY3QiLCJjbGVhclVuaXRUb1Byb3RlY3QiLCJzZXRJc1VuaXROZWVkSGVscFRvVHJ1ZSIsInNldElzVW5pdE5lZWRIZWxwVG9GYWxzZSIsImFzc2lnblVuaXRUb0hlbHAiLCJ1bml0VG9IZWxwIiwiY2xlYXJVbml0VG9IZWxwIiwiYXNzaWduQmFzZU5vZGUiLCJyZW1vdmVCYXNlTm9kZSIsInNldENvbW1hbmROdW1iZXIiLCJjb21tYW5kTnVtYmVyIiwiZGVmYXVsdCIsImdlbmVyYWxVdGlsc18xIiwiZ2V0VW5pdEJ5SWQiLCJ2aXNpYmxlRm9yUGxheWVyVW5pdHMiLCJ2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyIsImFkZFVuaXRJbnRvVmlzaWJsZVVuaXRzIiwicmVtb3ZlVW5pdEZyb21WaXNpYmxlVW5pdHMiLCJfXzEiLCJjcmVhdGVOb2Rlc18xIiwiaW5pdGlhbE1hcCIsInNlYXJjaE1hcCIsImNyZWF0ZU1hcCIsIlByb21pc2UiLCJyZXNvbHZlIiwiY3JlYXRlTm9kZXMiLCJpbml0aWFsaXplU2VhcmNoTWFwIiwibWFwIiwiY3JlYXRlU2VhcmNoTWFwIiwiYWRkT2JzdGFjbGVzVG9NYXAiLCJjcmVhdGVPYnN0YWNsZXMiLCJjcmVhdGVPbmVPYnN0YWNsZSIsImluaXRpYWxpemVNYXAiLCJ0aGVuIiwiYWRkTmVpZ2hib3JzIiwiY2hvb3NlXzEiLCJvbkNob29zZVVuaXQiLCJjaG9vc2VVbml0VHlwZSIsImNyZWF0ZV8xIiwiY3JlYXRlVW5pdCIsImRyYXdVbml0IiwicmVkcmF3VW5pdHMiLCJmaWdodGluZ18xIiwiYXJtb3VyUGVuZXRyYXRpb24iLCJjaGVja0F0dGFja1NpZGUiLCJjYWxjdWxhdGVDaGFyZ2UiLCJjYWxjdWxhdGVEYW1hZ2UiLCJjYWxjdWxhdGVEYW1hZ2VCYXNlT25FbmVteVBvc2l0aW9uIiwiY2FsY3VsYXRlRGFtYWdlV2hlbkl0c0xlc3NUaGFuT25lIiwicmVtb3ZlVW5pdEZyb21FbmVtaWVzRmlnaHRBZ2FpbnN0IiwiZmluZFVuaXRJbkZpZ2h0QWdhaW5zdCIsImlzVW5pdEZpZ2h0aW5nIiwiY2hlY2tIZWFsdGgiLCJtZWxlZUF0dGFjayIsIm1lbGVlQ29tYmF0IiwicmVmcmVzaG1lbnQiLCJtb3ZlbWVudF8xIiwidXBkYXRlVW5pdCIsInB1cnN1ZVVuaXQiLCJzcG90dGluZ18xIiwic3BvdEVuZW15IiwiaXNVbml0U3BvdHRlZEJ5RW5lbXkiLCJzcG90VW5pdHMiLCJ0eXBlc18xIiwiQXJjaGVycyIsIkhlYXZ5SW5mYW50cnkiLCJIZWF2eUNhdmFscnkiLCJIb3BsaXRlcyIsIkxpZ2h0SW5mYW50cnkiLCJMaWdodENhdmFscnkiLCJNaWxpdGlhIiwiUGVsdGFzdHMiLCJQaWtlbWVuIiwiU2NvdXRzIiwiYXV4aWxpYXJ5XzEiLCJhdXhpbGlhcnlDYW52YXMiLCJiYWNrZ3JvdW5kXzEiLCJiYWNrZ3JvdW5kQ2FudmFzIiwiY2FudmFzXzEiLCJjYW52YXMiLCJ0ZXJyYWluXzEiLCJ0ZXJyYWluIiwiZHJhZ0FuZERyb3BfMSIsImRyYWdBbmREcm9wQ2FudmFzIiwibWFpbk1lbnVfMSIsIm1haW5NZW51IiwiUG93ZXIiLCJxdWFudGl0eSIsInRvdGFsSGVhbHRoIiwidG90YWxTcGVlZCIsInRvdGFsQXJtb3VyIiwidG90YWxNZWxlZURhbWFnZSIsInRvdGFsTWlzc2lsZURhbWFnZSIsInRvdGFsRGlzY2lwbGluZSIsInRvdGFsTW9yYWxlIiwidG90YWxDb25kaXRpb24iLCJpbmNyZW1lbnRRdWFudGl0eSIsImRlY3JlbWVudFF1YW50aXR5IiwiYWRkSGVhbHRoIiwiYWRkU3BlZWQiLCJhZGRBcm1vdXIiLCJhZGRNZWxlZURhbWFnZSIsImFkZE1pc3NpbGVEYW1hZ2UiLCJhZGREaXNjaXBsaW5lIiwiYWRkTW9yYWxlIiwiYWRkQ29uZGl0aW9uIiwicmVzZXRBbGxQcm9wZXJ0aWVzIiwic2lkZV8xIiwiYXJteUxheW91dF8xIiwiY29tcHV0ZXJBcm15IiwiY29tcHV0ZXJBcm15UG9zaXRpb25YIiwiY29tcHV0ZXJBcm15UG9zaXRpb25ZIiwicGxheWVyQXJteSIsInBsYXllckFybXlQb3NpdGlvblgiLCJwbGF5ZXJBcm15UG9zaXRpb25ZIiwiYWRkVW5pdFRvQXJteSIsImFybXkiLCJ1cGRhdGVkVW5pdCIsImFybXlQb3NpdGlvbiIsImNoYW5nZVBsYXllckFybXlQb3NpdGlvbiIsImNoYW5nZUNvbXB1dGVyQXJteVBvc2l0aW9uIiwicmVtb3ZlVW5pdEZyb21Bcm15IiwicmVhcnJhbmdlUGxheWVyQXJteVBvc2l0aW9uIiwicmVhcnJhbmdlQ29tcHV0ZXJBcm15UG9zaXRpb24iLCJtYXJnaW5XaWR0aCIsImFybXlJbWdXaWR0aCIsIm1hcmdpbkhlaWdodCIsImFybXlJbWdIZWlnaHQiLCJkZWZhdWx0V2lkdGgiLCJwbGF5ZXJBcm15XzEiLCJwcmV2WCIsInByZXZZIiwiY29tcHV0ZXJBcm15XzEiLCJpbmZvU2V0dGluZ3NfMSIsImdvbGRCb3hTdGFydFgiLCJnb2xkQm94U3RhcnRZIiwic3RhcnRUb3RhbE1vbmV5VGl0bGVYIiwic3RhcnRUb3RhbE1vbmV5VGl0bGVZIiwiYm94V2lkdGgiLCJib3hIZWlnaHQiLCJnb2xkT3B0aW9ucyIsInVuaXRJbmZvVGl0bGVYIiwidW5pdEluZm9UaXRsZVkiLCJwcm9wZXJ0eVN0YXJ0WCIsInByb3BlcnR5U3RhcnRZIiwidmFsdWVTdGFydFgiLCJ2YWx1ZVN0YXJ0WSIsImJhdHRsZVNldHRpbmdzXzEiLCJ3aWR0aCIsImhlaWdodCIsImJhdHRsZVNldHRpbmdzWCIsImJhdHRsZVNldHRpbmdzWSIsInVuaXRJbmZvWCIsInVuaXRJbmZvWSIsImN1cnJlbnRseUNob3NlblVuaXQiLCJhc3NpZ25DdXJyZW50bHlDaG9zZW5Vbml0Iiwic2V0dGluZ3NfMSIsImljb25TZXR0aW5nc18xIiwidW5pdHNfMSIsInVuaXRJY29uSW1hZ2VzXzEiLCJjdXJyZW50bHlDaG9zZW5Vbml0XzEiLCJkcmF3VW5pdEljb24iLCJoYWxmIiwidW5pdEluZGV4IiwiZ2V0VW5pdFBvc2l0aW9uSW5BcnJheSIsIlVOSVRfTEVGVF9QQU5FTF9XSURUSCIsIlVOSVRfSUNPTl9XSURUSCIsIlVOSVRfUEFORUxfSEVJR0hUIiwiY2xlYXJSZWN0IiwiVU5JVF9JQ09OX0hFSUdIVCIsImsiLCJpbml0aWFsWCIsImljb25XaWR0aCIsInN0cm9rZVJlY3QiLCJkcmF3TW92ZW1lbnRJY29uIiwibW92ZW1lbnRJY29uIiwiZHJhd0ZpZ2h0SWNvbiIsImZpZ2h0SWNvbiIsImRyYXdBcnJvd0ljb24iLCJhdHRyaWJ1dGVzSGVpZ2h0IiwiZmlsbEhlYWx0aFBvaW50cyIsImhlYWx0aFBvaW50c0hlaWdodCIsImRyYXdJY29uIiwiZHJhd0ltYWdlIiwibW92ZW1lbnRJY29uSW1hZ2UiLCJmaWdodEljb25JbWFnZSIsImluaXRpYWxIZWFsdGgiLCJoZWFsdGhQZXJjZW50YWdlIiwiaGVhbHRoUG9pbnRzV2lkdGgiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInNhdmUiLCJmaWx0ZXIiLCJ1bml0SWNvbkltYWdlcyIsImljb25IZWlnaHQiLCJyZXN0b3JlIiwibG9hZGluZ0NhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbml0aWFsTWFwXzEiLCJiaW5hcnlTZWFyY2hfMSIsIm5vZGVzSW5YIiwibm9kZXNJblkiLCJ4Tm9kZXMiLCJmaW5kWEluU2VhcmNoTWFwIiwiY29vcmRpbmF0ZVlCaW5hcnlTZWFyY2giLCJjbGVhck1hcF8xIiwiY2xlYXJNYXAiLCJncmlkXzEiLCJkcmF3R3JpZCIsIm5laWdoYm9yc18xIiwibmVpZ2hib3JzIiwibm9kZXNfMSIsIm9ic3RhY2xlc18xIiwiY3JlYXRlVW5pdE9ic3RhY2xlIiwiZGVmYXVsdFVuaXRzXzEiLCJsb2FkSWNvbnMiLCJsb2FkRmlnaHRJY29uSW1hZ2UiLCJsb2FkTW92ZW1lbnRJY29uSW1hZ2UiLCJsb2FkU3dvcmRJY29uSW1hZ2UiLCJsb2FkU3BlYXJJY29uSW1hZ2UiLCJsb2FkU3BlYXJBbmRTaGllbGRJY29uSW1hZ2UiLCJsb2FkU3dvcmRBbmRSb3VuZFNoaWVsZEljb25JbWFnZSIsImxvYWRVbml0SWNvbnMiLCJjcmVhdGVEZWZhdWx0VW5pdHMiLCJsb2FkRGVmYXVsdFVuaXRzIiwibG9hZFVuaXRJY29uSW1hZ2VzIiwibW92ZUljb25TcmMiLCJlcnIiLCJpbWciLCJmaWdodEljb25TcmMiLCJkZWZhdWx0VW5pdHMiLCJzd29yZEljb25TcmMiLCJzd29yZEljb25JbWFnZSIsInNwZWFySWNvblNyYyIsInNwZWFySWNvbkltYWdlIiwic3BlYXJBbmRTaGllbGRTcmMiLCJzcGVhckFuZFNoaWVsZEljb25JbWFnZSIsInN3b3JkQW5kUm91bmRTaGllbGRTcmMiLCJzd29yZEFuZFJvdW5kU2hpZWxkSWNvbkltYWdlIiwicmV2ZWFsZWRVbml0cyIsImFkZFRvUmV2ZWFsZWRVbml0cyIsInJlbW92ZUZyb21SZXZlYWxlZFVuaXRzIiwiY29tbW9uXzEiLCJhdHRhY2tFbmVteSIsIm1vdmVUbyIsImJ1dHRvbkF2YWlsYWJsZV8xIiwiaXNTdGFydEJhdHRsZUF2YWlsYWJsZSIsImJ1dHRvblNlbGVjdGVkXzEiLCJpc1N0YXJ0QmF0dGxlQnV0dG9uU2VsZWN0ZWQiLCJzaG93QnV0dG9uXzEiLCJzaG93U3RhcnRCYXR0bGVCdXR0b24iLCJzaG93VGV4dCIsImJhdHRsZV8xIiwibGF1bmNoQmF0dGxlIiwiZ2FtZV8xIiwibGF1bmNoR2FtZSIsIm1vZGVzXzEiLCJhY3RpdmF0ZUJhdHRsZU1vZGUiLCJhY3RpdmF0ZU1haW5NZW51TW9kZSIsInBhdGhfMSIsImV2ZW50XzEiLCJsb2FkaW5nXzEiLCJnZXRDb250ZXh0IiwicGF0aENhbnZhcyIsInBhdGhDdHgiLCJldmVudENhbnZhcyIsImV2ZW50Q3R4IiwibG9hZGluZ0N0eCIsInZpc2libGVVbml0c18xIiwiaGlkaW5nRW5lbWllcyIsImFkZFRvSGlkaW5nRW5lbWllcyIsInJlbW92ZUZyb21IaWRpbmdFbmVtaWVzIiwiZ2V0U3Vycm91bmRlZE5vZGVzXzEiLCJnZXRTdXJyb3VuZGVkRW5lbWllc18xIiwiZ2V0U3Vycm91bmRlZEFsbGllc18xIiwiZ2V0U3Vycm91bmRlZEFsbGllcyIsImRpc3RhbmNlIiwibm9kZXMiLCJzdGFydFgiLCJmaW5pc2hYIiwic3RhcnRZIiwiZmluaXNoWSIsIlVOSVRfUEFORUxfV0lEVEgiLCJVTklUX1JJR0hUX1BBTkVMX1dJRFRIIiwiVU5JVF9JQ09OU19QQU5FTF9XSURUSCIsInVuaXRUb0ljb25NYXBfMSIsImNvbG9yIiwicmFkaXVzT2Zmc2V0IiwiYmVnaW5QYXRoIiwiYXJjIiwiUEkiLCJmaWxsIiwiY2xvc2VQYXRoIiwidW5pdFRvSWNvbk1hcCIsImNsZWFyVW5pdEltYWdlIiwidW5pdHNfMiIsInJlZHJhd1BsYXllclVuaXRzIiwidXRpbHNfMiIsIm1vdmVtZW50VXRpbHNfMSIsIm1vdmVUb05leHROb2RlXzEiLCJ1cGRhdGVVbml0XzEiLCJzdG9wTW92aW5nXzEiLCJwcmlvcml0eV8xIiwiZ2V0SW50ZXJjZXB0ZWRFbmVtaWVzXzEiLCJnZXRCbG9ja2VkRW5lbWllc18xIiwiZHJhd1VuaXRJY29uXzEiLCJwdXJzdWVkVW5pdCIsImN1cnJlbnRNb3ZlVG9YIiwiY3VycmVudE1vdmVUb1kiLCJwYXRoIiwibmV3TW92ZW1lbnQiLCJ0cmllcyIsInVuaXRDYW5HZXRPdXRPZkNvbWJhdCIsImN1cnJlbnROb2RlXzEiLCJzdGFydE5vZGVfMSIsImZpbmlzaE5vZGVfMSIsIm5ld1BhdGgiLCJhU3RhciIsInN0YXJ0Tm9kZV8yIiwiZmluaXNoTm9kZV8yIiwiZ2V0SW50ZXJjZXB0ZWRFbmVtaWVzIiwidXBkYXRlZFBhdGgiLCJzdGFydE5vZGUiLCJmaW5pc2hOb2RlIiwibG9nIiwic3RvcE1vdmluZyIsInB1cnN1ZWRVbml0Q3VycmVudE5vZGUiLCJnZXRCbG9ja2VkRW5lbWllcyIsIl9iIiwiX2MiLCJwZXJtaXNzaW9uIiwidW5pdENhbk1vdmVUb1RoZU5vZGUiLCJ1cGRhdGVkTWFwIiwiX2QiLCJibG9ja2VkTm9kZXNfMSIsImJsb2NrZWROb2RlIiwic3RhcnROb2RlXzMiLCJmaW5pc2hOb2RlXzMiLCJtb3ZlVG9OZXh0Tm9kZUluUHVyc3VlVW5pdCIsInB1cnN1ZVVuaXRfMSIsImNoYXNlblVuaXQiLCJjdXJyZW50Tm9kZV8yIiwiX2UiLCJfZiIsIm5vZGVUb0NsZWFyIiwibW92ZVRvTmV4dE5vZGVJblVwZGF0ZVVuaXQiLCJjdXJyZW50Tm9kZV8zIiwiZ2V0Q2xvc2VzdFVuaXRUb05vZGUiLCJjbG9zZXN0VW5pdCIsImNsb3Nlc3RVbml0RGlzdGFuY2UiLCJnZXRDbG9zZXN0VW5pdFRvT3RoZXJVbml0IiwidXBkYXRlZENvbXB1dGVyc1VuaXRzIiwiZ2V0QmVzdFVuaXRCeVByb3BlcnR5IiwiZXhjbHVzaW9uIiwiZXhjbHVzaW9uXzEiLCJiZXN0VW5pdCIsImdldFdvcnN0VW5pdEJ5UHJvcGVydHkiLCJleGNsdXNpb25fMiIsIndvcnN0VW5pdCIsImdldEJlc3RFbmVteUJ5UHJvcGVydHkiLCJ1cGRhdGVkUGxheWVyVW5pdHMiLCJleGNsdXNpb25fMyIsImdldFdvcnN0RW5lbXlCeVByb3BlcnR5IiwiZXhjbHVzaW9uXzQiLCJnZXROb3RGaWdodGluZ1VuaXRzIiwidXBkYXRlZENvbXB1dGVyVW5pdHMiLCJleGNsdXNpb25fNSIsIm5vdEZpZ2h0aW5nVW5pdHMiLCJ1cGRhdGVkQ29tcHV0ZXJVbml0c18xIiwiZ2V0RmlnaHRpbmdVbml0cyIsImZpZ2h0aW5nVW5pdHMiLCJnZXRUb3RhbFVuaXRzSGVhbHRoIiwidW5pdHNfMyIsImdldFRvdGFsVW5pdHNJbml0aWFsSGVhbHRoIiwidG90YWxJbml0aWFsSGVhbHRoIiwidW5pdHNfNCIsImdldENsb3Nlc3RFbmVteVRvVW5pdCIsImdldEZyZWVVbml0cyIsImV4Y2x1c2lvbl82IiwiZnJlZVVuaXRzIiwidXBkYXRlZENvbXB1dGVyc1VuaXRzXzEiLCJnZXRVbml0c0J5VGFzayIsImV4Y2x1c2lvbl83IiwidXBkYXRlZENvbXB1dGVyc1VuaXRzXzIiLCJnZXRVbml0c0J5UHJvcGVydHlWYWx1ZSIsImV4Y2x1c2lvbl84IiwidXBkYXRlZENvbXB1dGVyc1VuaXRzXzMiLCJnZXRVbml0c1doZXJlVmFsdWUiLCJvcGVyYXRvciIsImV4Y2x1c2lvbl85IiwidXBkYXRlZENvbXB1dGVyc1VuaXRzXzQiLCJ0b0xvd2VyQ2FzZSIsImdldERhbmdlcm91c1VuaXRzIiwiZW5lbWllcyIsImRhbmdlcm91c0VuZW1pZXMiLCJlbmVtaWVzXzEiLCJ2dWxuZXJhYmxlQWdhaW5zdCIsImRhbmdlcm91c0VuZW15IiwiY29udGFpbnNEYW5nZXJvdXNVbml0cyIsInVuaXRzXzUiLCJpc0VuZW15RGFuZ2Vyb3VzRm9yVW5pdCIsImlzRW5lbXlWdWxuZXJhYmxlVG9Vbml0IiwiYWR2YW50YWdlT3ZlciIsInZ1bG5lcmFibGVFbmVteSIsImdldFNjb3V0c051bWJlciIsImNvbXB1dGVyVW5pdHNfMSIsImlzVW5pdHNDaGFuZ2VkIiwiY3VycmVudFVuaXRzIiwicHJldmlvdXNVbml0cyIsImNvbXBhcmUiLCJ1bml0MSIsInVuaXQyIiwidXBkYXRlZEN1cnJlbnRVbml0cyIsInVwZGF0ZWRQcmV2aW91c1VuaXRzIiwic29ydCIsImZyb21NYXBfMSIsImdldFN1cnJvdW5kZWRVbml0cyIsImNvdW50T25lc2VsZiIsInN1cnJvdW5kZWRVbml0cyIsInVwZGF0ZWRVbml0cyIsInVwZGF0ZWRVbml0c18xIiwiY3VycmVudFVuaXQiLCJjdXJyZW50VW5pdE5vZGUiLCJyb3N0ZXIiLCJjcmVhdGVSb3N0ZXIiLCJkZWZhdWx0VW5pdHNfMiIsInJvc3Rlcl8xIiwic2VsZWN0ZWQiLCJ0b3RhbEdvbGQiLCJnb2xkIiwiYXJteV8xIiwiZGlzcGxheUFybXkiLCJpY29uXzEiLCJkcmF3UmVtb3ZlSWNvbiIsInJlbW92ZV8xIiwiaXNVbml0U2hvdWxkQmVSZW1vdmVkIiwiYXJteVNldHRpbmdzXzEiLCJkaXNwbGF5Q2hvc2VuVW5pdHMiLCJkaXNwbGF5Q2hvc2VuVW5pdHNUaXRsZSIsIm9uQ2hvb3NlVW5pdEluQXJteSIsImNvbXB1dGVyXzEiLCJkaXNwbGF5Q29tcHV0ZXIiLCJwbGF5ZXJfMSIsImRpc3BsYXlQbGF5ZXIiLCJyZW1haW5Hb2xkXzEiLCJkaXNwbGF5UmVtYWluR29sZCIsInRpdGxlXzEiLCJkaXNwbGF5VGl0bGUiLCJncmlkU2l6ZV8xIiwiYmF0dGxlTW9kZSIsImJhdHRsZUZpbmlzaCIsImZpbmlzaEJhdHRsZSIsImluY1VuaXRJZCIsImRhbWFnZV8xIiwiQVN0YXJfMSIsImRyYXdQYXRoXzEiLCJkcmF3UGF0aCIsImZpbmRQYXRoXzEiLCJmaW5kUGF0aEZyb21PbmVOb2RlVG9Bbm90aGVyIiwiYVN0YXJVdGlsc18xIiwiZ2V0TWluRlNjb3JlIiwidW5jbG9zZWROZWlnYm9ycyIsImlzT2JqZWN0SW5NYXBLZXlzIiwib3BlbiIsImNsb3NlZCIsImdTY29yZSIsImZTY29yZSIsImgiLCJmcm9tIiwiTWFwIiwiY3VycmVudCIsInJlY29uc3RydWN0UGF0aCIsIm5laWdoYm9yIiwiZ2V0TmVpZ2hib3JEaXN0YW5jZSIsInRlbXBHIiwic2V0Iiwibm9kZU5laWdoYm9ycyIsImR4IiwiYWJzIiwiZHkiLCJtaW4iLCJyZXZlcnNlUGF0aCIsInRvdGFsUGF0aCIsIm1vdmVUb1giLCJtb3ZlVG9ZIiwiUG93ZXJfMSIsInBsYXllclBvd2VyIiwiY29tcHV0ZXJQb3dlciIsImdldFJhbmRvbVVuaXQiLCJzaHVmZmxlVW5pdHMiLCJhc3Nlc3NWdWxuZXJhYmlsaXR5XzEiLCJhc3Nlc3NWdWxuZXJhYmlsaXR5IiwiZ2VuZXJhdGVDdXJyZW50Q29tbWFuZE51bWJlciIsInJhbmRvbU51bWJlciIsInJhbmRvbSIsImN1cnJlbnRDb21tYW5kTnVtYmVyIiwicm9zdGVySW1nV2lkdGgiLCJyb3N0ZXJJbWdIZWlnaHQiLCJkaXNwbGF5Um9zdGVyXzEiLCJkaXNwbGF5Um9zdGVyIiwiZGlzcGxheVVuaXRzXzEiLCJkaXNwbGF5Um9zdGVyVW5pdHMiLCJkaXNwbGF5VGl0bGVfMSIsImRpc3BsYXlSb3N0ZXJUaXRsZSIsInBsYXllclNwZW50R29sZCIsImNvbXB1dGVyU3BlbnRHb2xkIiwic2VsZWN0ZWRVbml0SW5Sb3N0ZXIiLCJzZWxlY3RVbml0SW5Sb3N0ZXIiLCJiYXR0bGVJbmZvXzEiLCJjaGFuZ2VUb3RhbEdvbGQiLCJpbmZvXzEiLCJvbkNob29zZUluZm8iLCJkaXNwbGF5SW5mbyIsImNoYW5nZVkiLCJzZXREZWZhdWx0Iiwib25DaG9vc2VQbGF5ZXIiLCJvbkNob29zZUNvbXB1dGVyIiwiZGlzcGxheV8xIiwicGxheWVyU3dpdGNoZXJYMCIsInBsYXllclN3aXRjaGVyWDEiLCJwbGF5ZXJTd2l0Y2hlclkwIiwicGxheWVyU3dpdGNoZXJZMSIsImNvbXB1dGVyU3dpdGNoZXJYMCIsImNvbXB1dGVyU3dpdGNoZXJYMSIsImNvbXB1dGVyU3dpdGNoZXJZMCIsImNvbXB1dGVyU3dpdGNoZXJZMSIsInBsYXllclN3aXRjaGVyV2lkdGgiLCJjb21wdXRlclN3aXRjaGVyV2lkdGgiLCJnb2xkWCIsImdvbGRZIiwibGF5b3V0U2V0dGluZ3NfMSIsInN0YXJ0QmF0dGxlQnV0dG9uWCIsInN0YXJ0QmF0dGxlQnV0dG9uWSIsInN0YXJ0QmF0dGxlQnV0dG9uV2lkdGgiLCJzdGFydEJhdHRsZUJ1dHRvbkhlaWdodCIsInN0YXJ0QmF0dGxlVGV4dFgiLCJzdGFydEJhdHRsZVRleHRZIiwiZGlzcGxheVVuaXRJY29uc18xIiwiZ2FtZUxvb3BfMSIsImRyYXdVbml0XzEiLCJjbGlja0ljb25fMSIsImNvbXB1dGVyQWN0aW9uXzEiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsIm1vdXNlWCIsIm9mZnNldFgiLCJtb3VzZVkiLCJvZmZzZXRZIiwicG9pbnRlZFVuaXQiLCJmb250IiwiZmlsbFRleHQiLCJkaXNwbGF5VW5pdEljb25zIiwiY2xlYXJQYXRoIiwicHJldmVudERlZmF1bHQiLCJjb21wdXRlclVuaXRzXzIiLCJjb21wdXRlclVuaXQiLCJib3R0b21SaWdodFgiLCJib3R0b21SaWdodFkiLCJkcmF3Q2xpY2tlZEljb24iLCJiYXR0bGVMaXN0ZW5lciIsImNvbXB1dGVyTW92ZW1lbnQiLCJzZXRJbnRlcnZhbCIsImlzQmF0dGxlRW5kIiwiaW1nUGF0aCIsImNhbGxiYWNrIiwiSW1hZ2UiLCJvbmxvYWQiLCJvbmVycm9yIiwic3JjIiwiYXJyIiwiZWwiLCJhcnJfMSIsIm9iaiIsInVuaXRBY3Rpb25zXzEiLCJmaW5kQ2xvc2VzdFVuaXRzVG9UaGVOb2RlQ2VudGVyIiwiZ2V0Q2xvc2VzdE5vZGVUb1VuaXQiLCJnZXRCZXN0VW5pdHNCeVByb3BlcnR5IiwiTWFwTm9kZV8xIiwibWFwTm9kZSIsImN1cnJlbnRYIiwiY3VycmVudFkiLCJ1cGRhdGVkQXJyIiwidW5pdDFYIiwidW5pdDFZIiwidW5pdDJYIiwidW5pdDJZIiwiY2hlY2tlZFVuaXQiLCJhcnJfMiIsImNob29zZVVuaXRUeXBlXzEiLCJvbkNob29zZVVuaXRfMSIsIkFyY2hlcnNfMSIsIkhlYXZ5Q2F2YWxyeV8xIiwiSGVhdnlJbmZhbnRyeV8xIiwiSG9wbGl0ZXNfMSIsIkxpZ2h0Q2F2YWxyeV8xIiwiTGlnaHRJbmZhbnRyeV8xIiwiTWlsaXRpYV8xIiwiUGVsdGFzdHNfMSIsIlBpa2VtZW5fMSIsIlNjb3V0c18xIiwiVW5pdF8xIiwidW5pdElkXzEiLCJ0eXBlIiwiY3JlYXRlRGVmYXVsdFVuaXQiLCJmaWxsVW5pdFRvSWNvbk1hcCIsImFycm93SWNvbiIsImNyZWF0ZVVuaXRfMSIsInJlbGVhc2VkVW5pdFR5cGVzIiwicmVsZWFzZWRVbml0VHlwZXNfMSIsImFybW91clBlbmV0cmF0aW9uXzEiLCJhdHRhY2tTaWRlXzEiLCJ1bml0RmlnaHRBZ2FpbnN0XzEiLCJjaGVja0hlYWx0aF8xIiwiY2hlY2tGaWdodGluZ18xIiwibWVsZWVBdHRhY2tfMSIsIm1lbGVlQ29tYmF0XzEiLCJyZW1vdmVVbml0XzEiLCJyZW1vdmVVbml0IiwiYWRkVW5pdFRvU3BvdHRlZFVuaXRzIiwicmVtb3ZlVW5pdEZyb21TcG90dGVkVW5pdHMiLCJzcG90dGVkVW5pdHMiLCJyZWZyZXNobWVudF8xIiwicmFuZG9taXplTWVsZWVEYW1hZ2UiLCJtYXgiLCJjZWlsIiwiZmxvb3IiLCJwbGF5ZXJVbml0c18xIiwibmVpZ2hib3JzTm90SW5DbG9zZWQiLCJpc0luQ2xvc2VkIiwiY2xvc2VkXzEiLCJBcnJheSIsInJlc3VsdCIsInN0YXJ0SW5kZXgiLCJmaXJzdE5vZGUiLCJjdXJyZW50Tm9kZUNlbnRlclgiLCJjdXJyZW50Tm9kZUNlbnRlclkiLCJuZXh0Tm9kZUNlbnRlclgiLCJuZXh0Tm9kZUNlbnRlclkiLCJzdHJva2VTdHlsZSIsImxpbmVUbyIsInN0cm9rZSIsImNsZWFyQ3VycmVudE5vZGUiLCJvdXRPZkNvbWJhdF8xIiwiY2FsY3VsYXRlQ2hhbmNlVG9HZXRPdXRPZkNvbWJhdCIsIm1ha2VNb3ZlbWVudF8xIiwiY3VyclgiLCJjdXJyWSIsImFsbFBhdGgiLCJub2RlSSIsIm1ha2VNb3ZlbWVudEluUHVyc3VlVW5pdCIsIm1ha2VNb3ZlbWVudEluVXBkYXRlVW5pdCIsImFzc2Vzc1ByaW9yaXR5XzEiLCJnZXRQcmlvcml0eVVuaXQiLCJzaHVmZmxlVW5pdHNfMSIsInNodWZmbGVJRF8xIiwic2h1ZmZsZUlEIiwiZ2V0SW50ZXJjZXB0aW9uTm9kZXNfMSIsImludGVyY2VwdGlvbkVuZW1pZXMiLCJpbnRlcmNlcHRpb25Ob2RlcyIsImdldEludGVyY2VwdGlvbk5vZGVzIiwiaW50ZXJjZXB0aW9uTm9kZXNfMSIsImJsb2NrZWRFbmVtaWVzIiwiaW5pdGlhbENvbXB1dGVyUG93ZXJfMSIsImluaXRpYWxQbGF5ZXJQb3dlcl8xIiwicGxheWVyUG93ZXJfMSIsImNvbXB1dGVyUG93ZXJfMSIsInJldmVhbGVkRW5lbWllc18xIiwidmlzaWJsZVBsYXllclVuaXRzUG93ZXJfMSIsInJldmVhbGVkVW5pdHNQb3dlcl8xIiwiY2FsY3VsYXRlVG90YWxDb21wdXRlclBvd2VyIiwibG9jYWxQb3dlciIsImRlY29tcG9zZVVuaXRQcm9wcyIsImRlY29tcG9zZVBvd2VyIiwiY2FsY3VsYXRlVG90YWxQbGF5ZXJQb3dlciIsImNhbGN1bGF0ZVJldmVhbGVkVW5pdHNQb3dlciIsInJldmVhbGVkVW5pdHNQb3dlciIsInJldmVhbGVkVW5pdHNfMSIsImNhbGN1bGF0ZVZpc2libGVQbGF5ZXJQb3dlciIsInZpc2libGVQbGF5ZXJVbml0c1Bvd2VyIiwidmlzaWJsZUZvckNvbXB1dGVyVW5pdHNfMSIsImNhbGN1bGF0ZUluaXRpYWxDb21wdXRlclBvd2VyIiwiaW5pdGlhbENvbXB1dGVyUG93ZXIiLCJjYWxjdWxhdGVJbml0aWFsUGxheWVyUG93ZXIiLCJpbml0aWFsUGxheWVyUG93ZXIiLCJwbGF5ZXJVbml0c18yIiwiY2FsY3VsYXRlVG90YWxQb3dlciIsImNhbGN1bGF0ZUluaXRpYWxQb3dlciIsInBvd2VyIiwiZ2V0UmFuZG9tVmFsdWVJblJhbmdlIiwibmV3TWluIiwibmV3TWF4IiwiQ29tbWFuZCIsIkFJX2FjdGlvbnNfMSIsImNhbGN1bGF0ZVRvdGFsVW5pdHNXZWlnaHQiLCJnZXRSYW5kb21Vbml0XzEiLCJnZXRTdXJyb3VuZGVkVW5pdHNfMSIsImN1cnJlbnRDb21tYW5kTnVtYmVyXzEiLCJtb3ZlVG9fMSIsImFjdGlvblVuaXQiLCJwcm90ZWN0aW9uIiwibmV3Q29tbWFuZCIsImRpc3RhbmNlQmV0d2VlblVuaXRzIiwidW5pdFRvQXR0YWNrIiwic2V0VGltZW91dCIsInJvc3RlclNldHRpbmdzXzEiLCJpc1VuaXRTZWxlY3RlZEluUm9zdGVyIiwicm9zdGVyXzIiLCJ4MCIsIngxIiwieTAiLCJ5MSIsImluZm9MYXlvdXRfMSIsInJvc3RlckxheW91dF8xIiwiYm90dG9tTGF5b3V0XzEiLCJ1cHBlckxheW91dF8xIiwibGF5b3V0XzEiLCJkaXNwbGF5QXJteV8xIiwidW5pdE51bWJlciIsImVtcHR5Qm94IiwiZmlsbGVkIiwicmVtb3ZlSWNvbl8xIiwiYXJteV8yIiwiZHJhd01vbmV5Qm94XzEiLCJkcmF3TW9uZXlCb3giLCJ0b3RhbEdvbGRfMSIsImZpbGxUb3RhbEdvbGQiLCJzaG93VG90YWxHb2xkIiwiZHJhd2xheW91dF8xIiwiZHJhd0JvdHRvbUxheW91dCIsImZpbGxMYXlvdXRfMSIsImZpbGxMYXlvdXQiLCJvbkNob29zZUJhdHRsZVNldHRpbmdzIiwib25DaG9vc2VVbml0SW5mbyIsImRpc3BsYXlJbmZvXzEiLCJiYXR0bGVTZXR0aW5nU3dpdGNoZXJfMSIsImJhdHRsZVNldHRpbmdTd2l0Y2hlciIsInNob3dTd2l0Y2hlcl8xIiwic2hvd1N3aXRoZXIiLCJ1bml0SW5mb1N3aXRjaGVyXzEiLCJ1bml0SW5mb1N3aXRjaGVyIiwic2hvd0luZm9fMSIsInRleHRBbGlnbiIsImRyYXdMb2FkaW5nQ2FudmFzIiwic3R5bGUiLCJ6SW5kZXgiLCJkZWxldGVOb2RlRnJvbUNvbXB1dGVyTm9kZXMiLCJkZWxldGVOb2RlRnJvbVBsYXllck5vZGVzIiwiY29tcHV0ZXJVbml0c05vZGVzIiwiaW5pdGlhbGl6ZUNvbXB1dGVyVW5pdHNOb2RlcyIsImNvbXB1dGVyWDAiLCJjb21wdXRlclgxIiwiY29tcHV0ZXJZMSIsInBsYXllclVuaXRzTm9kZXMiLCJpbml0aWFsaXplUGxheWVyVW5pdHNOb2RlcyIsInBsYXllclgxIiwicGxheWVyWTEiLCJsYXVuY2hCYXR0bGVfMSIsImdsb2JhbENvbmZpZ18xIiwiYm9yZGVyIiwiX193ZWJwYWNrX2V4cG9ydHNfXyIsIl9sb2FkSW1hZ2VfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyIsInRvQXJyYXlfMSIsIm9iamVjdF8xIiwiZGlzdGFuY2VJbkdyaWRzXzEiLCJub2RlWCIsIm5vZGVZIiwidW5pdFgiLCJ1bml0WSIsIm5vZGUxIiwibm9kZTIiLCJub2RlMVgiLCJub2RlMVkiLCJub2RlMlgiLCJub2RlMlkiLCJmcm9tQXJyYXlfMSIsImNsb3Nlc3RUb0VuZW15XzEiLCJnZXRDbG9zZXN0VG9FbmVteVNpZGVOb2RlcyIsImdldENsb3Nlc3RUb0VuZW15Tm9kZXMiLCJmYXJ0aGVzdF8xIiwiZ2V0RmFydGhlc3ROb2RlRnJvbUVuZW15IiwiZ2V0RmFydGhlc3RYTm9kZXMiLCJmcm9tTm9kZV8xIiwiYWN0aW9uc18xIiwiaGlkaW5nRW5lbWllc18xIiwiY2xvc2VzdE5vZGVzIiwibWluVmFsdWUiLCJoaWRpbmdFbmVtaWVzXzIiLCJoaWRpbmdFbmVteSIsImNsb3Nlc3ROb2RlIiwiY2xvc2VzdE5vZGVEaXN0YW5jZSIsImJlc3RVbml0cyIsImNsb3Nlc3REaXN0YW5jZSIsImNsb3Nlc3RVbml0cyIsImNsb3Nlc3RVbml0WCIsImNsb3Nlc3RVbml0WSIsImN1cnJlbnRVbml0WCIsImN1cnJlbnRVbml0WSIsImNsb3Nlc3RVbml0RFgiLCJjbG9zZXN0VW5pdERZIiwiY3VycmVudFVuaXREWCIsImN1cnJlbnRVbml0RFkiLCJjbG9zZXN0VW5pdERpc3QiLCJzcXJ0IiwicG93IiwiY3VycmVudFVuaXREaXN0IiwidXBkYXRlZFVuaXRzXzIiLCJmYXJ0aGVzdE5vZGUiLCJmYXJ0aGVzdE5vZGVEaXN0YW5jZSIsImZhcnRoZXN0Tm9kZXMiLCJtYXhWYWx1ZSIsImRyYXdHcmlkXzEiLCJhZGROZWlnaGJvcnNfMSIsImRpcnNfMSIsImRpciIsIm1hcF8yIiwiTWFwTm9kZSIsImNyZWF0ZU9ic3RhY2xlXzEiLCJjcmVhdGVPYnN0YWNsZXNfMSIsInVuaXRPYnN0YWNsZV8xIiwicG9zaXRpb25YIiwicG9zaXRpb25ZIiwibmV3TWFwIiwibGVmdCIsInJpZ2h0Iiwic2VhcmNoQ29vcmRpbmF0ZSIsIm1lZGl1bSIsImNvb3JkaW5hdGUiLCJzZWFyY2hWYWx1ZSIsInN3YXAiLCJhIiwiYiIsInRlbXAiLCJhc3NpZ25SYW5kb21WYWx1ZSIsInJhbmRvbVZhbHVlIiwidXBkYXRlZE5vZGVzIiwicmFuZG9tVmFsdWVOb2RlcyIsImoiLCJzaHVmZmxlZE5vZGVzIiwicmFuZG9tVmFsdWVOb2Rlc18xIiwiZ2V0U3Vycm91bmRlZEJsb2NrZWROb2Rlc18xIiwiYWxsaWVkVW5pdHMiLCJzdXJyb3VuZGVkTm9kZXMiLCJzdXJyb3VuZGVkQmxvY2tlZE5vZGVzIiwic3Vycm91bmRlZE5vZGVzXzEiLCJhbGxpZWRVbml0Iiwic3Vycm91bmRlZEVuZW1pZXMiLCJ1cGRhdGVkQWxsaWVzIiwic3Vycm91bmRlZEFsbGllcyIsImFsbGllcyIsInVwZGF0ZWRBbGxpZXNfMSIsImFsbHkiLCJhbGx5Tm9kZSIsInByb3BlcnR5XzEiLCJ1bml0UG9zaXRpb25fMSIsIm1pblByb3BlcnR5IiwibWF4UHJvcGVydHkiLCJwb3NpdGlvbl8xIiwiZ2V0VW5pdHNPblRoZU5vZGVfMSIsImdldFVuaXRzT25UaGVOb2RlIiwib3RoZXJVbml0cyIsImN1cnJlbnRVbml0TmV4dE5vZGUiLCJvdGhlclVuaXRzXzEiLCJvdGhlclVuaXQiLCJ1bml0c09uVGhlTm9kZSIsIm90aGVyVW5pdEN1cnJlbnROb2RlWCIsIm90aGVyVW5pdEN1cnJlbnROb2RlWSIsIm90aGVyVW5pdE5leHROb2RlWCIsIm90aGVyVW5pdE5leHROb2RlWSIsImRyYXdCYWNrZ3JvdW5kXzEiLCJkcmF3T2JzdGFjbGVfMSIsIl9zdXBlciIsIl90aGlzIiwiZGVzY3JpcHRpb24iLCJjb3N0IiwiX19leHRlbmRzIiwidW5pdENvbmZpZ18xIiwiaW5pdGlhbFdlaWdodCIsImFtbXVuaXRpb24iLCJmb3VuZFVuaXQiLCJhcm1vdXJfMSIsImNoYXJnZV8xIiwiZmlnaHRBZ2FpbnN0XzEiLCJtZWxlZV8xIiwiZGFtYWdlIiwiZW5lbXlDdXJyTm9kZSIsImVuZW15TmV4dE5vZGUiLCJmcm9udFVuaXROb2RlIiwiYXR0YWNrVW5pdCIsImRlZmVuZFVuaXQiLCJhdHRhY2tBbmdsZSIsImNoYXJnZVBvc2l0aW9uIiwiaW5pdGlhbENoYXJnZSIsImVuZW15UG9zaXRpb24iLCJpbml0aWFsRGFtYWdlIiwiZmluZGVkVW5pdHMiLCJlbmVtaWVzXzIiLCJzcG90dGVkVW5pdHNfMSIsInN0b3JlXzEiLCJtZWxlZURhbWFnZV8xIiwiXzEiLCJhdHRhY2tfMSIsImVuZW15WCIsImVuZW15WSIsIngyIiwieTIiLCJjaGFuY2UiLCJudW1iZXJPZkVuZW15IiwidW5pdE1vYmlsaXR5IiwidG90YWxFbmVteVNwZWVkIiwidW5pdEhhc0VuZW15SW5UaGVCYWNrIiwiY2xlYXJYIiwiY2xlYXJZIiwidW5pdERpYW1ldGVyIiwiZmFzdGVzdFVuaXRzIiwicHJpb3JpdHlVbml0Iiwib3JpZ2luYWxVbml0cyIsInNldFJhbmRvbVZhbHVlIiwiaWRzIiwiaW50ZXJjZXB0ZWROb2RlcyIsImludGVyY2VwdGVkTm9kZSIsInVuaXRTcG90dGluZ18xIiwidmlzaWJpbGl0eVJhbmdlIiwiZW5lbXlOb2RlIiwiaXNTcG90dGVkIiwiZHJhd01lc3NhZ2VfMSIsImNvbXB1dGVyTnVtYmVyIiwicGxheWVyTnVtYmVyIiwiY2hlY2tXaW5uZXIiLCJkcmF3TWVzc2FnZSIsIm1lc3NhZ2UiLCJub2RlQ2VudGVyWCIsIm5vZGVDZW50ZXJZIiwiUHJldmlvdXNTdGF0ZV8xIiwiY2hhbmdlUG9zaXRpb25EZXRlY3Rpb25fMSIsIm1vdmVVbml0c18xIiwicG93ZXJBbmFseXplXzEiLCJjb21wdXRlckFjdGlvbiIsInByZXZpb3VzU3RhdGUiLCJuZWVkVG9DaGFuZ2VQb3NpdGlvbiIsIm1vdmVVbml0cyIsInNldFByZXZpb3VzU3RhdGUiLCJQcmV2aW91c1N0YXRlIiwicGxheWVyVG90YWxIZWFsdGgiLCJjb21wdXRlclRvdGFsSGVhbHRoIiwiYmVzdEFjdGlvbnNfMSIsIkNvbW1hbmRfMSIsInZ1bG5lcmFiaWxpdHlfMSIsImJlQ2xvc2VUb18xIiwic2V0Q29tbWFuZE51bWJlclRvVW5pdHNfMSIsImFkdmFuY2VfMSIsInNldENvbW1hbmROdW1iZXJUb1VuaXRzIiwiY29tbWFuZHMiLCJiZXN0QWN0aW9uQWxnb3JpdGhtIiwiZ2V0Q29tbWFuZHNCeVVuaXRJZCIsImNvbW1hbmQiLCJhY3Rpb24iLCJBdHRhY2siLCJNb3ZlVG9Ob2RlIiwiYWR2YW5jZSIsIkJlQ2xvc2VUb1VuaXQiLCJnZW5lcmF0ZVJhbmRvbUFjdGlvbl8xIiwiQ29tbWFuZFF1ZXVlXzEiLCJDb21tYW5kc18xIiwidG90YWxFZmZpY2llbmN5XzEiLCJjb21tYW5kUXVldWUiLCJnZW5lcmF0ZVJhbmRvbUFjdGlvbiIsImFkZENvbW1hbmQiLCJ1bml0c1dpdGhTaW11bGF0aW5nUG9zaXRpb25zIiwiZ2V0VW5pdHNXaXRoU2ltdWxhdGluZ1Bvc2l0aW9ucyIsImVmZmljaWVuY3kiLCJjYWxjdWxhdGVUb3RhbEVmZmljaWVuY3kiLCJpbnNlcnQiLCJleHRyYWN0TWF4IiwiQWN0aW9uXzEiLCJhY3Rpb25Ob2RlIiwiY2hvb3NlUmFuZG9tQ29tbWFuZCIsImdldFJhbmRvbVZhbHVlSW5SYW5nZV8xIiwicmFuZ2VXaXRoUHJvYmFiaWxpdHlfMSIsImdldFJhbmRvbVZhbHVlSW5SYW5nZVdpdGhQcm9iYWJpbGl0eSIsInByb2JhYmlsaXRpZXMiLCJpbnRlcnZhbCIsInByb2JhYmlsaXR5IiwiaW50ZXJ2YWxNaW4iLCJpbnRlcnZhbE1heCIsIkFjdGlvbiIsIkNvbW1hbmRRdWV1ZSIsImVsZW1lbnRzIiwiY29tbWFuZElkIiwiaXNFbXB0eSIsImNsZWFyRWxlbWVudHMiLCJDb21tYW5kcyIsImNsZWFyQ29tbWFuZHMiLCJjYWxjdWxhdGVFZmZpY2llbmN5XzEiLCJjYWxjdWxhdGVFZmZpY2llbmN5IiwiZ2V0RXhwbG9yYXRpb25Ob2RlXzEiLCJhc3NpZ25FeHBsb3JhdGlvbl8xIiwic2ltdWxhdGVGaWdodF8xIiwiY2FsY3VsYXRlVW5pdHNXZWlnaHRfMSIsInRvdGFsVnVsbmVyYWJpbGl0eV8xIiwiY29tcHV0ZXJVbml0c1dpdGhTaW11bGF0aW5nUG9zaXRpb25zIiwiZXhwbG9yYXRpb25Vbml0RWZmaWNpZW5jeSIsInVuaXRFZmZpY2llbmN5IiwiYXNzaWduRXhwbG9yYXRpb25UYXNrIiwiZXhwbG9yYXRpb25Ob2RlIiwiZ2V0RXhwbG9yYXRpb25Ob2RlIiwiY2xvc2VFbmVtaWVzIiwiY2xvc2VBbGxpZXMiLCJjbG9zZUFsbGllc1dpdGhVbml0Iiwid2VpZ2h0UmF0aW8iLCJoZWFsdGhSYXRpbyIsImNsb3NlRW5lbWllc051bWJlciIsImNsb3NlQWxsaWVzTnVtYmVyIiwiY2xvc2VBbGxpZXNXZWlnaHQiLCJjbG9zZUVuZW1pZXNXZWlnaHQiLCJ1bml0SGVhbHRoUGVyY2VudGFnZSIsImVuZW1pZXNJbml0aWFsSGVhbHRoIiwiY2xvc2VBbGxpZXNJbml0aWFsSGVhbHRoV2l0aFVuaXQiLCJlbmVtaWVzSGVhbHRoIiwiY2xvc2VBbGxpZXNIZWFsdGhXaXRoVW5pdCIsImVuZW1pZXNIZWFsdGhQZXJjZW50YWdlIiwiY2xvc2VBbGxpZXNIZWFsdGhXaXRoVW5pdFBlcmNlbnRhZ2UiLCJlbmVteWVuZW1pZXNIZWFsdGhQZXJjZW50YWdlIiwic2ltdWxhdGVGaWdodCIsInVuaXRIZWFsdGhSZW1haW4iLCJ2dWxuZXJhYmlsaXR5RGlmZmVyZW5jZSIsImNhbGN1bGF0ZVRvdGFsVnVsbmVyYWJpbGl0eSIsInJhbmRvbVVuaXQiLCJ1bml0QW5hbHl6ZV8xIiwiQUlfMSIsInVuaXRUeXBlcyIsImNhbGN1bGF0ZVVuaXRUeXBlcyIsInNjb3V0cyIsImNhdmFscnkiLCJmYXN0ZXN0VW5pdCIsInBlcmNlbnRhZ2VPZlNjb3V0cyIsImNhbGN1bGF0ZVVuaXRzVG9CZXdhcmUiLCJ1bml0c1RvQmV3YXJlIiwiY2FsY3VsYXRlU3Vycm91bmRlZEVuZW15UG93ZXIiLCJzdXJyb3VuZGVkRW5lbWllc18xIiwiY2FsY3VsYXRlU3Vycm91bmRlZEFsbGllc1Bvd2VyIiwic3Vycm91bmRlZEFsbGllc18xIiwiY2FsY3VsYXRlUG93ZXJBZHZhbnRhZ2VJblRoZUFyZWEiLCJ0eXBlcyIsImluZmFudHJ5Iiwic3BlYXJtZW4iLCJsaWdodEluZmFudHJ5IiwiaGVhdnlJbmZhbnRyeSIsInNraXJtaXNoZXJzIiwiZ2V0VW5pdFR5cGVzSW5QZXJjZW50YWdlIiwidG90YWxVbml0cyIsImdldEluaXRpYWxQcm9wZXRpZXMiLCJpbml0aWFsTnVtYmVyT2ZVbml0cyIsImluaXRpYWxOdW1iZXJPZkVuZW1pZXMiLCJpbml0aWFsVW5pdHNIZWFsdGgiLCJpbml0aWFsRW5lbWllc0hlYWx0aCIsImF0dGFja3MiLCJ1bml0SGVhbHRoQmVmb3JlRmlnaHQiLCJlbmVteUhlYWx0aEJlZm9yZUZpZ2h0IiwidW5pdEhlYWx0aCIsImVuZW15SGVhbHRoIiwidW5pdERhbWFnZSIsImVuZW15RGFtYWdlIiwidW5pdFBlcmNlbnRhZ2VSZW1haW4iLCJlbmVteVBlcmNlbnRhZ2VSZW1haW4iLCJlbmVteUhlYWx0aFJlbWFpbiIsInRvdGFsVnVsbmVyYWJpbGl0eSIsImV4bHVzaW9uIiwidnVsbmVyYWJpbGl0eSIsIm5lYXJlc3RBbGxpZXMiLCJuZWFyZXN0RW5lbWllcyIsIm5lYXJlc3RBbGxpZXNXZWlnaHQiLCJuZWFyZXN0RW5lbWllc1dlaWdodCIsIm51bWJlck9mRGFuZ2Vyb3VzVW5pdHMiLCJjb250YWluc0Rhbmdlcm91c1VuaXRzTmVhcmJ5IiwibmVhcmVzdEVuZW15U3BlZWQiLCJQcmlvcml0eVF1ZXVlXzEiLCJwcmlvcml0eVF1ZXVlIiwiZWxlbWVudCIsIlByaW9yaXR5UXVldWUiLCJwcmlvcml0eSIsInVwZGF0ZSIsIm5ld1ByaW9yaXR5IiwibGF1bmNoR2FtZV8xIiwibGF1bmNoTWFpbk1lbnVfMSIsImxhdW5jaE1haW5NZW51IiwibWFpbl8xIiwiZHJhd0xvYWRpbmdDYW52YXNfMSIsImRyYWdBbmREcm9wIiwiaXNVbml0U2VsZWN0ZWRJblJvc3Rlcl8xIiwic3BlbnRHb2xkXzEiLCJfXzIiLCJzdGFydEJhdHRsZUF2YWlsYWJsZV8xIiwiaG92ZXJlZFVuaXRfMSIsImNvaW5fMSIsImRyYXdDb2luIiwiZHJhd0NvaW5fMSIsInJpZ2h0VG9wWCIsInJpZ2h0VG9wWSIsImxpbmUxWDAiLCJsaW5lMVkwIiwibGluZTFYMSIsImxpbmUxWTEiLCJsaW5lMlgwIiwibGluZTJZMCIsImxpbmUyWDEiLCJsaW5lMlkxIiwiY2hvb3NlVW5pdF8xIiwiY2hvc2VuVW5pdHNfMSIsInNlbGVjdGVkVW5pdF8xIiwic2VsZWN0ZWRVbml0IiwibW9uZXlCb3hfMSIsImFtb3VudCIsImJ1dHRvbl8xIiwiZ29sZEJveGVzIiwiZ29sZEJveGVzXzEiLCJib3giLCJnb2xkT3B0aW9uc18xIiwiZ29sZEJveGVzXzIiLCJvbkNob29zZUNvbXB1dGVyXzEiLCJvbkNob29zZVBsYXllcl8xIiwidXBwZXJMYXlvdXRTZXR0aW5nc18xIiwic3BlbmRlZEdvbGQiLCJjb21wdXRlclVuaXRzTnVtYmVyIiwicGxheWVyVW5pdHNOdW1iZXIiLCJjb21wdXRlclJlbWFpbkdvbGQiLCJwbGF5ZXJSZW1haW5Hb2xkIiwiYnV0dG9uXzIiLCJib3R0b21TZXR0aW5nc18xIiwic3dpdGNoZXJfMSIsInVuaXRJbmZvXzEiLCJ1bml0SW5mbyIsImRpc3BsYXlVbml0SW5mbyIsImluZm9TZXR0aW5nc18yIiwicHJvcGVydHlMaXN0IiwicHJvcGVydHlMaXN0XzEiLCJzZWxlY3RlZFVuaXRfMiIsImluZm9MYXlvdXRfMiIsImxhdW5jaF8xIiwiaXNVbml0QWRkZWRUb0FybXkiLCJvbkNob29zZVJvc3RlciIsIm9uRHJhZ1VuaXQiLCJ4XzEiLCJ5XzEiLCJiYXR0bGVNb2RlXzEiLCJtYWluTWVudU1vZGVfMSIsImNhbnZhc18yIiwiY2xlYXJNYWluTWVudV8xIiwiY3JlYXRlQXJteV8xIiwiY2xlYXJNYWluTWVudSIsImNyZWF0ZUFybXkiLCJjcmVhdGVQbGF5ZXJBcm15IiwiY3JlYXRlQ29tcHV0ZXJBcm15IiwicGxheWVyTm9kZXNfMSIsImNvbXB1dGVyTm9kZXNfMSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJ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RkNmcEMsSUFBQXdILEVBQUF0VCxFQUFBLElBSUFvQyxFQUFBcEMsRUFBQSxJQUNBazJDLEVBQUFsMkMsRUFBQSxJQU1BMkksRUFBQTNJLEVBQUEsR0FDQTBQLEVBQUExUCxFQUFBLElBQ0E2ZSxFQUFBN2UsRUFBQSxJQUNBNGUsRUFBQTVlLEVBQUEsSUFDQThlLEVBQUE5ZSxFQUFBLElBRWFFLEVBQUF5ZSxxQkFBdUIsV0FDbENyTCxFQUFBSyxrQkFBa0JxcEIsTUFBTUMsT0FBUyxJQUNqQzNwQixFQUFBTyxTQUFTbXBCLE1BQU1DLE9BQVMsSUFDeEJpWixFQUFBL2lDLGdCQUFnQjZwQixNQUFNQyxPQUFTLElBQy9CaVosRUFBQTNpQyxPQUFPeXBCLE1BQU1DLE9BQVMsSUFDdEJpWixFQUFBemlDLFFBQVF1cEIsTUFBTUMsT0FBUyxJQUN2QnBlLEVBQUFLLFlBQVk4ZCxNQUFNQyxPQUFTLElBQzNCcmUsRUFBQUksV0FBV2dlLE1BQU1DLE9BQVMsSUFDMUJpWixFQUFBN2lDLGlCQUFpQjJwQixNQUFNQyxPQUFTLElBQ2hDbmUsRUFBQWxFLGNBQWNvaUIsTUFBTUMsT0FBUyxJQUM3Qjc2QixFQUFBbVosV0FDQTVTLEVBQUEvRixrQkFDQThNLEVBQUE4TyIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTI5KTtcbiIsImltcG9ydCB7XHJcbiAgTUFQX0hFSUdIVCxcclxuICBNQVBfV0lEVEgsXHJcbiAgQ0FOVkFTX0hFSUdIVCxcclxuICBncmlkU2l6ZVxyXG59IGZyb20gJy4vbWFwJztcclxuXHJcbmltcG9ydCB7XHJcbiAgbWFpbk1lbnVNb2RlLFxyXG4gIHNldEJhdHRsZU1vZGUsXHJcbiAgc2V0TWFpbk1lbnVNb2RlXHJcbn0gZnJvbSAnLi9nbG9iYWwnO1xyXG5cclxuZXhwb3J0IHtcclxuICBNQVBfSEVJR0hULFxyXG4gIE1BUF9XSURUSCxcclxuICBDQU5WQVNfSEVJR0hULFxyXG4gIGdyaWRTaXplLFxyXG4gIG1haW5NZW51TW9kZSxcclxuICBzZXRCYXR0bGVNb2RlLFxyXG4gIHNldE1haW5NZW51TW9kZVxyXG59XHJcbiIsImltcG9ydCB7bG9hZEltYWdlfSBmcm9tICcuL2ltYWdlJztcclxuaW1wb3J0IHtcclxuICBnZXROb2RlRnJvbU1hcCxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Vbml0QW5kTm9kZUluR3JpZHMsXHJcbiAgZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvTm9kZXNJbkdyaWRzLFxyXG4gIGFkZE5vZGVJbnRvQXJyYXksXHJcbiAgZ2V0Tm9kZUZyb21BcnJheSxcclxuICBnZXRNaW5WYWx1ZUZyb21Ob2RlcyxcclxuICBnZXRNYXhWYWx1ZUZyb21Ob2Rlc1xyXG59IGZyb20gJy4vbm9kZSc7XHJcbmltcG9ydCB7XHJcbiAgZGVsZXRlT2JqZWN0RnJvbUFycmF5LFxyXG4gIGlzT2JqZWN0SW5BcnJheSxcclxuICBpc09iamVjdEVtcHR5XHJcbn0gZnJvbSAnLi9vYmplY3Qvb2JqVXRpbHMnO1xyXG5pbXBvcnQge1xyXG4gIGFkZFVuaXRJbnRvQXJyYXksXHJcbiAgYW5vdGhlclVuaXRJc09uVGhlV2F5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJyYXksXHJcbiAgZGVsZXRlVW5pdEZyb21Bcm15LFxyXG4gIGdldERpc3RhbmNlQmV0d2VlblR3b1VuaXRzSW5HcmlkcyxcclxuICBnZXRVbml0c01pblByb3BlcnR5LFxyXG4gIGdldFVuaXRzTWF4UHJvcGVydHksXHJcbiAgaXNVbml0SW5BcnJheVxyXG59IGZyb20gJy4vdW5pdCc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0U3Vycm91bmRlZE5vZGVzLFxyXG4gIGdldFN1cnJvdW5kZWRFbmVtaWVzXHJcbn0gZnJvbSAnLi9zdXJyb3VuZGVkJztcclxuXHJcbmltcG9ydCB7XHJcbiAgZHJhd0JhY2tncm91bmQsXHJcbiAgZHJhd09ic3RhY2xlXHJcbn0gZnJvbSAnLi9kcmF3JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZ2V0Tm9kZUZyb21NYXAsXHJcbiAgbG9hZEltYWdlLFxyXG4gIGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5HcmlkcyxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Ob2Rlc0luR3JpZHMsXHJcbiAgZGVsZXRlT2JqZWN0RnJvbUFycmF5LFxyXG4gIGlzT2JqZWN0SW5BcnJheSxcclxuICBhZGROb2RlSW50b0FycmF5LFxyXG4gIGdldE5vZGVGcm9tQXJyYXksXHJcbiAgaXNPYmplY3RFbXB0eSxcclxuICBnZXRNaW5WYWx1ZUZyb21Ob2RlcyxcclxuICBnZXRNYXhWYWx1ZUZyb21Ob2RlcyxcclxuICBkZWxldGVVbml0RnJvbUFycmF5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJteSxcclxuICBhZGRVbml0SW50b0FycmF5LFxyXG4gIGdldERpc3RhbmNlQmV0d2VlblR3b1VuaXRzSW5HcmlkcyxcclxuICBpc1VuaXRJbkFycmF5LFxyXG4gIGFub3RoZXJVbml0SXNPblRoZVdheSxcclxuICBnZXRVbml0c01pblByb3BlcnR5LFxyXG4gIGdldFVuaXRzTWF4UHJvcGVydHksXHJcbiAgZ2V0U3Vycm91bmRlZE5vZGVzLFxyXG4gIGdldFN1cnJvdW5kZWRFbmVtaWVzLFxyXG4gIGRyYXdCYWNrZ3JvdW5kLFxyXG4gIGRyYXdPYnN0YWNsZVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgY3R4LFxyXG4gIGF1eGlsaWFyeUN0eCxcclxuICBiYWNrZ3JvdW5kQ3R4LFxyXG4gIGRyYWdBbmREcm9wQ2FudmFzQ3R4LFxyXG4gIG1haW5NZW51Q3R4LFxyXG4gIHRlcnJhaW5DdHhcclxufSBmcm9tICcuL2NvbnRleHQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBjdHgsXHJcbiAgYXV4aWxpYXJ5Q3R4LFxyXG4gIGJhY2tncm91bmRDdHgsXHJcbiAgZHJhZ0FuZERyb3BDYW52YXNDdHgsXHJcbiAgbWFpbk1lbnVDdHgsXHJcbiAgdGVycmFpbkN0eFxyXG59XHJcbiIsImltcG9ydCB7IGlzVW5pdEluQXJyYXkgfSBmcm9tICcuLi8uLi91dGlscyc7XHJcbmltcG9ydCB7IGRlbGV0ZVVuaXRGcm9tQXJyYXkgfSBmcm9tICcuLi8uLi91dGlscy91bml0L2dlbmVyYWwnO1xyXG5pbXBvcnQgVW5pdCBmcm9tICcuLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5pbXBvcnQgeyByZW1vdmVVbml0RnJvbVZpc2libGVVbml0cywgcmVtb3ZlVW5pdEZyb21TcG90dGVkVW5pdHMgfSBmcm9tICcuLic7XHJcbmltcG9ydCB7IHJlbW92ZVVuaXQgfSBmcm9tICcuLi8uLi91bml0L3JlbW92ZSc7XHJcblxyXG5leHBvcnQgbGV0IHVuaXRzOlVuaXRbXSA9IFtdO1xyXG5leHBvcnQgbGV0IHBsYXllclVuaXRzOlVuaXRbXSA9IFtdO1xyXG5leHBvcnQgbGV0IGNvbXB1dGVyVW5pdHM6VW5pdFtdID0gW107XHJcblxyXG5leHBvcnQgY29uc3QgYWRkVG9Vbml0cyA9ICh1bml0OlVuaXQpID0+IHtcclxuICBpZih1bml0KSB7XHJcbiAgICBpZighaXNVbml0SW5BcnJheSh1bml0LCB1bml0cykpIHtcclxuICAgICAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgICAgICBhZGRUb0NvbXB1dGVyVW5pdHModW5pdCk7XHJcbiAgICAgICAgdW5pdHMucHVzaCh1bml0KTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgICAgIGFkZFRvUGxheWVyVW5pdHModW5pdCk7XHJcbiAgICAgICAgdW5pdHMucHVzaCh1bml0KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuZGVmaW5lZCB1bml0IGNvbnRyb2wnKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bml0IGlzIGFscmVhZHkgYWRkZWQnKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBhZGRUb0NvbXB1dGVyVW5pdHMgPSAodW5pdDpVbml0KSA9PiB7XHJcbiAgaWYodW5pdCkge1xyXG4gICAgaWYoIWlzVW5pdEluQXJyYXkodW5pdCwgY29tcHV0ZXJVbml0cykpIHtcclxuICAgICAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgICAgICBjb21wdXRlclVuaXRzLnB1c2godW5pdCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBhZGRUb1BsYXllclVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQpIHtcclxuICAgIGlmKCFpc1VuaXRJbkFycmF5KHVuaXQsIHBsYXllclVuaXRzKSkge1xyXG4gICAgICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ3BsYXllcicpIHtcclxuICAgICAgICBwbGF5ZXJVbml0cy5wdXNoKHVuaXQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlRnJvbVVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQpIHtcclxuICAgIHVuaXRzID0gZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCB1bml0cyk7IFxyXG4gICAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgICAgcmVtb3ZlRnJvbUNvbXB1dGVyVW5pdHModW5pdCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgICByZW1vdmVGcm9tUGxheWVyVW5pdHModW5pdCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlRnJvbVBsYXllclVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQgJiYgdW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInKSB7XHJcbiAgICBwbGF5ZXJVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgcGxheWVyVW5pdHMpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlbW92ZUZyb21Db21wdXRlclVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQgJiYgdW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGNvbXB1dGVyVW5pdHMgPSBkZWxldGVVbml0RnJvbUFycmF5KHVuaXQsIGNvbXB1dGVyVW5pdHMpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlbW92ZUFsbENvbXB1dGVyVW5pdHMgPSAoKTp2b2lkID0+IHtcclxuICBjb21wdXRlclVuaXRzID0gW107XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZW1vdmVBbGxQbGF5ZXJVbml0cyA9ICgpOnZvaWQgPT4ge1xyXG4gIHBsYXllclVuaXRzID0gW107XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZW1vdmVBbGxVbml0cyA9ICgpOnZvaWQgPT4ge1xyXG4gIHJlbW92ZUFsbENvbXB1dGVyVW5pdHMoKTtcclxuICByZW1vdmVBbGxQbGF5ZXJVbml0cygpO1xyXG4gIHVuaXRzID0gW107XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBkZWNyZWFzZVNwZW50R29sZCxcclxuICBpbmNyZWFzZVNwZW50R29sZCxcclxuICBzZXRUb3RhbEdvbGRcclxufSBmcm9tICcuL2dvbGQnO1xyXG5pbXBvcnQge1xyXG4gIGFybXlMYXlvdXRIZWlnaHQsXHJcbiAgYXJteUxheW91dFdpZHRoLFxyXG4gIGluZm9MYXlvdXRIZWlnaHQsXHJcbiAgaW5mb0xheW91dFdpZHRoLFxyXG4gIHVuaXRSb3N0ZXJIZWlnaHQsXHJcbiAgdW5pdFJvc3RlcldpZHRoLFxyXG4gIHN0YXJ0QmF0dGxlU3RhcnRZLFxyXG4gIHN0YXJ0QmF0dGxlSGVpZ2h0LFxyXG4gIHN0YXJ0QmF0dGxlV2lkdGgsXHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuL2xheW91dHMnO1xyXG5pbXBvcnQge1xyXG4gIGNoYW5nZUJhdHRsZVNldHRpbmdzVG9UcnVlLFxyXG4gIGNoYW5nZVVuaXRJbmZvVG9UcnVlLFxyXG4gIHNob3dCYXR0bGVTZXR0aW5ncyxcclxuICBzaG93VW5pdEluZm9cclxufSBmcm9tICcuL3Nob3cnO1xyXG5pbXBvcnQge1xyXG4gIGNoYW5nZVRvQ29tcHV0ZXIsXHJcbiAgY2hhbmdlVG9QbGF5ZXIsXHJcbiAgc2lkZVxyXG59IGZyb20gJy4vc2lkZXMnO1xyXG5pbXBvcnQge1xyXG4gIGRpc2FibGVTdGFydEJhdHRsZUJ1dHRvbixcclxuICBlbmFibGVTdGFydEJhdHRsZUJ1dHRvbixcclxuICBzdGFydEJhdHRsZUF2YWlsYWJsZVxyXG59IGZyb20gJy4vc3RhcnRCYXR0bGUnO1xyXG5pbXBvcnQge1xyXG4gIGNoYW5nZUhvdmVyZWRVbml0LFxyXG4gIGhvdmVyZWRVbml0LFxyXG4gIGNvbXB1dGVySGFzVW5pdHMsXHJcbiAgcGxheWVySGFzVW5pdHNcclxufSBmcm9tICcuL3VuaXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkZWNyZWFzZVNwZW50R29sZCxcclxuICBpbmNyZWFzZVNwZW50R29sZCxcclxuICBzZXRUb3RhbEdvbGQsXHJcbiAgYXJteUxheW91dEhlaWdodCxcclxuICBhcm15TGF5b3V0V2lkdGgsXHJcbiAgaW5mb0xheW91dEhlaWdodCxcclxuICBpbmZvTGF5b3V0V2lkdGgsXHJcbiAgdW5pdFJvc3RlckhlaWdodCxcclxuICB1bml0Um9zdGVyV2lkdGgsXHJcbiAgc3RhcnRCYXR0bGVTdGFydFksXHJcbiAgc3RhcnRCYXR0bGVIZWlnaHQsXHJcbiAgc3RhcnRCYXR0bGVXaWR0aCxcclxuICB0aXRsZUhlaWdodCxcclxuICBjaGFuZ2VCYXR0bGVTZXR0aW5nc1RvVHJ1ZSxcclxuICBjaGFuZ2VVbml0SW5mb1RvVHJ1ZSxcclxuICBzaG93QmF0dGxlU2V0dGluZ3MsXHJcbiAgc2hvd1VuaXRJbmZvLFxyXG4gIGNoYW5nZVRvQ29tcHV0ZXIsXHJcbiAgY2hhbmdlVG9QbGF5ZXIsXHJcbiAgc2lkZSxcclxuICBkaXNhYmxlU3RhcnRCYXR0bGVCdXR0b24sXHJcbiAgZW5hYmxlU3RhcnRCYXR0bGVCdXR0b24sXHJcbiAgc3RhcnRCYXR0bGVBdmFpbGFibGUsXHJcbiAgY2hhbmdlSG92ZXJlZFVuaXQsXHJcbiAgaG92ZXJlZFVuaXQsXHJcbiAgY29tcHV0ZXJIYXNVbml0cyxcclxuICBwbGF5ZXJIYXNVbml0c1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYWRkTm9kZUludG9BcnJheVxyXG59IGZyb20gJy4vYWRkJztcclxuaW1wb3J0IHtcclxuICBnZXREaXN0YW5jZUJldHdlZW5Vbml0QW5kTm9kZUluR3JpZHMsXHJcbiAgZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvTm9kZXNJbkdyaWRzXHJcbn0gZnJvbSAnLi9kaXN0YW5jZSc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0Tm9kZUZyb21BcnJheSxcclxuICBnZXROb2RlRnJvbU1hcCxcclxuICBnZXRNaW5WYWx1ZUZyb21Ob2RlcyxcclxuICBnZXRNYXhWYWx1ZUZyb21Ob2Rlc1xyXG59IGZyb20gJy4vZ2V0JztcclxuaW1wb3J0IHtcclxuXHJcbn0gZnJvbSAnLi9tYXAnO1xyXG5pbXBvcnQge1xyXG4gIGdldFJhbmRvbU5vZGVcclxufSBmcm9tICcuL3JhbmRvbSc7XHJcbmltcG9ydCB7XHJcbiAgc2h1ZmZsZU5vZGVzXHJcbn0gZnJvbSAnLi9zaHVmZmxlJztcclxuaW1wb3J0IHtnZXRTdXJyb3VuZGVkQmxvY2tlZE5vZGVzfSBmcm9tICcuL3N1cnJvdW5kZWQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBhZGROb2RlSW50b0FycmF5LFxyXG4gIGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5HcmlkcyxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Ob2Rlc0luR3JpZHMsXHJcbiAgZ2V0Tm9kZUZyb21BcnJheSxcclxuICBnZXROb2RlRnJvbU1hcCxcclxuICBnZXRNaW5WYWx1ZUZyb21Ob2RlcyxcclxuICBnZXRNYXhWYWx1ZUZyb21Ob2RlcyxcclxuICBnZXRSYW5kb21Ob2RlLFxyXG4gIGdldFN1cnJvdW5kZWRCbG9ja2VkTm9kZXMsXHJcbiAgc2h1ZmZsZU5vZGVzXHJcbn1cclxuIiwiaW1wb3J0IHtncmlkU2l6ZX0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHtcclxuICBpc09iamVjdEVtcHR5LFxyXG4gIGdldE5vZGVGcm9tTWFwXHJcbn0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQge1xyXG4gIGRlbGV0ZVVuaXRGcm9tQXJyYXksIGlzVW5pdEluQXJyYXlcclxufSBmcm9tICcuLi8uLi91dGlscy91bml0L2dlbmVyYWwnO1xyXG5pbXBvcnQge3JhZGl1c30gZnJvbSAnLi4vLi4vY29uZmlnL3VuaXQnO1xyXG5pbXBvcnQgTWFwTm9kZSBmcm9tICcuLi8uLi9tYXAvbm9kZXMvTWFwTm9kZSc7XHJcblxyXG5jbGFzcyBVbml0IHtcclxuICBpZDogbnVtYmVyO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICB4OiBudW1iZXI7XHJcbiAgeTogbnVtYmVyO1xyXG4gIGNlbnRlclg6IG51bWJlcjtcclxuICBjZW50ZXJZOiBudW1iZXI7XHJcbiAgcmFkaXVzOiBudW1iZXIgPSByYWRpdXM7XHJcbiAgbW92ZVRvTm9kZTogTWFwTm9kZTtcclxuICBjdXJyZW50Tm9kZTogTWFwTm9kZTtcclxuICBuZXh0Tm9kZTogTWFwTm9kZTtcclxuICBpc0N1cnJlbnRseUNob3NlbjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIGNvbnRyb2xCeTogc3RyaW5nO1xyXG4gIGltZ1NyYzogc3RyaW5nID0gJy4vc3JjL2ltZy91bml0cy9waWtlbWVuLmpwZyc7XHJcbiAgaXNNb3Zpbmc6IGJvb2xlYW4gPSBmYWxzZTtcclxuICBpc1Zpc2libGU6Ym9vbGVhbiA9IGZhbHNlO1xyXG4gIHVuaXRUb1B1cnN1ZTogYW55ID0gbnVsbDtcclxuICBpc0ZpZ2h0aW5nOiBib29sZWFuID0gZmFsc2U7XHJcbiAgZmlndGhBZ2FpbnN0OiBhbnkgPSB7XHJcbiAgICBmcm9udDoge30sXHJcbiAgICBmbGFuazogW10sXHJcbiAgICByZWFyOiB7fSxcclxuICAgIGFsbDogW11cclxuICB9O1xyXG5cclxuICAvLyBnZW5lcmFsXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZztcclxuICBjb3N0OiBudW1iZXI7XHJcbiAgYWR2YW50YWdlT3Zlcjogc3RyaW5nW107XHJcbiAgdnVsbmVyYWJsZUFnYWluc3Q6IHN0cmluZ1tdO1xyXG5cclxuICAvLyBDaGFyYWN0ZXJpc3RpY3NcclxuICB0eXBlOiBzdHJpbmc7XHJcbiAgaGVhbHRoOiBudW1iZXIgPSAxMDA7XHJcbiAgc3BlZWQ6IG51bWJlciA9IDEwO1xyXG4gIGFybW91cjogbnVtYmVyID0gMTtcclxuICByYW5nZTogbnVtYmVyID0gMDtcclxuICBtb2JpbGl0eTogbnVtYmVyID0gMTtcclxuICBtZWxlZURhbWFnZTogbnVtYmVyID0gMTtcclxuICBtaXNzaWxlRGFtYWdlOiBudW1iZXIgPSAwO1xyXG4gIHNob3RzUmVtYWluZWQ6bnVtYmVyID0gMDtcclxuICBjaGFyZ2U6bnVtYmVyID0gMjtcclxuICBkaXNjaXBsaW5lOiBudW1iZXIgPSA1O1xyXG4gIHdlaWdodDogbnVtYmVyID0gMDtcclxuICB2aXNpYmlsaXR5Om51bWJlciA9IDU7XHJcbiAgbW9yYWxlOiBudW1iZXIgPSAxMDA7XHJcbiAgY29uZGl0aW9uOiBudW1iZXIgPSAxMDA7XHJcbiAgaW5pdGlhbEhlYWx0aDogbnVtYmVyO1xyXG5cclxuICAvLyBBSSBhdHRyaWJ1dGVzXHJcbiAgcG9zaXRpb246c3RyaW5nOyAvLyBwb3NpdGlvbiBpbiBmb3JtYXRpb25cclxuICB0YXNrOnN0cmluZztcclxuICB1bml0VG9Qcm90ZWN0Om51bWJlcjtcclxuICBiYXNlTm9kZTphbnkgPSB7fTtcclxuICBpc1VuaXRVbmRlclByb3RlY3Rpb246Ym9vbGVhbiA9IGZhbHNlO1xyXG4gIHVuaXRUb0hlbHA6bnVtYmVyO1xyXG4gIGlzVW5pdE5lZWRIZWxwOmJvb2xlYW4gPSBmYWxzZTtcclxuICBiZUNsb3NlVG86YW55W10gPSBbXTtcclxuICBjb21tYW5kTnVtYmVyOiBudW1iZXI7XHJcbiAgZnJvemVuOmJvb2xlYW4gPSBmYWxzZTsgLy8gdG8gcHJldmVudCB0b28gbWFueSBvcmRlcnMgaW4gc2hvcnQgcGVyaW9kIG9mIHRpbWVcclxuICBcclxuICBjb25zdHJ1Y3RvcihpZDpudW1iZXIsIHg6bnVtYmVyLCB5Om51bWJlciwgY29udHJvbEJ5OnN0cmluZz0ncGxheWVyJykge1xyXG4gICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgICB0aGlzLmNlbnRlclggPSB4ICsgKGdyaWRTaXplIC8gMik7XHJcbiAgICB0aGlzLmNlbnRlclkgPSB5ICsgKGdyaWRTaXplIC8gMik7XHJcbiAgICB0aGlzLmNvbnRyb2xCeSA9IGNvbnRyb2xCeTtcclxuICAgIHRoaXMuY3VycmVudE5vZGUgPSBnZXROb2RlRnJvbU1hcCh4LCB5KTtcclxuICAgIHRoaXMubmV4dE5vZGUgPSBnZXROb2RlRnJvbU1hcCh4LCB5KTtcclxuICB9XHJcblxyXG4gIHNldFgoeDpudW1iZXIpIHtcclxuICAgIHRoaXMueCA9IHg7XHJcbiAgICB0aGlzLmNlbnRlclggPSB4ICsgKGdyaWRTaXplIC8gMik7XHJcbiAgfVxyXG5cclxuICBzZXRZKHk6bnVtYmVyKSB7XHJcbiAgICB0aGlzLnkgPSB5O1xyXG4gICAgdGhpcy5jZW50ZXJZID0geSArIChncmlkU2l6ZSAvIDIpO1xyXG4gIH1cclxuXHJcbiAgc2V0SXNNb3ZpbmdUb0ZhbHNlKCkge1xyXG4gICAgdGhpcy5pc01vdmluZyA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgc2V0SXNNb3ZpbmdUb1RydWUoKSB7XHJcbiAgICB0aGlzLmlzTW92aW5nID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHNldFVuaXRUb1B1cnN1ZShvcHBvbmVudHNVbml0OlVuaXQpIHtcclxuICAgIHRoaXMudW5pdFRvUHVyc3VlID0gb3Bwb25lbnRzVW5pdDtcclxuICB9XHJcblxyXG4gIHNldFVuaXRUb1B1cnN1ZVRvTnVsbCgpIHtcclxuICAgIHRoaXMudW5pdFRvUHVyc3VlID0gbnVsbDtcclxuICB9XHJcblxyXG4gIHNldElzRmlnaHRpbmdUb1RydWUoKSB7XHJcbiAgICB0aGlzLmlzRmlnaHRpbmcgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgc2V0SXNGaWdodGluZ1RvRmFsc2UoKSB7XHJcbiAgICB0aGlzLmlzRmlnaHRpbmcgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIGFzc2lnbk1vdmVUb1Bvc2l0aW9uKHg6bnVtYmVyLCB5Om51bWJlcikge1xyXG4gICAgbGV0IG5vZGU6IE1hcE5vZGUgPSBnZXROb2RlRnJvbU1hcCh4LCB5KTtcclxuICAgIGlmKG5vZGUpIHtcclxuICAgICAgdGhpcy5tb3ZlVG9Ob2RlID0gbm9kZTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICByZW1vdmVFbmVteUZyb21GbGFuayhvcHBvbmVudDpVbml0KSB7XHJcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5maWd0aEFnYWluc3QuZmxhbmsubGVuZ3RoOyArK2kpIHtcclxuICAgICAgaWYodGhpcy5maWd0aEFnYWluc3QuZmxhbmtbaV0uaWQgPT09IG9wcG9uZW50LmlkKSB7XHJcbiAgICAgICAgdGhpcy5maWd0aEFnYWluc3QuZmxhbmsgPSBkZWxldGVVbml0RnJvbUFycmF5KG9wcG9uZW50LCB0aGlzLmZpZ3RoQWdhaW5zdC5mbGFuayk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIGluY3JlYXNlQ29uZGl0aW9uKHZhbHVlOm51bWJlcikge1xyXG4gICAgaWYodGhpcy5jb25kaXRpb24gPCAxMDApIHsgLy8gY29uZGl0aW9uIGNhbm5vdCBiZSBtb3JlIHRoYW4gMTAwXHJcbiAgICAgIHRoaXMuY29uZGl0aW9uICs9IHZhbHVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVjcmVhc2VDb25kaXRpb24odmFsdWU6bnVtYmVyKSB7XHJcbiAgICBpZih0aGlzLmNvbmRpdGlvbiA+IDApIHsgLy8gY29uZGl0aW9uIGNhbm5vdCBiZSBsZXNzIHRoYW4gMFxyXG4gICAgICB0aGlzLmNvbmRpdGlvbiAtPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICBzZXRDdXJyZW50Tm9kZShub2RlOiBNYXBOb2RlKSB7XHJcbiAgICBsZXQgZm91bmROb2RlOiBNYXBOb2RlID0gZ2V0Tm9kZUZyb21NYXAobm9kZS54LCBub2RlLnkpO1xyXG4gICAgaWYoZm91bmROb2RlKSB7XHJcbiAgICAgIHRoaXMuY3VycmVudE5vZGUgPSBmb3VuZE5vZGU7XHJcbiAgICB9IFxyXG4gICAgLy8gZWxzZSB7XHJcbiAgICAvLyAgIHRocm93IGBFcnJvcjogTm9kZSAke25vZGV9IG5vdCBmb3VuZCBpbiB0aGUgbWFwYDtcclxuICAgIC8vIH1cclxuICB9XHJcblxyXG4gIHNldE5leHROb2RlKG5vZGU6IE1hcE5vZGUpIHtcclxuICAgIGxldCBmb3VuZE5vZGU6IE1hcE5vZGUgPSBnZXROb2RlRnJvbU1hcChub2RlLngsIG5vZGUueSk7XHJcbiAgICBpZihmb3VuZE5vZGUpIHtcclxuICAgICAgdGhpcy5uZXh0Tm9kZSA9IGZvdW5kTm9kZTtcclxuICAgIH1cclxuICAgIC8vIGVsc2Uge1xyXG4gICAgLy8gICB0aHJvdyBgRXJyb3I6IE5vZGUgJHtub2RlfSBub3QgZm91bmQgaW4gdGhlIG1hcGA7XHJcbiAgICAvLyB9XHJcbiAgfVxyXG5cclxuICBhc3NpZ25FbmVteShlbmVteTpVbml0KSB7XHJcbiAgICBpZihpc09iamVjdEVtcHR5KHRoaXMuZmlndGhBZ2FpbnN0LmZyb250KSkgeyAvLyBkb24ndCBoYXZlIGZyb250IGVuZW15XHJcbiAgICAgIHRoaXMuZmlndGhBZ2FpbnN0LmZyb250ID0gZW5lbXk7XHJcbiAgICB9IGVsc2UgeyAvLyB1bml0IGlzIGFscmVhZHkgaGF2ZSBmcm9udCBsaW5lIGVuZW15XHJcbiAgICAgIGxldCBmcm9udEVuZW15Tm9kZSA9IHRoaXMuZmlndGhBZ2FpbnN0LmZyb250LmN1cnJlbnROb2RlO1xyXG4gICAgICBsZXQgbmV3RW5lbXlOb2RlID0gZW5lbXkuY3VycmVudE5vZGU7XHJcbiAgICAgIGxldCB1bml0Tm9kZSA9IHRoaXMuY3VycmVudE5vZGU7XHJcbiAgICAgIGxldCBmcm9udEVuZW15RGlmZlggPSAodW5pdE5vZGUueCAtIGZyb250RW5lbXlOb2RlLngpIC8gZ3JpZFNpemU7XHJcbiAgICAgIGxldCBmcm9udEVuZW15RGlmZlkgPSAodW5pdE5vZGUueSAtIGZyb250RW5lbXlOb2RlLnkpIC8gZ3JpZFNpemU7XHJcbiAgICAgIGxldCBuZXdFbmVteURpZmZYID0gKHVuaXROb2RlLnggLSBuZXdFbmVteU5vZGUueCkgLyBncmlkU2l6ZTtcclxuICAgICAgbGV0IG5ld0VuZW15RGlmZlkgPSAodW5pdE5vZGUueSAtIG5ld0VuZW15Tm9kZS55KSAvIGdyaWRTaXplO1xyXG4gICAgICBpZihmcm9udEVuZW15RGlmZlggPT09IC1uZXdFbmVteURpZmZYICYmIGZyb250RW5lbXlEaWZmWSA9PT0gLW5ld0VuZW15RGlmZlkpIHsgLy8gZW5lbXkgaXMgcmVhclxyXG4gICAgICAgIHRoaXMuZmlndGhBZ2FpbnN0LnJlYXIgPSBlbmVteTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmKGZyb250RW5lbXlEaWZmWCA9PT0gbmV3RW5lbXlEaWZmWCAmJiBmcm9udEVuZW15RGlmZlkgPT09IC1uZXdFbmVteURpZmZZKSB7IC8vIGVuZW15IGlzIHJlYXJcclxuICAgICAgICB0aGlzLmZpZ3RoQWdhaW5zdC5yZWFyID0gZW5lbXk7XHJcbiAgICAgIH1cclxuICAgICAgZWxzZSBpZihmcm9udEVuZW15RGlmZlggPT09IC1uZXdFbmVteURpZmZYICYmIGZyb250RW5lbXlEaWZmWSA9PT0gbmV3RW5lbXlEaWZmWSkgeyAvLyBlbmVteSBpcyByZWFyXHJcbiAgICAgICAgdGhpcy5maWd0aEFnYWluc3QucmVhciA9IGVuZW15O1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2Uge1xyXG4gICAgICAgIHRoaXMuZmlndGhBZ2FpbnN0LmZsYW5rLnB1c2goZW5lbXkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZighaXNVbml0SW5BcnJheShlbmVteSwgdGhpcy5maWd0aEFnYWluc3QuYWxsKSkge1xyXG4gICAgICB0aGlzLmZpZ3RoQWdhaW5zdC5hbGwucHVzaChlbmVteSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmlzRmlnaHRpbmcgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgaW5jcmVhc2VXZWlnaHRJblBlcmNlbnRhZ2UocGVyY2VudGFnZTogbnVtYmVyKSB7XHJcbiAgICBsZXQgbmV3V2VpZ2h0ID0gdGhpcy53ZWlnaHQgKyAodGhpcy53ZWlnaHQgKiAocGVyY2VudGFnZSAqIDAuMDEpKTtcclxuICAgIGlmKG5ld1dlaWdodCA8IDApIG5ld1dlaWdodCA9IDA7XHJcbiAgICBlbHNlIGlmKG5ld1dlaWdodCA+IDEwMCkgbmV3V2VpZ2h0ID0gMTAwO1xyXG4gICAgdGhpcy53ZWlnaHQgPSBNYXRoLnJvdW5kKG5ld1dlaWdodCk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVFbmVteUZyb21GaWdodEFnYWluc3QoZW5lbXk6VW5pdCkge1xyXG4gICAgaWYoZW5lbXkuaWQgPT09IHRoaXMuZmlndGhBZ2FpbnN0LmZyb250LmlkKSB7XHJcbiAgICAgIHRoaXMuZmlndGhBZ2FpbnN0LmZyb250ID0ge307XHJcbiAgICAgIHRoaXMuYXJyYW5nZUZpZ2h0QWdhaW5zdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGVsc2UgaWYoZW5lbXkuaWQgPT09IHRoaXMuZmlndGhBZ2FpbnN0LnJlYXIuaWQpIHtcclxuICAgICAgdGhpcy5maWd0aEFnYWluc3QucmVhciA9IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIGVsc2UgaWYodGhpcy5maWd0aEFnYWluc3QuZmxhbmsubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgIGZvcihsZXQgdW5pdCBvZiB0aGlzLmZpZ3RoQWdhaW5zdC5mbGFuaykge1xyXG4gICAgICAgIGlmKHVuaXQuaWQgPT09IGVuZW15LmlkKSB7XHJcbiAgICAgICAgICB0aGlzLnJlbW92ZUVuZW15RnJvbUZsYW5rKGVuZW15KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmZpZ3RoQWdhaW5zdC5hbGwgPSBkZWxldGVVbml0RnJvbUFycmF5KGVuZW15LCB0aGlzLmZpZ3RoQWdhaW5zdC5hbGwpO1xyXG5cclxuICAgIGlmKHRoaXMuZmlndGhBZ2FpbnN0LmFsbC5sZW5ndGggPT09IDApIHtcclxuICAgICAgdGhpcy5pc0ZpZ2h0aW5nID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhcnJhbmdlRmlnaHRBZ2FpbnN0KCkge1xyXG4gICAgbGV0IHVwZGF0ZWRGbGFuazpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCB0aGlzLmZpZ3RoQWdhaW5zdC5mbGFuayk7XHJcbiAgICBsZXQgdXBkYXRlZFJlYXI6VW5pdCA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZmlndGhBZ2FpbnN0LnJlYXIpO1xyXG5cclxuICAgIHRoaXMuZmlndGhBZ2FpbnN0LmZsYW5rID0gW107XHJcbiAgICB0aGlzLmZpZ3RoQWdhaW5zdC5yZWFyID0ge307XHJcblxyXG4gICAgaWYodXBkYXRlZEZsYW5rLmxlbmd0aCA+IDApIHtcclxuICAgICAgZm9yKGxldCBlbmVteSBvZiB1cGRhdGVkRmxhbmspIHtcclxuICAgICAgICAgIHRoaXMuYXNzaWduRW5lbXkoZW5lbXkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZighaXNPYmplY3RFbXB0eSh1cGRhdGVkUmVhcikpIHtcclxuICAgICAgdGhpcy5hc3NpZ25FbmVteSh1cGRhdGVkUmVhcik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjbGVhckZpZ2h0QWdhaW5zdCgpIHtcclxuICAgIHRoaXMuZmlndGhBZ2FpbnN0LmZyb250ID0ge307XHJcbiAgICB0aGlzLmZpZ3RoQWdhaW5zdC5yZWFyID0ge307XHJcbiAgICB0aGlzLmZpZ3RoQWdhaW5zdC5mbGFuayA9IFtdO1xyXG4gICAgdGhpcy5maWd0aEFnYWluc3QuYWxsID0gW107XHJcbiAgICB0aGlzLmlzRmlnaHRpbmcgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIC8vIEFJIG1ldGhvZHNcclxuICBhc3NpZ25UYXNrKHRhc2s6c3RyaW5nKSB7XHJcbiAgICBpZih0YXNrID09PSAnZXhwbG9yYXRpb24nKSB7XHJcbiAgICAgIHRoaXMudGFzayA9IHRhc2s7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKHRhc2sgPT09ICdwcm90ZWN0aW9uJykge1xyXG4gICAgICB0aGlzLnRhc2sgPSB0YXNrO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZih0YXNrID09PSAncGF0cm9sJykge1xyXG4gICAgICB0aGlzLnRhc2sgPSB0YXNrO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZih0YXNrID09PSAnaG9sZFBvc2l0aW9uJykge1xyXG4gICAgICB0aGlzLnRhc2sgPSB0YXNrO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGFzc2lnbiB0YXNrIGZvciB1bml0ICcgKyB0aGlzLm5hbWUpO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5lcnJvcignIG5ldyB0YXNrIGZvciB1bml0JywgdGhpcy5uYW1lLCAnaXMnLCB0YXNrKTtcclxuICB9XHJcblxyXG4gIGNsZWFyVGFzaygpIHtcclxuICAgIHRoaXMudGFzayA9ICcnO1xyXG4gIH1cclxuXHJcbiAgc2V0SXNVbml0VW5kZXJQcm90ZWN0aW9uVG9UcnVlKCkge1xyXG4gICAgdGhpcy5pc1VuaXRVbmRlclByb3RlY3Rpb24gPSB0cnVlO1xyXG4gIH1cclxuICBzZXRJc1VuaXRVbmRlclByb3RlY3Rpb25Ub0ZhbHNlKCkge1xyXG4gICAgdGhpcy5pc1VuaXRVbmRlclByb3RlY3Rpb24gPSBmYWxzZTtcclxuICB9XHJcbiAgYXNzaWduVW5pdFRvUHJvdGVjdCh1bml0SWQ6bnVtYmVyKSB7XHJcbiAgICB0aGlzLnVuaXRUb1Byb3RlY3QgPSB1bml0SWQ7XHJcbiAgfVxyXG4gIGNsZWFyVW5pdFRvUHJvdGVjdCgpIHtcclxuICAgIHRoaXMudW5pdFRvUHJvdGVjdCA9IG51bGw7XHJcbiAgfVxyXG4gIHNldElzVW5pdE5lZWRIZWxwVG9UcnVlKCkge1xyXG4gICAgdGhpcy5pc1VuaXROZWVkSGVscCA9IHRydWU7XHJcbiAgfVxyXG4gIHNldElzVW5pdE5lZWRIZWxwVG9GYWxzZSgpIHtcclxuICAgIHRoaXMuaXNVbml0TmVlZEhlbHAgPSBmYWxzZTtcclxuICB9XHJcbiAgYXNzaWduVW5pdFRvSGVscChpZDpudW1iZXIpIHtcclxuICAgIHRoaXMudW5pdFRvSGVscCA9IGlkO1xyXG4gIH1cclxuICBjbGVhclVuaXRUb0hlbHAoKSB7XHJcbiAgICB0aGlzLnVuaXRUb0hlbHAgPSBudWxsO1xyXG4gIH1cclxuICBhc3NpZ25CYXNlTm9kZShub2RlOmFueSkge1xyXG4gICAgaWYobm9kZSkge1xyXG4gICAgICB0aGlzLmJhc2VOb2RlID0gbm9kZTtcclxuICAgIH1cclxuICB9XHJcbiAgcmVtb3ZlQmFzZU5vZGUoKSB7XHJcbiAgICB0aGlzLmJhc2VOb2RlID0ge307XHJcbiAgfVxyXG5cclxuICBzZXRDb21tYW5kTnVtYmVyKGNvbW1hbmROdW1iZXI6IG51bWJlcikge1xyXG4gICAgdGhpcy5jb21tYW5kTnVtYmVyID0gY29tbWFuZE51bWJlcjtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVuaXQ7XHJcbiIsImV4cG9ydCBsZXQgc2lkZTpzdHJpbmcgPSAncGxheWVyJztcclxuXHJcbmV4cG9ydCBjb25zdCBjaGFuZ2VUb1BsYXllciA9ICgpID0+IHtcclxuICBzaWRlID0gJ3BsYXllcic7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjaGFuZ2VUb0NvbXB1dGVyID0gKCkgPT4ge1xyXG4gIHNpZGUgPSAnY29tcHV0ZXInO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYWRkVW5pdEludG9BcnJheSxcclxuICBkZWxldGVVbml0RnJvbUFycmF5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJteSxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMsXHJcbiAgZ2V0VW5pdEJ5SWQsXHJcbiAgaXNVbml0SW5BcnJheVxyXG59IGZyb20gJy4vZ2VuZXJhbFV0aWxzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYWRkVW5pdEludG9BcnJheSxcclxuICBkZWxldGVVbml0RnJvbUFycmF5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJteSxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMsXHJcbiAgZ2V0VW5pdEJ5SWQsXHJcbiAgaXNVbml0SW5BcnJheVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZGVsZXRlT2JqZWN0RnJvbUFycmF5LFxyXG4gIGlzT2JqZWN0SW5BcnJheVxyXG59IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuXHJcbmV4cG9ydCBsZXQgdmlzaWJsZUZvclBsYXllclVuaXRzOlVuaXRbXSA9IFtdO1xyXG5leHBvcnQgbGV0IHZpc2libGVGb3JDb21wdXRlclVuaXRzOlVuaXRbXSA9IFtdO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZFVuaXRJbnRvVmlzaWJsZVVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgaWYoIWlzT2JqZWN0SW5BcnJheSh1bml0LCB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cykpIHtcclxuICAgICAgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMucHVzaCh1bml0KTtcclxuICAgIH1cclxuICB9XHJcbiAgZWxzZSBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgaWYoIWlzT2JqZWN0SW5BcnJheSh1bml0LCB2aXNpYmxlRm9yUGxheWVyVW5pdHMpKSB7XHJcbiAgICAgIHZpc2libGVGb3JQbGF5ZXJVbml0cy5wdXNoKHVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlbW92ZVVuaXRGcm9tVmlzaWJsZVVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgaWYoaXNPYmplY3RJbkFycmF5KHVuaXQsIHZpc2libGVGb3JDb21wdXRlclVuaXRzKSkge1xyXG4gICAgICB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyA9IGRlbGV0ZU9iamVjdEZyb21BcnJheSh1bml0LCB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGVsc2UgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGlmKGlzT2JqZWN0SW5BcnJheSh1bml0LCB2aXNpYmxlRm9yUGxheWVyVW5pdHMpKSB7XHJcbiAgICAgIHZpc2libGVGb3JQbGF5ZXJVbml0cyA9IGRlbGV0ZU9iamVjdEZyb21BcnJheSh1bml0LCB2aXNpYmxlRm9yUGxheWVyVW5pdHMpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNyZWF0ZU5vZGVzLFxyXG4gIGNyZWF0ZU9uZU9ic3RhY2xlLFxyXG4gIGNyZWF0ZU9ic3RhY2xlcyxcclxuICBhZGROZWlnaGJvcnNcclxufSBmcm9tICcuLic7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gJy4uL25vZGVzL01hcE5vZGUnO1xyXG5pbXBvcnQgeyBjcmVhdGVTZWFyY2hNYXAgfSBmcm9tICcuLi9ub2Rlcy9jcmVhdGVOb2Rlcyc7XHJcblxyXG5leHBvcnQgbGV0IGluaXRpYWxNYXA6TWFwTm9kZVtdID0gW107XHJcbmV4cG9ydCBsZXQgc2VhcmNoTWFwOiBhbnkgPSB7fTtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVNYXAgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgaW5pdGlhbE1hcCA9IGNyZWF0ZU5vZGVzKCk7XHJcbiAgICByZXNvbHZlKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplU2VhcmNoTWFwID0gKG1hcDogTWFwTm9kZVtdKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICBzZWFyY2hNYXAgPSBjcmVhdGVTZWFyY2hNYXAobWFwKTtcclxuICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBsZXQgYWRkT2JzdGFjbGVzVG9NYXAgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgaW5pdGlhbE1hcCA9IGNyZWF0ZU9ic3RhY2xlcygxMjAsIDIyMCwgMTIwLCAxNjAsICdyaXZlcicpO1xyXG4gICAgaW5pdGlhbE1hcCA9IGNyZWF0ZU9ic3RhY2xlcyg2NDAsIDgwMCwgMTYwLCAxNjAsICdyaXZlcicpO1xyXG4gICAgaW5pdGlhbE1hcCA9IGNyZWF0ZU9ic3RhY2xlcyg4ODAsIDExMjAsIDE2MCwgMTYwLCAncml2ZXInKTtcclxuICAgIGluaXRpYWxNYXAgPSBjcmVhdGVPbmVPYnN0YWNsZShpbml0aWFsTWFwLCAzMjAsIDI4MCwgJ21vdW50YWluJyk7XHJcbiAgICBpbml0aWFsTWFwID0gY3JlYXRlT2JzdGFjbGVzKDI0MCwgMzQwLCAzMjAsIDM2MCwgJ21vdW50YWluJyk7XHJcbiAgICBpbml0aWFsTWFwID0gY3JlYXRlT2JzdGFjbGVzKDQ4MCwgNTgwLCA0MDAsIDQ0MCwgJ2ZvcmVzdCcpO1xyXG4gICAgaW5pdGlhbE1hcCA9IGNyZWF0ZU9ic3RhY2xlcyg5NjAsIDEwMDAsIDM2MCwgNDAwLCAnZm9yZXN0Jyk7XHJcbiAgICBpbml0aWFsTWFwID0gY3JlYXRlT2JzdGFjbGVzKDkyMCwgMTAwMCwgNDAwLCA0NDAsICdmb3Jlc3QnKTtcclxuICAgIHJlc29sdmUoKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVNYXAgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcignaW5pdGlhbGl6ZU1hcCcpO1xyXG4gICAgY3JlYXRlTWFwKClcclxuICAgIC50aGVuKCgpID0+IGFkZE9ic3RhY2xlc1RvTWFwKCkpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIGFkZE5laWdoYm9ycyhpbml0aWFsTWFwKS50aGVuKCgpID0+IGluaXRpYWxpemVTZWFyY2hNYXAoaW5pdGlhbE1hcCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICB9KSk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIG9uQ2hvb3NlVW5pdCxcclxuICBjaG9vc2VVbml0VHlwZVxyXG59IGZyb20gJy4vY2hvb3NlJztcclxuaW1wb3J0IHtcclxuICBjcmVhdGVVbml0XHJcbn0gZnJvbSAnLi9jcmVhdGUnO1xyXG5pbXBvcnQge1xyXG4gIGRyYXdVbml0LFxyXG4gIHJlZHJhd1VuaXRzXHJcbn0gZnJvbSAnLi9kcmF3JztcclxuaW1wb3J0IHtcclxuICBhcm1vdXJQZW5ldHJhdGlvbixcclxuICBjaGVja0F0dGFja1NpZGUsXHJcbiAgY2hhcmdlLFxyXG4gIGNhbGN1bGF0ZUNoYXJnZSxcclxuICBjYWxjdWxhdGVEYW1hZ2UsXHJcbiAgY2FsY3VsYXRlRGFtYWdlQmFzZU9uRW5lbXlQb3NpdGlvbixcclxuICBjYWxjdWxhdGVEYW1hZ2VXaGVuSXRzTGVzc1RoYW5PbmUsXHJcbiAgcmVtb3ZlVW5pdEZyb21FbmVtaWVzRmlnaHRBZ2FpbnN0LFxyXG4gIGZpbmRVbml0SW5GaWdodEFnYWluc3QsXHJcbiAgaXNVbml0RmlnaHRpbmcsXHJcbiAgY2hlY2tIZWFsdGgsXHJcbiAgbWVsZWVBdHRhY2ssXHJcbiAgbWVsZWVDb21iYXQsXHJcbiAgcmVmcmVzaG1lbnRcclxufSBmcm9tICcuL2ZpZ2h0aW5nJztcclxuaW1wb3J0IHtcclxuICB1cGRhdGVVbml0LFxyXG4gIHB1cnN1ZVVuaXRcclxufSBmcm9tICcuL21vdmVtZW50JztcclxuaW1wb3J0IHtcclxuICBzcG90RW5lbXksXHJcbiAgaXNVbml0U3BvdHRlZEJ5RW5lbXksXHJcbiAgc3BvdFVuaXRzXHJcbn0gZnJvbSAnLi9zcG90dGluZyc7XHJcbmltcG9ydCB7XHJcbiAgQXJjaGVycyxcclxuICBIZWF2eUluZmFudHJ5LFxyXG4gIEhlYXZ5Q2F2YWxyeSxcclxuICBIb3BsaXRlcyxcclxuICBMaWdodEluZmFudHJ5LFxyXG4gIExpZ2h0Q2F2YWxyeSxcclxuICBNaWxpdGlhLFxyXG4gIFBlbHRhc3RzLFxyXG4gIFBpa2VtZW4sXHJcbiAgU2NvdXRzLFxyXG4gIFVuaXRcclxufSBmcm9tICcuL3R5cGVzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgb25DaG9vc2VVbml0LFxyXG4gIGNob29zZVVuaXRUeXBlLFxyXG4gIGNyZWF0ZVVuaXQsXHJcbiAgZHJhd1VuaXQsXHJcbiAgcmVkcmF3VW5pdHMsXHJcbiAgYXJtb3VyUGVuZXRyYXRpb24sXHJcbiAgY2hlY2tBdHRhY2tTaWRlLFxyXG4gIGNoYXJnZSxcclxuICBjYWxjdWxhdGVDaGFyZ2UsXHJcbiAgY2FsY3VsYXRlRGFtYWdlLFxyXG4gIGNhbGN1bGF0ZURhbWFnZUJhc2VPbkVuZW15UG9zaXRpb24sXHJcbiAgY2FsY3VsYXRlRGFtYWdlV2hlbkl0c0xlc3NUaGFuT25lLFxyXG4gIHJlbW92ZVVuaXRGcm9tRW5lbWllc0ZpZ2h0QWdhaW5zdCxcclxuICBmaW5kVW5pdEluRmlnaHRBZ2FpbnN0LFxyXG4gIGlzVW5pdEZpZ2h0aW5nLFxyXG4gIGNoZWNrSGVhbHRoLFxyXG4gIG1lbGVlQXR0YWNrLFxyXG4gIG1lbGVlQ29tYmF0LFxyXG4gIHJlZnJlc2htZW50LFxyXG4gIHVwZGF0ZVVuaXQsXHJcbiAgcHVyc3VlVW5pdCxcclxuICBzcG90RW5lbXksXHJcbiAgaXNVbml0U3BvdHRlZEJ5RW5lbXksXHJcbiAgc3BvdFVuaXRzLFxyXG4gIEFyY2hlcnMsXHJcbiAgSGVhdnlJbmZhbnRyeSxcclxuICBIZWF2eUNhdmFscnksXHJcbiAgSG9wbGl0ZXMsXHJcbiAgTGlnaHRJbmZhbnRyeSxcclxuICBMaWdodENhdmFscnksXHJcbiAgTWlsaXRpYSxcclxuICBQZWx0YXN0cyxcclxuICBQaWtlbWVuLFxyXG4gIFNjb3V0cyxcclxuICBVbml0XHJcbn1cclxuIiwiaW1wb3J0IHthdXhpbGlhcnlDYW52YXN9IGZyb20gJy4vYXV4aWxpYXJ5JztcclxuaW1wb3J0IHtiYWNrZ3JvdW5kQ2FudmFzfSBmcm9tICcuL2JhY2tncm91bmQnO1xyXG5pbXBvcnQge2NhbnZhc30gZnJvbSAnLi9jYW52YXMnO1xyXG5pbXBvcnQge3RlcnJhaW59IGZyb20gJy4vdGVycmFpbic7XHJcbmltcG9ydCB7ZHJhZ0FuZERyb3BDYW52YXN9IGZyb20gJy4vZHJhZ0FuZERyb3AnO1xyXG5pbXBvcnQge21haW5NZW51fSBmcm9tICcuL21haW5NZW51JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYXV4aWxpYXJ5Q2FudmFzLFxyXG4gIGJhY2tncm91bmRDYW52YXMsXHJcbiAgY2FudmFzLFxyXG4gIGRyYWdBbmREcm9wQ2FudmFzLFxyXG4gIG1haW5NZW51LFxyXG4gIHRlcnJhaW5cclxufVxyXG4iLCJjbGFzcyBQb3dlciB7XHJcbiAgcXVhbnRpdHkgPSAwO1xyXG4gIHRvdGFsSGVhbHRoID0gMDtcclxuICB0b3RhbFNwZWVkID0gMDtcclxuICB0b3RhbEFybW91ciA9IDA7XHJcbiAgdG90YWxNZWxlZURhbWFnZSA9IDA7XHJcbiAgdG90YWxNaXNzaWxlRGFtYWdlID0gMDtcclxuICB0b3RhbERpc2NpcGxpbmUgPSAwO1xyXG4gIHRvdGFsTW9yYWxlID0gMDtcclxuICB0b3RhbENvbmRpdGlvbiA9IDA7XHJcblxyXG4gIGluY3JlbWVudFF1YW50aXR5KCkge1xyXG4gICAgdGhpcy5xdWFudGl0eSArPSAxO1xyXG4gIH1cclxuXHJcbiAgZGVjcmVtZW50UXVhbnRpdHkoKSB7XHJcbiAgICB0aGlzLnF1YW50aXR5IC09IDE7XHJcbiAgfVxyXG5cclxuICBhZGRIZWFsdGgoaGVhbHRoOm51bWJlcikge1xyXG4gICAgdGhpcy50b3RhbEhlYWx0aCArPSBoZWFsdGg7XHJcbiAgfVxyXG5cclxuICBhZGRTcGVlZChzcGVlZDpudW1iZXIpIHtcclxuICAgIHRoaXMudG90YWxTcGVlZCArPSBzcGVlZDtcclxuICB9XHJcblxyXG4gIGFkZEFybW91cihhcm1vdXI6bnVtYmVyKSB7XHJcbiAgICB0aGlzLnRvdGFsQXJtb3VyICs9IGFybW91cjtcclxuICB9XHJcblxyXG4gIGFkZE1lbGVlRGFtYWdlKG1lbGVlRGFtYWdlOm51bWJlcikge1xyXG4gICAgdGhpcy50b3RhbE1lbGVlRGFtYWdlICs9IG1lbGVlRGFtYWdlO1xyXG4gIH1cclxuXHJcbiAgYWRkTWlzc2lsZURhbWFnZShtaXNzaWxlRGFtYWdlOm51bWJlcikge1xyXG4gICAgdGhpcy50b3RhbE1pc3NpbGVEYW1hZ2UgKz0gbWlzc2lsZURhbWFnZTtcclxuICB9XHJcblxyXG4gIGFkZERpc2NpcGxpbmUoZGlzY2lwbGluZTpudW1iZXIpIHtcclxuICAgIHRoaXMudG90YWxEaXNjaXBsaW5lICs9IGRpc2NpcGxpbmU7XHJcbiAgfVxyXG5cclxuICBhZGRNb3JhbGUobW9yYWxlOm51bWJlcikge1xyXG4gICAgdGhpcy50b3RhbE1vcmFsZSArPSBtb3JhbGU7XHJcbiAgfVxyXG5cclxuICBhZGRDb25kaXRpb24oY29uZGl0aW9uOm51bWJlcikge1xyXG4gICAgdGhpcy50b3RhbENvbmRpdGlvbiArPSBjb25kaXRpb247XHJcbiAgfVxyXG5cclxuICByZXNldEFsbFByb3BlcnRpZXMoKSB7XHJcbiAgICB0aGlzLnF1YW50aXR5ID0gMDtcclxuICAgIHRoaXMudG90YWxIZWFsdGggPSAwO1xyXG4gICAgdGhpcy50b3RhbFNwZWVkID0gMDtcclxuICAgIHRoaXMudG90YWxBcm1vdXIgPSAwO1xyXG4gICAgdGhpcy50b3RhbE1lbGVlRGFtYWdlID0gMDtcclxuICAgIHRoaXMudG90YWxNaXNzaWxlRGFtYWdlID0gMDtcclxuICAgIHRoaXMudG90YWxEaXNjaXBsaW5lID0gMDtcclxuICAgIHRoaXMudG90YWxNb3JhbGUgPSAwO1xyXG4gICAgdGhpcy50b3RhbENvbmRpdGlvbiA9IDA7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUG93ZXI7XHJcbiIsImltcG9ydCB7c2lkZX0gZnJvbSAnLi4vLi4vY29uZmlnL21haW5NZW51L3NpZGVzL3NpZGUnO1xyXG5pbXBvcnQge1xyXG4gIHVuaXRSb3N0ZXJXaWR0aCxcclxuICB0aXRsZUhlaWdodFxyXG59IGZyb20gJy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcbmltcG9ydCB7XHJcbiAgYXJteUltZ0hlaWdodCxcclxuICBhcm15SW1nV2lkdGhcclxufSBmcm9tICcuLi8uLi9VSS9tYWluTWVudS9sYXlvdXRzL2FybXlMYXlvdXQnO1xyXG5pbXBvcnQge1xyXG4gIGlzVW5pdEluQXJyYXksXHJcbiAgZGVsZXRlVW5pdEZyb21Bcm15XHJcbn0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5cclxuZXhwb3J0IGxldCBjb21wdXRlckFybXk6YW55W10gPSBbXTtcclxuZXhwb3J0IGxldCBjb21wdXRlckFybXlQb3NpdGlvblg6bnVtYmVyID0gdW5pdFJvc3RlcldpZHRoICsgMjA7XHJcbmV4cG9ydCBsZXQgY29tcHV0ZXJBcm15UG9zaXRpb25ZOm51bWJlciA9IHRpdGxlSGVpZ2h0ICsgNjA7XHJcbmV4cG9ydCBsZXQgcGxheWVyQXJteTphbnlbXSA9IFtdO1xyXG5leHBvcnQgbGV0IHBsYXllckFybXlQb3NpdGlvblg6bnVtYmVyID0gdW5pdFJvc3RlcldpZHRoICsgMjA7XHJcbmV4cG9ydCBsZXQgcGxheWVyQXJteVBvc2l0aW9uWTpudW1iZXIgPSB0aXRsZUhlaWdodCArIDYwO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZFVuaXRUb0FybXkgPSAodW5pdDphbnkpID0+IHtcclxuICBsZXQgdXBkYXRlZFVuaXQgPSBPYmplY3QuYXNzaWduKHt9LCB1bml0KTtcclxuICBsZXQgYXJteTphbnlbXTtcclxuICBpZihzaWRlID09PSAncGxheWVyJykge1xyXG4gICAgYXJteSA9IHBsYXllckFybXk7XHJcbiAgICB1cGRhdGVkVW5pdC5hcm15UG9zaXRpb24gPSB7IC8vIGFzc2lnbiBhcm15UG9zaXRpb25cclxuICAgICAgeDogcGxheWVyQXJteVBvc2l0aW9uWCxcclxuICAgICAgeTogcGxheWVyQXJteVBvc2l0aW9uWSxcclxuICAgIH07XHJcblxyXG4gIH0gZWxzZSB7XHJcbiAgICBhcm15ID0gY29tcHV0ZXJBcm15O1xyXG4gICAgdXBkYXRlZFVuaXQuYXJteVBvc2l0aW9uID0geyAvLyBhc3NpZ24gYXJteVBvc2l0aW9uXHJcbiAgICAgIHg6IGNvbXB1dGVyQXJteVBvc2l0aW9uWCxcclxuICAgICAgeTogY29tcHV0ZXJBcm15UG9zaXRpb25ZXHJcbiAgICB9O1xyXG4gIH1cclxuICBpZih1bml0KSB7XHJcbiAgICAgIGFybXkucHVzaCh1cGRhdGVkVW5pdCk7XHJcbiAgfVxyXG4gIGlmKHNpZGUgPT09ICdwbGF5ZXInKSB7XHJcbiAgICBjaGFuZ2VQbGF5ZXJBcm15UG9zaXRpb24oKTtcclxuICB9IGVsc2Uge1xyXG4gICAgY2hhbmdlQ29tcHV0ZXJBcm15UG9zaXRpb24oKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZW1vdmVVbml0RnJvbUFybXkgPSAodW5pdDphbnkpID0+IHtcclxuICBsZXQgYXJteTphbnlbXTtcclxuICBpZihzaWRlID09PSAncGxheWVyJykge1xyXG4gICAgYXJteSA9IHBsYXllckFybXk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFybXkgPSBjb21wdXRlckFybXk7XHJcbiAgfVxyXG4gIGlmKHVuaXQgJiYgaXNVbml0SW5BcnJheSh1bml0LCBhcm15KSkge1xyXG4gICAgaWYoc2lkZSA9PT0gJ3BsYXllcicpIHtcclxuICAgICAgcGxheWVyQXJteSA9IGRlbGV0ZVVuaXRGcm9tQXJteSh1bml0LCBwbGF5ZXJBcm15KTtcclxuICAgICAgcmVhcnJhbmdlUGxheWVyQXJteVBvc2l0aW9uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb21wdXRlckFybXkgPSBkZWxldGVVbml0RnJvbUFybXkodW5pdCwgY29tcHV0ZXJBcm15KTtcclxuICAgICAgcmVhcnJhbmdlQ29tcHV0ZXJBcm15UG9zaXRpb24oKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjaGFuZ2VQbGF5ZXJBcm15UG9zaXRpb24gPSAoKSA9PiB7XHJcbiAgbGV0IGkgPSBwbGF5ZXJBcm15Lmxlbmd0aDtcclxuICBsZXQgbWFyZ2luV2lkdGggPSBhcm15SW1nV2lkdGggKyAxMDtcclxuICBsZXQgbWFyZ2luSGVpZ2h0ID0gYXJteUltZ0hlaWdodCArIDE1O1xyXG4gIGxldCBkZWZhdWx0V2lkdGggPSB1bml0Um9zdGVyV2lkdGggKyAyMDtcclxuICBpZihpICUgNSA9PT0gMCkge1xyXG4gICAgcGxheWVyQXJteVBvc2l0aW9uWCA9IGRlZmF1bHRXaWR0aDtcclxuICAgIHBsYXllckFybXlQb3NpdGlvblkgKz0gbWFyZ2luSGVpZ2h0O1xyXG4gIH0gZWxzZSB7XHJcbiAgICBwbGF5ZXJBcm15UG9zaXRpb25YICs9IG1hcmdpbldpZHRoO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNoYW5nZUNvbXB1dGVyQXJteVBvc2l0aW9uID0gKCkgPT4ge1xyXG4gIGxldCBpID0gY29tcHV0ZXJBcm15Lmxlbmd0aDtcclxuICBsZXQgbWFyZ2luV2lkdGggPSBhcm15SW1nV2lkdGggKyAxMDtcclxuICBsZXQgbWFyZ2luSGVpZ2h0ID0gYXJteUltZ0hlaWdodCArIDE1O1xyXG4gIGxldCBkZWZhdWx0V2lkdGggPSB1bml0Um9zdGVyV2lkdGggKyAyMDtcclxuICBpZihpICUgNSA9PT0gMCkge1xyXG4gICAgY29tcHV0ZXJBcm15UG9zaXRpb25YID0gZGVmYXVsdFdpZHRoO1xyXG4gICAgY29tcHV0ZXJBcm15UG9zaXRpb25ZICs9IG1hcmdpbkhlaWdodDtcclxuICB9IGVsc2Uge1xyXG4gICAgY29tcHV0ZXJBcm15UG9zaXRpb25YICs9IG1hcmdpbldpZHRoO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlYXJyYW5nZVBsYXllckFybXlQb3NpdGlvbiA9ICgpID0+IHtcclxuICBsZXQgbWFyZ2luV2lkdGggPSBhcm15SW1nV2lkdGggKyAxMDtcclxuICBsZXQgbWFyZ2luSGVpZ2h0ID0gYXJteUltZ0hlaWdodCArIDE1O1xyXG4gIGxldCBkZWZhdWx0V2lkdGggPSB1bml0Um9zdGVyV2lkdGggKyAyMDtcclxuICBsZXQgeDpudW1iZXI9IHVuaXRSb3N0ZXJXaWR0aCArIDIwO1xyXG4gIGxldCB5Om51bWJlcj0gdGl0bGVIZWlnaHQgKyA2MDtcclxuICBsZXQgaSA9IDE7XHJcbiAgZm9yKGxldCB1bml0IG9mIHBsYXllckFybXkpIHtcclxuICAgIHVuaXQuYXJteVBvc2l0aW9uID0geyAvLyBhc3NpZ24gYXJteVBvc2l0aW9uXHJcbiAgICAgIHgsXHJcbiAgICAgIHlcclxuICAgIH07XHJcbiAgICBpZihpICUgNSA9PT0gMCkge1xyXG4gICAgICB4ID0gZGVmYXVsdFdpZHRoO1xyXG4gICAgICB5ICs9IG1hcmdpbkhlaWdodDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHggKz0gbWFyZ2luV2lkdGg7XHJcbiAgICB9XHJcbiAgICBpKys7XHJcbiAgfVxyXG4gIGlmKHBsYXllckFybXkubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBsZXQgcHJldlggPSBwbGF5ZXJBcm15W3BsYXllckFybXkubGVuZ3RoIC0gMV0uYXJteVBvc2l0aW9uLng7IC8vIHggYW5kIHkgbGFzdCB1bml0J3NcclxuICAgIGxldCBwcmV2WSA9IHBsYXllckFybXlbcGxheWVyQXJteS5sZW5ndGggLSAxXS5hcm15UG9zaXRpb24ueTsgLy8gYXJteSBwb3NpdGlvbiB4IGFuZFxyXG4gICAgaWYoaSAlIDUgPT09IDApIHtcclxuICAgICAgcGxheWVyQXJteVBvc2l0aW9uWCA9IGRlZmF1bHRXaWR0aDtcclxuICAgICAgcGxheWVyQXJteVBvc2l0aW9uWSA9IHByZXZZICsgbWFyZ2luSGVpZ2h0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcGxheWVyQXJteVBvc2l0aW9uWCA9IHByZXZYICsgbWFyZ2luV2lkdGg7XHJcbiAgICAgIHBsYXllckFybXlQb3NpdGlvblkgPSBwcmV2WTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgcGxheWVyQXJteVBvc2l0aW9uWCA9IHVuaXRSb3N0ZXJXaWR0aCArIDIwO1xyXG4gICAgcGxheWVyQXJteVBvc2l0aW9uWSA9IHRpdGxlSGVpZ2h0ICsgNjA7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcmVhcnJhbmdlQ29tcHV0ZXJBcm15UG9zaXRpb24gPSAoKSA9PiB7XHJcbiAgbGV0IG1hcmdpbldpZHRoID0gYXJteUltZ1dpZHRoICsgMTA7XHJcbiAgbGV0IG1hcmdpbkhlaWdodCA9IGFybXlJbWdIZWlnaHQgKyAxNTtcclxuICBsZXQgZGVmYXVsdFdpZHRoID0gdW5pdFJvc3RlcldpZHRoICsgMjA7XHJcbiAgbGV0IHg6bnVtYmVyPSB1bml0Um9zdGVyV2lkdGggKyAyMDtcclxuICBsZXQgeTpudW1iZXI9IHRpdGxlSGVpZ2h0ICsgNjA7XHJcbiAgbGV0IGkgPSAxO1xyXG4gIGZvcihsZXQgdW5pdCBvZiBjb21wdXRlckFybXkpIHtcclxuICAgIHVuaXQuYXJteVBvc2l0aW9uID0geyAvLyBhc3NpZ24gYXJteVBvc2l0aW9uXHJcbiAgICAgIHgsXHJcbiAgICAgIHlcclxuICAgIH07XHJcbiAgICBpZihpICUgNSA9PT0gMCkge1xyXG4gICAgICB5ICs9IG1hcmdpbkhlaWdodDtcclxuICAgICAgeCA9IGRlZmF1bHRXaWR0aDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHggKz0gbWFyZ2luV2lkdGg7XHJcbiAgICB9XHJcbiAgICBpKys7XHJcbiAgfVxyXG4gIGlmKGNvbXB1dGVyQXJteS5sZW5ndGggIT09IDApIHtcclxuICAgIGxldCBwcmV2WCA9IGNvbXB1dGVyQXJteVtjb21wdXRlckFybXkubGVuZ3RoIC0gMV0uYXJteVBvc2l0aW9uLng7IC8vIHggYW5kIHkgbGFzdCB1bml0J3NcclxuICAgIGxldCBwcmV2WSA9IGNvbXB1dGVyQXJteVtjb21wdXRlckFybXkubGVuZ3RoIC0gMV0uYXJteVBvc2l0aW9uLnk7IC8vIGFybXkgcG9zaXRpb24geCBhbmRcclxuICAgIGlmKGkgJSA1ID09PSAwKSB7XHJcbiAgICAgIGNvbXB1dGVyQXJteVBvc2l0aW9uWCA9IGRlZmF1bHRXaWR0aDtcclxuICAgICAgY29tcHV0ZXJBcm15UG9zaXRpb25ZID0gcHJldlkgKyBtYXJnaW5IZWlnaHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb21wdXRlckFybXlQb3NpdGlvblggPSBwcmV2WCArIG1hcmdpbldpZHRoO1xyXG4gICAgICBjb21wdXRlckFybXlQb3NpdGlvblkgPSBwcmV2WTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgY29tcHV0ZXJBcm15UG9zaXRpb25YID0gdW5pdFJvc3RlcldpZHRoICsgMjA7O1xyXG4gICAgY29tcHV0ZXJBcm15UG9zaXRpb25ZID0gdGl0bGVIZWlnaHQgKyA2MDtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBnb2xkQm94U3RhcnRYLFxyXG4gIGdvbGRCb3hTdGFydFksXHJcbiAgc3RhcnRUb3RhbE1vbmV5VGl0bGVYLFxyXG4gIHN0YXJ0VG90YWxNb25leVRpdGxlWSxcclxuICBib3hXaWR0aCxcclxuICBib3hIZWlnaHQsXHJcbiAgZ29sZE9wdGlvbnMsXHJcbiAgdW5pdEluZm9UaXRsZVgsXHJcbiAgdW5pdEluZm9UaXRsZVksXHJcbiAgcHJvcGVydHlTdGFydFgsXHJcbiAgcHJvcGVydHlTdGFydFksXHJcbiAgdmFsdWVTdGFydFgsXHJcbiAgdmFsdWVTdGFydFlcclxufSBmcm9tICcuL2luZm9TZXR0aW5ncyc7XHJcbmltcG9ydCB7XHJcbiAgd2lkdGgsXHJcbiAgaGVpZ2h0LFxyXG4gIGJhdHRsZVNldHRpbmdzWCxcclxuICBiYXR0bGVTZXR0aW5nc1ksXHJcbiAgdW5pdEluZm9YLFxyXG4gIHVuaXRJbmZvWVxyXG59IGZyb20gJy4vYmF0dGxlU2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IHtcclxuICBnb2xkQm94U3RhcnRYLFxyXG4gIGdvbGRCb3hTdGFydFksXHJcbiAgc3RhcnRUb3RhbE1vbmV5VGl0bGVYLFxyXG4gIHN0YXJ0VG90YWxNb25leVRpdGxlWSxcclxuICBib3hXaWR0aCxcclxuICBib3hIZWlnaHQsXHJcbiAgZ29sZE9wdGlvbnMsXHJcbiAgdW5pdEluZm9UaXRsZVgsXHJcbiAgdW5pdEluZm9UaXRsZVksXHJcbiAgcHJvcGVydHlTdGFydFgsXHJcbiAgcHJvcGVydHlTdGFydFksXHJcbiAgdmFsdWVTdGFydFgsXHJcbiAgdmFsdWVTdGFydFksXHJcbiAgLy8gYmF0dGxlU2V0dGluZ3NcclxuICB3aWR0aCxcclxuICBoZWlnaHQsXHJcbiAgYmF0dGxlU2V0dGluZ3NYLFxyXG4gIGJhdHRsZVNldHRpbmdzWSxcclxuICB1bml0SW5mb1gsXHJcbiAgdW5pdEluZm9ZXHJcbn1cclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuXHJcbmV4cG9ydCBsZXQgY3VycmVudGx5Q2hvc2VuVW5pdDpVbml0ID0gbnVsbDtcclxuXHJcbmV4cG9ydCBjb25zdCBhc3NpZ25DdXJyZW50bHlDaG9zZW5Vbml0ID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKHVuaXQgJiYgdW5pdC5jb250cm9sQnkgPT09IFwicGxheWVyXCIpIHtcclxuICAgICAgY3VycmVudGx5Q2hvc2VuVW5pdCA9IHVuaXQ7XHJcbiAgfSBlbHNlIHtcclxuICAgIGN1cnJlbnRseUNob3NlblVuaXQgPSBudWxsO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBVTklUX0lDT05fV0lEVEgsIFVOSVRfSUNPTl9IRUlHSFQsIFVOSVRfTEVGVF9QQU5FTF9XSURUSCwgVU5JVF9QQU5FTF9IRUlHSFQgfSBmcm9tIFwiLi4vc2V0dGluZ3NcIjtcclxuaW1wb3J0IHsgY3R4IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0XCI7XHJcbmltcG9ydCB7IG1vdmVtZW50SWNvbiwgZmlnaHRJY29uLCBmaWdodEljb25TcmMsIGFycm93SWNvbiwgYXR0cmlidXRlc0hlaWdodCwgaGVhbHRoUG9pbnRzSGVpZ2h0LCBpY29uSGVpZ2h0IH0gZnJvbSBcIi4vaWNvblNldHRpbmdzXCI7XHJcbmltcG9ydCB7IFVuaXQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vdW5pdFwiO1xyXG5pbXBvcnQgeyBnZXRVbml0UG9zaXRpb25JbkFycmF5IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL3VuaXQvZ2VuZXJhbC9nZW5lcmFsVXRpbHNcIjtcclxuaW1wb3J0IHsgcGxheWVyVW5pdHMgfSBmcm9tIFwiLi4vLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0c1wiO1xyXG5pbXBvcnQgeyBDQU5WQVNfSEVJR0hUIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBtb3ZlbWVudEljb25JbWFnZSwgZmlnaHRJY29uSW1hZ2UsIHVuaXRJY29uSW1hZ2VzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL2ltYWdlcy91bml0SWNvbkltYWdlc1wiO1xyXG5pbXBvcnQgeyBjdXJyZW50bHlDaG9zZW5Vbml0IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL3VuaXQvY3VycmVudGx5Q2hvc2VuVW5pdFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYXdVbml0SWNvbiA9ICh1bml0OiBVbml0LCBoYWxmOiBib29sZWFuID0gZmFsc2UpID0+IHtcclxuICAgIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgICAgIGxldCB1bml0SW5kZXggPSBnZXRVbml0UG9zaXRpb25JbkFycmF5KHVuaXQuaWQsIHBsYXllclVuaXRzKSArIDE7XHJcbiAgICAgICAgbGV0IHN0YXJ0WCA9IFVOSVRfTEVGVF9QQU5FTF9XSURUSDtcclxuICAgICAgICBsZXQgeCA9IHN0YXJ0WCArIChVTklUX0lDT05fV0lEVEggKiB1bml0SW5kZXgpO1xyXG4gICAgICAgIGxldCB5ID0gQ0FOVkFTX0hFSUdIVCAtIFVOSVRfUEFORUxfSEVJR0hUO1xyXG4gICAgICAgIGN0eC5jbGVhclJlY3QoeCwgeSwgVU5JVF9JQ09OX1dJRFRILCBVTklUX0lDT05fSEVJR0hUKTtcclxuICAgICAgICBsZXQgayA9IChoYWxmKSA/IDAuNSA6IDE7XHJcbiAgICAgICAgY29uc3QgaW5pdGlhbFggPSB4O1xyXG4gICAgICAgIGxldCBpY29uV2lkdGggPSBVTklUX0lDT05fV0lEVEggKiBrO1xyXG4gICAgICAgIGN0eC5zdHJva2VSZWN0KHgsIHksIGljb25XaWR0aCwgVU5JVF9JQ09OX0hFSUdIVCk7XHJcbiAgICAgICAgZHJhd01vdmVtZW50SWNvbih4LCB5LCB1bml0LCBoYWxmKTtcclxuICAgICAgICB4ICs9IG1vdmVtZW50SWNvbi53aWR0aCAqIGs7XHJcbiAgICAgICAgZHJhd0ZpZ2h0SWNvbih4LCB5LCB1bml0LCBoYWxmKTtcclxuICAgICAgICB4ICs9IGZpZ2h0SWNvbi53aWR0aCAqIGs7XHJcbiAgICAgICAgZHJhd0Fycm93SWNvbih4LCB5LCBoYWxmKTtcclxuICAgICAgICB4ID0gaW5pdGlhbFg7XHJcbiAgICAgICAgeSArPSBhdHRyaWJ1dGVzSGVpZ2h0O1xyXG4gICAgICAgIGZpbGxIZWFsdGhQb2ludHMoeCwgeSwgdW5pdCwgaGFsZik7XHJcbiAgICAgICAgeSArPSBoZWFsdGhQb2ludHNIZWlnaHQ7XHJcbiAgICAgICAgZHJhd0ljb24oeCwgeSwgdW5pdCwgaGFsZik7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkcmF3TW92ZW1lbnRJY29uID0gKHg6IG51bWJlciwgeTogbnVtYmVyLCB1bml0OiBVbml0LCBoYWxmOiBib29sZWFuID0gZmFsc2UpID0+IHtcclxuICAgIGlmKHVuaXQuaXNNb3ZpbmcpIHtcclxuICAgICAgICBsZXQgayA9IChoYWxmKSA/IDAuNSA6IDE7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZShtb3ZlbWVudEljb25JbWFnZSwgeCwgeSwgIG1vdmVtZW50SWNvbi53aWR0aCAqIGssIG1vdmVtZW50SWNvbi5oZWlnaHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0ZpZ2h0SWNvbiA9ICh4OiBudW1iZXIsIHk6IG51bWJlciwgdW5pdDogVW5pdCwgaGFsZjogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XHJcbiAgICBpZih1bml0LmlzRmlnaHRpbmcpIHtcclxuICAgICAgICBsZXQgayA9IChoYWxmKSA/IDAuNSA6IDE7XHJcbiAgICAgICAgY3R4LmRyYXdJbWFnZShmaWdodEljb25JbWFnZSwgeCwgeSwgIGZpZ2h0SWNvbi53aWR0aCAqIGssIGZpZ2h0SWNvbi5oZWlnaHQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0Fycm93SWNvbiA9ICh4OiBudW1iZXIsIHk6IG51bWJlciwgaGFsZjogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XHJcbiAgIC8vIHRvZG8gYWRkIGFycm93IGljb25cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGZpbGxIZWFsdGhQb2ludHMgPSAoeDogbnVtYmVyLCB5OiBudW1iZXIsIHVuaXQ6IFVuaXQsIGhhbGY6IGJvb2xlYW4gPSBmYWxzZSkgPT4ge1xyXG4gICAgbGV0IGsgPSAoaGFsZikgPyAwLjUgOiAxO1xyXG4gICAgbGV0IHdpZHRoID0gVU5JVF9JQ09OX1dJRFRIICogaztcclxuICAgIGxldCBpbml0aWFsSGVhbHRoID0gdW5pdC5pbml0aWFsSGVhbHRoO1xyXG4gICAgbGV0IGhlYWx0aFBlcmNlbnRhZ2UgPSBNYXRoLnJvdW5kKCh1bml0LmhlYWx0aCAvIGluaXRpYWxIZWFsdGgpICogMTAwKSAqIDAuMDE7XHJcbiAgICBsZXQgaGVhbHRoUG9pbnRzV2lkdGggPSB3aWR0aCAqIGhlYWx0aFBlcmNlbnRhZ2U7XHJcbiAgICBpZihoZWFsdGhQZXJjZW50YWdlID49IDAuNykgY3R4LmZpbGxTdHlsZSA9IFwiZ3JlZW5cIjtcclxuICAgIGVsc2UgaWYoaGVhbHRoUGVyY2VudGFnZSA+PSAwLjQgJiYgaGVhbHRoUGVyY2VudGFnZSA8IDAuNykgY3R4LmZpbGxTdHlsZSA9IFwieWVsbG93XCI7XHJcbiAgICBlbHNlIGlmKGhlYWx0aFBlcmNlbnRhZ2UgPiAwICYmIGhlYWx0aFBlcmNlbnRhZ2UgPCAwLjQpIGN0eC5maWxsU3R5bGUgPSBcInJlZFwiO1xyXG4gICAgaWYoaGVhbHRoUG9pbnRzV2lkdGggPCAwKSBoZWFsdGhQb2ludHNXaWR0aCA9IDA7XHJcbiAgICBjdHguZmlsbFJlY3QoeCwgeSwgaGVhbHRoUG9pbnRzV2lkdGgsIGhlYWx0aFBvaW50c0hlaWdodCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkcmF3SWNvbiA9ICh4OiBudW1iZXIsIHk6IG51bWJlciwgdW5pdDogVW5pdCwgaGFsZjogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XHJcbiAgICBjdHguc2F2ZSgpO1xyXG4gICAgaWYoIWN1cnJlbnRseUNob3NlblVuaXQgfHwgKGN1cnJlbnRseUNob3NlblVuaXQgJiYgY3VycmVudGx5Q2hvc2VuVW5pdC5pZCAhPT0gdW5pdC5pZCkpIHtcclxuICAgICAgICBjdHguZmlsdGVyID0gJ2JyaWdodG5lc3MoMC44KSc7XHJcbiAgICB9XHJcbiAgICBsZXQgayA9IChoYWxmKSA/IDAuNSA6IDE7XHJcbiAgICBjdHguZHJhd0ltYWdlKHVuaXRJY29uSW1hZ2VzW3VuaXQubmFtZV0sIHgsIHksIFVOSVRfSUNPTl9XSURUSCAqIGssIGljb25IZWlnaHQpO1xyXG4gICAgY3R4LnJlc3RvcmUoKTtcclxufSIsImltcG9ydCB7XHJcbiAgICBNQVBfV0lEVEgsXHJcbiAgICBDQU5WQVNfSEVJR0hUXHJcbiAgfSBmcm9tICcuLic7XHJcbiAgXHJcbiAgZXhwb3J0IGNvbnN0IGxvYWRpbmdDYW52YXM6YW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvYWRpbmdDYW52YXMnKTtcclxuICBcclxuICBpZihsb2FkaW5nQ2FudmFzKSB7XHJcbiAgICBsb2FkaW5nQ2FudmFzLndpZHRoID0gTUFQX1dJRFRIO1xyXG4gICAgbG9hZGluZ0NhbnZhcy5oZWlnaHQgPSBDQU5WQVNfSEVJR0hUO1xyXG4gIH0iLCJpbXBvcnQgeyBncmlkU2l6ZSwgTUFQX1dJRFRILCBNQVBfSEVJR0hUIH0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHsgaW5pdGlhbE1hcCwgc2VhcmNoTWFwIH0gZnJvbSAnLi4vLi4vLi4vbWFwL2NyZWF0ZU1hcC9pbml0aWFsTWFwJztcclxuaW1wb3J0IE1hcE5vZGUgZnJvbSAnLi4vLi4vLi4vbWFwL25vZGVzL01hcE5vZGUnO1xyXG5pbXBvcnQgeyBjb29yZGluYXRlWUJpbmFyeVNlYXJjaCwgZmluZFhJblNlYXJjaE1hcCB9IGZyb20gJy4uLy4uL3NlYXJjaC9iaW5hcnlTZWFyY2gnO1xyXG5cclxuLy8gZXhwb3J0IGxldCBnZXROb2RlRnJvbU1hcCA9ICh4Om51bWJlciwgeTpudW1iZXIsIG1hcD1pbml0aWFsTWFwKTogTWFwTm9kZSA9PiB7XHJcbi8vICAgbGV0IG5vZGU6IE1hcE5vZGU7XHJcbi8vICAgZm9yKGxldCBncmlkIG9mIG1hcCkge1xyXG4vLyAgICAgbGV0IGJvdHRvbVJpZ2h0WCA9IGdyaWQueCArIGdyaWRTaXplO1xyXG4vLyAgICAgbGV0IGJvdHRvbVJpZ2h0WSA9IGdyaWQueSArIGdyaWRTaXplO1xyXG4vLyAgICAgaWYoeCA+PSBncmlkLnggJiYgeCA8IGJvdHRvbVJpZ2h0WCAmJiB5ID49IGdyaWQueSAmJiB5IDwgYm90dG9tUmlnaHRZKSB7XHJcbi8vICAgICAgIG5vZGUgPSBncmlkO1xyXG4vLyAgICAgfVxyXG4vLyAgIH1cclxuLy8gICByZXR1cm4gbm9kZTtcclxuLy8gfVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldE5vZGVGcm9tTWFwID0gKHg6IG51bWJlciwgeTogbnVtYmVyLCBtYXA9c2VhcmNoTWFwKTogYW55ID0+IHtcclxuICBsZXQgbm9kZTogTWFwTm9kZTtcclxuICBsZXQgbm9kZXNJblg6IG51bWJlciA9IE1BUF9XSURUSCAvIGdyaWRTaXplO1xyXG4gIGxldCBub2Rlc0luWTogbnVtYmVyID0gTUFQX0hFSUdIVCAvIGdyaWRTaXplO1xyXG4gIGxldCB4Tm9kZXM6IE1hcE5vZGVbXSA9IGZpbmRYSW5TZWFyY2hNYXAoMCwgbm9kZXNJblgsIHgpO1xyXG4gIGlmKHhOb2Rlcykge1xyXG4gICAgbm9kZSA9IGNvb3JkaW5hdGVZQmluYXJ5U2VhcmNoKDAsIG5vZGVzSW5ZLCB5LCB4Tm9kZXMpO1xyXG4gIH1cclxuICByZXR1cm4gbm9kZTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNsZWFyTWFwXHJcbn0gZnJvbSAnLi9jbGVhck1hcCc7XHJcbmltcG9ydCB7XHJcbiAgZHJhd0dyaWRcclxufSBmcm9tICcuL2dyaWQnO1xyXG5pbXBvcnQge1xyXG4gIGFkZE5laWdoYm9ycyxcclxuICBuZWlnaGJvcnNcclxufSBmcm9tICcuL25laWdoYm9ycyc7XHJcbmltcG9ydCB7XHJcbiAgY3JlYXRlTm9kZXNcclxufSBmcm9tICcuL25vZGVzJztcclxuaW1wb3J0IHtcclxuICBjcmVhdGVPbmVPYnN0YWNsZSxcclxuICBjcmVhdGVPYnN0YWNsZXMsXHJcbiAgY3JlYXRlVW5pdE9ic3RhY2xlXHJcbn0gZnJvbSAnLi9vYnN0YWNsZXMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBjbGVhck1hcCxcclxuICBkcmF3R3JpZCxcclxuICBhZGROZWlnaGJvcnMsXHJcbiAgbmVpZ2hib3JzLFxyXG4gIGNyZWF0ZU5vZGVzLFxyXG4gIGNyZWF0ZU9uZU9ic3RhY2xlLFxyXG4gIGNyZWF0ZU9ic3RhY2xlcyxcclxuICBjcmVhdGVVbml0T2JzdGFjbGVcclxufVxyXG4iLCJpbXBvcnQgeyBsb2FkSW1hZ2UgfSBmcm9tIFwiLi4vLi4vdXRpbHNcIjtcclxuaW1wb3J0IHsgbW92ZUljb25TcmMsIGZpZ2h0SWNvblNyYywgc3dvcmRJY29uU3JjLCBzcGVhckljb25TcmMsIHNwZWFyQW5kU2hpZWxkU3JjLCBzd29yZEFuZFJvdW5kU2hpZWxkU3JjIH0gZnJvbSBcIi4uLy4uL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2ljb25TZXR0aW5nc1wiO1xyXG5pbXBvcnQgeyBkZWZhdWx0VW5pdHMsIGNyZWF0ZURlZmF1bHRVbml0cyB9IGZyb20gXCIuLi91bml0L2RlZmF1bHRVbml0c1wiO1xyXG5cclxuZXhwb3J0IGxldCB1bml0SWNvbkltYWdlczogYW55ID0ge307XHJcbmV4cG9ydCBsZXQgbW92ZW1lbnRJY29uSW1hZ2U6IGFueTtcclxuZXhwb3J0IGxldCBmaWdodEljb25JbWFnZTogYW55O1xyXG5leHBvcnQgbGV0IHN3b3JkSWNvbkltYWdlOiBhbnk7XHJcbmV4cG9ydCBsZXQgc3BlYXJJY29uSW1hZ2U6IGFueTtcclxuZXhwb3J0IGxldCBzcGVhckFuZFNoaWVsZEljb25JbWFnZTogYW55O1xyXG5leHBvcnQgbGV0IHN3b3JkQW5kUm91bmRTaGllbGRJY29uSW1hZ2U6IGFueTtcclxuXHJcbmV4cG9ydCBjb25zdCBsb2FkSWNvbnMgPSAoKSA9PiB7XHJcbiAgICBsb2FkRmlnaHRJY29uSW1hZ2UoKTtcclxuICAgIGxvYWRNb3ZlbWVudEljb25JbWFnZSgpO1xyXG4gICAgbG9hZFN3b3JkSWNvbkltYWdlKCk7XHJcbiAgICBsb2FkU3BlYXJJY29uSW1hZ2UoKTtcclxuICAgIGxvYWRTcGVhckFuZFNoaWVsZEljb25JbWFnZSgpO1xyXG4gICAgbG9hZFN3b3JkQW5kUm91bmRTaGllbGRJY29uSW1hZ2UoKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGxvYWRVbml0SWNvbnMgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgY3JlYXRlRGVmYXVsdFVuaXRzKCkudGhlbigoKSA9PiBsb2FkRGVmYXVsdFVuaXRzKClcclxuICAgICAgICAudGhlbigoKSA9PiByZXNvbHZlKCkpKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5jb25zdCBsb2FkRGVmYXVsdFVuaXRzID0gKCkgPT4ge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgIGxvYWRVbml0SWNvbkltYWdlcygpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuY29uc3QgbG9hZE1vdmVtZW50SWNvbkltYWdlID0gKCkgPT4ge1xyXG4gICAgbG9hZEltYWdlKG1vdmVJY29uU3JjLCAoZXJyOiBhbnksIGltZzogYW55KSA9PiB7XHJcbiAgICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImNhbm5vdCBsb2FkIG1vdmVtZW50IGljb25cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1vdmVtZW50SWNvbkltYWdlID0gaW1nO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmNvbnN0IGxvYWRGaWdodEljb25JbWFnZSA9ICgpID0+IHtcclxuICAgIGxvYWRJbWFnZShmaWdodEljb25TcmMsIChlcnI6IGFueSwgaW1nOiBhbnkpID0+IHtcclxuICAgICAgICBpZihlcnIpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY2Fubm90IGxvYWQgZmlnaHQgaWNvblwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZmlnaHRJY29uSW1hZ2UgPSBpbWc7XHJcbiAgICB9KTtcclxufVxyXG5cclxuY29uc3QgbG9hZFVuaXRJY29uSW1hZ2VzID0gKGk6IG51bWJlciA9IDApID0+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICBpZihpID09PSBkZWZhdWx0VW5pdHMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbG9hZEltYWdlKGRlZmF1bHRVbml0c1tpXS5pbWdTcmMsIChlcnI6IGFueSwgaW1nOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBsb2FkIGltYWdlcyBvZiB1bml0ICR7ZGVmYXVsdFVuaXRzW2ldLm5hbWV9YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdW5pdEljb25JbWFnZXNbZGVmYXVsdFVuaXRzW2ldLm5hbWVdID0gaW1nO1xyXG4gICAgICAgICAgICByZXNvbHZlKGxvYWRVbml0SWNvbkltYWdlcyhpICsgMSkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2FkU3dvcmRJY29uSW1hZ2UgPSAoKSA9PiB7XHJcbiAgICBsb2FkSW1hZ2Uoc3dvcmRJY29uU3JjLCAoZXJyOiBhbnksIGltZzogYW55KSA9PiB7XHJcbiAgICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY2Fubm90IGxvYWQgc3dvcmQgaWNvbiBhdCBwYXRoICR7c3dvcmRJY29uSW1hZ2V9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN3b3JkSWNvbkltYWdlID0gaW1nO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2FkU3BlYXJJY29uSW1hZ2UgPSAoKSA9PiB7XHJcbiAgICBsb2FkSW1hZ2Uoc3BlYXJJY29uU3JjLCAoZXJyOiBhbnksIGltZzogYW55KSA9PiB7XHJcbiAgICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY2Fubm90IGxvYWQgc3BlYXIgaWNvbiBhdCBwYXRoOiAke3NwZWFySWNvblNyY31gKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3BlYXJJY29uSW1hZ2UgPSBpbWc7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGxvYWRTcGVhckFuZFNoaWVsZEljb25JbWFnZSA9ICgpID0+IHtcclxuICAgIGxvYWRJbWFnZShzcGVhckFuZFNoaWVsZFNyYywgKGVycjogYW55LCBpbWc6IGFueSkgPT4ge1xyXG4gICAgICAgIGlmKGVycikge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNhbm5vdCBsb2FkIHNwZWFyIGFuZCBzaGllbGQgaWNvbiBhdCBwYXRoICR7c3BlYXJBbmRTaGllbGRTcmN9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNwZWFyQW5kU2hpZWxkSWNvbkltYWdlID0gaW1nO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBsb2FkU3dvcmRBbmRSb3VuZFNoaWVsZEljb25JbWFnZSA9ICgpID0+IHtcclxuICAgIGxvYWRJbWFnZShzd29yZEFuZFJvdW5kU2hpZWxkU3JjLCAoZXJyOiBhbnksIGltZzogYW55KSA9PiB7XHJcbiAgICAgICAgaWYoZXJyKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY2Fubm90IGxvYWQgc3dvcmQgYW5kIHJvdW5kIHNoaWxkIGljb24gYXQgcGF0aCAke3N3b3JkQW5kUm91bmRTaGllbGRTcmN9YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHN3b3JkQW5kUm91bmRTaGllbGRJY29uSW1hZ2UgPSBpbWc7XHJcbiAgICB9KTtcclxufVxyXG5cclxuIiwiaW1wb3J0IHtcclxuICAgIGRlbGV0ZVVuaXRGcm9tQXJyYXksXHJcbiAgICBpc1VuaXRJbkFycmF5XHJcbiAgfSBmcm9tICcuLi8uLi8uLi91dGlscyc7XHJcbmltcG9ydCB7XHJcbiAgICB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0c1xyXG59IGZyb20gJy4uLy4uL3VuaXQvdmlzaWJsZVVuaXRzJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuXHJcbmV4cG9ydCBsZXQgcmV2ZWFsZWRVbml0czogVW5pdFtdID0gW107XHJcblxyXG5leHBvcnQgY29uc3QgYWRkVG9SZXZlYWxlZFVuaXRzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gICAgaWYoIWlzVW5pdEluQXJyYXkodW5pdCwgcmV2ZWFsZWRVbml0cykgJiYgdW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInKSB7XHJcbiAgICAgICAgbGV0IHVwZGF0ZWRVbml0OlVuaXQgPSBPYmplY3QuYXNzaWduKHt9LCB1bml0KTtcclxuICAgICAgICByZXZlYWxlZFVuaXRzLnB1c2godXBkYXRlZFVuaXQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlRnJvbVJldmVhbGVkVW5pdHMgPSAodW5pdDpVbml0KSA9PiB7XHJcbiAgICBpZihpc1VuaXRJbkFycmF5KHVuaXQsIHJldmVhbGVkVW5pdHMpKSB7XHJcbiAgICAgICAgcmV2ZWFsZWRVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgcmV2ZWFsZWRVbml0cyk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQge1xyXG4gIGF0dGFja0VuZW15LFxyXG4gIG1vdmVUbyxcclxuICBwdXJzdWVVbml0LFxyXG4gIHVwZGF0ZVVuaXRcclxufSBmcm9tICcuL2NvbW1vbic7XHJcblxyXG5leHBvcnQge1xyXG4gIGF0dGFja0VuZW15LFxyXG4gIG1vdmVUbyxcclxuICBwdXJzdWVVbml0LFxyXG4gIHVwZGF0ZVVuaXRcclxufVxyXG4iLCJleHBvcnQgbGV0IGFybXlJbWdXaWR0aDpudW1iZXIgPSA4MDtcclxuZXhwb3J0IGxldCBhcm15SW1nSGVpZ2h0Om51bWJlciA9IDgwO1xyXG4iLCJpbXBvcnQge1xyXG4gIGlzU3RhcnRCYXR0bGVBdmFpbGFibGVcclxufSBmcm9tICcuL2J1dHRvbkF2YWlsYWJsZSc7XHJcbmltcG9ydCB7XHJcbiAgaXNTdGFydEJhdHRsZUJ1dHRvblNlbGVjdGVkXHJcbn0gZnJvbSAnLi9idXR0b25TZWxlY3RlZCc7XHJcbmltcG9ydCB7XHJcbiAgc2hvd1N0YXJ0QmF0dGxlQnV0dG9uLFxyXG4gIHNob3dUZXh0XHJcbn0gZnJvbSAnLi9zaG93QnV0dG9uJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgaXNTdGFydEJhdHRsZUF2YWlsYWJsZSxcclxuICBpc1N0YXJ0QmF0dGxlQnV0dG9uU2VsZWN0ZWQsXHJcbiAgc2hvd1N0YXJ0QmF0dGxlQnV0dG9uLFxyXG4gIHNob3dUZXh0XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBsYXVuY2hCYXR0bGVcclxufSBmcm9tICcuL2JhdHRsZSc7XHJcbmltcG9ydCB7XHJcbiAgbGF1bmNoR2FtZVxyXG59IGZyb20gJy4vZ2FtZSc7XHJcbmltcG9ydCB7XHJcbiAgYWN0aXZhdGVCYXR0bGVNb2RlLFxyXG4gIGFjdGl2YXRlTWFpbk1lbnVNb2RlXHJcbn0gZnJvbSAnLi9tb2Rlcyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGFjdGl2YXRlQmF0dGxlTW9kZSxcclxuICBhY3RpdmF0ZU1haW5NZW51TW9kZSxcclxuICBsYXVuY2hCYXR0bGUsXHJcbiAgbGF1bmNoR2FtZVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYXV4aWxpYXJ5Q2FudmFzLFxyXG4gIGJhY2tncm91bmRDYW52YXMsXHJcbiAgZHJhZ0FuZERyb3BDYW52YXMsXHJcbiAgY2FudmFzLFxyXG4gIG1haW5NZW51LFxyXG4gIHRlcnJhaW5cclxufSBmcm9tICcuLi9jYW52YXMnO1xyXG5pbXBvcnQgeyBwYXRoQ2FudmFzIH0gZnJvbSAnLi4vY2FudmFzL3BhdGgnO1xyXG5pbXBvcnQgeyBldmVudENhbnZhcyB9IGZyb20gJy4uL2NhbnZhcy9ldmVudCc7XHJcbmltcG9ydCB7IGxvYWRpbmdDYW52YXMgfSBmcm9tICcuLi9jYW52YXMvbG9hZGluZyc7XHJcblxyXG4vLyBkZWZpbmUgMmQgY29udGV4dFxyXG5leHBvcnQgbGV0IGN0eDphbnk7XHJcbmV4cG9ydCBsZXQgYXV4aWxpYXJ5Q3R4OmFueTtcclxuZXhwb3J0IGxldCBiYWNrZ3JvdW5kQ3R4OmFueTtcclxuZXhwb3J0IGxldCB0ZXJyYWluQ3R4OmFueTtcclxuZXhwb3J0IGxldCBtYWluTWVudUN0eDphbnk7XHJcbmV4cG9ydCBsZXQgZHJhZ0FuZERyb3BDYW52YXNDdHg6YW55O1xyXG5leHBvcnQgbGV0IHBhdGhDdHg6IGFueTtcclxuZXhwb3J0IGxldCBldmVudEN0eDogYW55O1xyXG5leHBvcnQgbGV0IGxvYWRpbmdDdHg6IGFueTtcclxuXHJcbmlmKGNhbnZhcykge1xyXG4gIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcbn1cclxuaWYoYXV4aWxpYXJ5Q2FudmFzKSB7XHJcbiAgYXV4aWxpYXJ5Q3R4ICA9IGF1eGlsaWFyeUNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG59XHJcbmlmKHRlcnJhaW4pIHtcclxuICB0ZXJyYWluQ3R4ID0gdGVycmFpbi5nZXRDb250ZXh0KCcyZCcpO1xyXG59XHJcbmlmKGJhY2tncm91bmRDYW52YXMpIHtcclxuICBiYWNrZ3JvdW5kQ3R4ICA9IGJhY2tncm91bmRDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxufVxyXG5pZihtYWluTWVudSkge1xyXG4gIG1haW5NZW51Q3R4ID0gbWFpbk1lbnUuZ2V0Q29udGV4dCgnMmQnKTtcclxufVxyXG5pZihkcmFnQW5kRHJvcENhbnZhcykge1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzQ3R4ID0gZHJhZ0FuZERyb3BDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxufVxyXG5pZihwYXRoQ2FudmFzKSB7XHJcbiAgcGF0aEN0eCA9IHBhdGhDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxufVxyXG5pZihldmVudENhbnZhcykge1xyXG4gIGV2ZW50Q3R4ID0gZXZlbnRDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxufVxyXG5pZihsb2FkaW5nQ2FudmFzKSB7XHJcbiAgbG9hZGluZ0N0eCA9IGxvYWRpbmdDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRlbGV0ZVVuaXRGcm9tQXJyYXksXHJcbiAgaXNVbml0SW5BcnJheVxyXG59IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHtcclxuICB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0c1xyXG59IGZyb20gJy4uLy4uL3VuaXQvdmlzaWJsZVVuaXRzJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuXHJcbmV4cG9ydCBsZXQgaGlkaW5nRW5lbWllczogVW5pdFtdID0gW107XHJcblxyXG5leHBvcnQgY29uc3QgYWRkVG9IaWRpbmdFbmVtaWVzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKCFpc1VuaXRJbkFycmF5KHVuaXQsIHZpc2libGVGb3JDb21wdXRlclVuaXRzKSkgeyAvLyBoaWRpbmcgZW5lbXkgY2Fubm90IGJlIHZpc2libGUgYXQgdGhlIHNhbWUgdGltZVxyXG4gICAgbGV0IHVwZGF0ZWRVbml0OlVuaXQgPSBPYmplY3QuYXNzaWduKHt9LCB1bml0KTtcclxuICAgIGlmKCFpc1VuaXRJbkFycmF5KHVuaXQsIGhpZGluZ0VuZW1pZXMpICYmIHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykgeyAvLyB1bml0J3MgYWxyZWFkeSBhZGRlZFxyXG4gICAgICBoaWRpbmdFbmVtaWVzLnB1c2godXBkYXRlZFVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlbW92ZUZyb21IaWRpbmdFbmVtaWVzID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGlmKGlzVW5pdEluQXJyYXkodW5pdCwgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMpKSB7XHJcbiAgICBpZihpc1VuaXRJbkFycmF5KHVuaXQsIGhpZGluZ0VuZW1pZXMpKSB7IC8vIHVuaXQgc2hvdWxkIGJlIGluIHRoZSBhcnJheVxyXG4gICAgICBoaWRpbmdFbmVtaWVzID0gZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCBoaWRpbmdFbmVtaWVzKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtnZXRTdXJyb3VuZGVkTm9kZXN9IGZyb20gJy4vZ2V0U3Vycm91bmRlZE5vZGVzJztcclxuaW1wb3J0IHtnZXRTdXJyb3VuZGVkRW5lbWllc30gZnJvbSAnLi9nZXRTdXJyb3VuZGVkRW5lbWllcyc7XHJcbmltcG9ydCB7Z2V0U3Vycm91bmRlZEFsbGllc30gZnJvbSAnLi9nZXRTdXJyb3VuZGVkQWxsaWVzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZ2V0U3Vycm91bmRlZE5vZGVzLFxyXG4gIGdldFN1cnJvdW5kZWRFbmVtaWVzLFxyXG4gIGdldFN1cnJvdW5kZWRBbGxpZXNcclxufVxyXG4iLCJpbXBvcnQgeyBncmlkU2l6ZSB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7IGdldE5vZGVGcm9tTWFwIH0gZnJvbSAnLi4nO1xyXG5pbXBvcnQgVW5pdCBmcm9tICcuLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5pbXBvcnQgTWFwTm9kZSBmcm9tICcuLi8uLi9tYXAvbm9kZXMvTWFwTm9kZSc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0U3Vycm91bmRlZE5vZGVzID0gKHVuaXQ6VW5pdCwgZGlzdGFuY2U6bnVtYmVyID0gMSk6IE1hcE5vZGVbXSA9PiB7XHJcbiAgbGV0IG5vZGVzOiBNYXBOb2RlW10gPSBbXTtcclxuICBsZXQgc3RhcnRYID0gdW5pdC5jdXJyZW50Tm9kZS54IC0gKGRpc3RhbmNlICogZ3JpZFNpemUpO1xyXG4gIGxldCBmaW5pc2hYID0gdW5pdC5jdXJyZW50Tm9kZS54ICsgKGRpc3RhbmNlICogZ3JpZFNpemUpO1xyXG4gIGxldCBzdGFydFkgPSB1bml0LmN1cnJlbnROb2RlLnkgLSAoZGlzdGFuY2UgKiBncmlkU2l6ZSk7XHJcbiAgbGV0IGZpbmlzaFkgPSB1bml0LmN1cnJlbnROb2RlLnkgKyAoZGlzdGFuY2UgKiBncmlkU2l6ZSk7XHJcbiAgZm9yKGxldCB5ID0gc3RhcnRZOyB5IDw9IGZpbmlzaFk7IHkgKz0gZ3JpZFNpemUpIHtcclxuICAgIGZvcihsZXQgeCA9IHN0YXJ0WDsgeCA8PSBmaW5pc2hYOyB4ICs9IGdyaWRTaXplKSB7XHJcbiAgICAgIGxldCBub2RlID0gZ2V0Tm9kZUZyb21NYXAoeCwgeSk7XHJcbiAgICAgIGlmKG5vZGUpIHtcclxuICAgICAgICAgIG5vZGVzLnB1c2gobm9kZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG5vZGVzO1xyXG59XHJcbiIsImltcG9ydCB7IENBTlZBU19IRUlHSFQsIE1BUF9IRUlHSFQsIE1BUF9XSURUSCB9IGZyb20gXCIuLi8uLi8uLi9jb25maWdcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBVTklUX1BBTkVMX0hFSUdIVCA9IENBTlZBU19IRUlHSFQgLSBNQVBfSEVJR0hUO1xyXG5leHBvcnQgY29uc3QgVU5JVF9QQU5FTF9XSURUSCA9IE1BUF9XSURUSDtcclxuZXhwb3J0IGNvbnN0IFVOSVRfTEVGVF9QQU5FTF9XSURUSCA9IDI2MDtcclxuZXhwb3J0IGNvbnN0IFVOSVRfUklHSFRfUEFORUxfV0lEVEggPSAyNjA7XHJcbmV4cG9ydCBjb25zdCBVTklUX0lDT05TX1BBTkVMX1dJRFRIID0gMTAwMDtcclxuXHJcbi8vIElDT05TXHJcbmV4cG9ydCBjb25zdCBVTklUX0lDT05fV0lEVEggPSAxMDA7XHJcbmV4cG9ydCBjb25zdCBVTklUX0lDT05fSEVJR0hUID0gVU5JVF9QQU5FTF9IRUlHSFQ7IiwiaW1wb3J0IHsgY3R4IH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQgeyBVbml0IH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQgeyBncmlkU2l6ZSB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7IGN1cnJlbnRseUNob3NlblVuaXQgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L2N1cnJlbnRseUNob3NlblVuaXQnO1xyXG5pbXBvcnQgeyBwbGF5ZXJVbml0cyB9IGZyb20gJy4uLy4uL3N0b3JlL3VuaXQvdW5pdHMnO1xyXG5pbXBvcnQgeyB1bml0VG9JY29uTWFwIH0gZnJvbSAnLi4vLi4vc3RvcmUvaW1hZ2VzL3VuaXRUb0ljb25NYXAnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYXdVbml0ID0gKHVuaXQ6IFVuaXQpID0+IHtcclxuICBsZXQgY29sb3I7XHJcbiAgbGV0IHJhZGl1c09mZnNldCA9IDA7XHJcbiAgaWYodW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInKSB7XHJcbiAgICBjb2xvciA9ICcjZGJkYjBkJztcclxuICB9XHJcbiAgZWxzZSBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgY29sb3IgPSAnI2QzMGMwYyc7XHJcbiAgICBpZighdW5pdC5pc1Zpc2libGUpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gIH1cclxuICBpZihjdHgpIHtcclxuICAgIGlmKGN1cnJlbnRseUNob3NlblVuaXQgJiYgY3VycmVudGx5Q2hvc2VuVW5pdC5pZCA9PT0gdW5pdC5pZCkge1xyXG4gICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgIGN0eC5hcmModW5pdC5jZW50ZXJYLCB1bml0LmNlbnRlclksIHVuaXQucmFkaXVzLCAwLCBNYXRoLlBJKjIpO1xyXG4gICAgICBjdHguZmlsbFN0eWxlID0gXCIjYTc5ZWJmXCI7XHJcbiAgICAgIGN0eC5maWxsKCk7XHJcbiAgICAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAgICAgY3R4LnJlc3RvcmUoKTtcclxuICAgICAgcmFkaXVzT2Zmc2V0ID0gMjtcclxuICAgIH0gXHJcbiAgICBsZXQgb2Zmc2V0WCA9IDI7XHJcbiAgICBsZXQgb2Zmc2V0WSA9IDI7XHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKHVuaXQuY2VudGVyWCwgdW5pdC5jZW50ZXJZLCB1bml0LnJhZGl1cyAtIHJhZGl1c09mZnNldCwgMCwgTWF0aC5QSSoyKTtcclxuICAgIGN0eC5maWxsU3R5bGUgPSBjb2xvcjtcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICBjdHguY2xvc2VQYXRoKCk7XHJcbiAgICBjdHgucmVzdG9yZSgpO1xyXG4gICAgbGV0IG9mZnNldCA9IDg7XHJcbiAgICBsZXQgeCA9IHVuaXQueCArIG9mZnNldDtcclxuICAgIGxldCB5ID0gIHVuaXQueSArIG9mZnNldDtcclxuICAgIGxldCByYWRpdXMgPSAodW5pdC5yYWRpdXMgKiAyKSAtIG9mZnNldDtcclxuICAgIGN0eC5kcmF3SW1hZ2UodW5pdFRvSWNvbk1hcFt1bml0Lm5hbWVdLCB4ICsgb2Zmc2V0WCwgeSArIG9mZnNldFksIHJhZGl1cywgcmFkaXVzKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhclVuaXRJbWFnZSA9ICh1bml0OiBVbml0KSA9PiB7XHJcbiAgaWYoY3R4KSB7XHJcbiAgICBjdHguY2xlYXJSZWN0KHVuaXQueCwgdW5pdC55LCBncmlkU2l6ZSwgZ3JpZFNpemUpO1xyXG4gIH1cclxufSBcclxuXHJcbmV4cG9ydCBjb25zdCByZWRyYXdVbml0cyA9ICh1bml0czogVW5pdFtdKSA9PiB7XHJcbiAgZm9yKGxldCB1bml0IG9mIHVuaXRzKSB7XHJcbiAgICBpZih1bml0LmlzTW92aW5nICE9PSB0cnVlKSB7XHJcbiAgICAgIGRyYXdVbml0KHVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlZHJhd1BsYXllclVuaXRzID0gKCkgPT4ge1xyXG4gIHJlZHJhd1VuaXRzKHBsYXllclVuaXRzKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIHNwb3RFbmVteSxcclxuICBjaGFyZ2UsXHJcbiAgcmVtb3ZlVW5pdEZyb21FbmVtaWVzRmlnaHRBZ2FpbnN0XHJcbn0gZnJvbSAnLi4vLi4nO1xyXG5pbXBvcnQgeyBnZXROb2RlRnJvbU1hcCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHtcclxuICBjcmVhdGVVbml0T2JzdGFjbGUsXHJcbiAgYWRkTmVpZ2hib3JzXHJcbn0gZnJvbSAnLi4vLi4vLi4vbWFwJztcclxuaW1wb3J0IHsgaW5pdGlhbE1hcCB9IGZyb20gJy4uLy4uLy4uL21hcC9jcmVhdGVNYXAvaW5pdGlhbE1hcCc7XHJcbmltcG9ydCB7IGFTdGFyIH0gZnJvbSAnLi4vLi4vLi4vcGF0aCc7XHJcbmltcG9ydCB7IGFub3RoZXJVbml0SXNPblRoZVdheSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHsgdW5pdENhbkdldE91dE9mQ29tYmF0IH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdW5pdC9tb3ZlbWVudFV0aWxzJztcclxuaW1wb3J0IHsgZ2V0U3Vycm91bmRlZEJsb2NrZWROb2RlcyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL25vZGUnO1xyXG5pbXBvcnQgeyBtb3ZlVG9OZXh0Tm9kZUluUHVyc3VlVW5pdCB9IGZyb20gJy4vbW92ZVRvTmV4dE5vZGUnO1xyXG5pbXBvcnQgeyB1cGRhdGVVbml0IH0gZnJvbSAnLi91cGRhdGVVbml0JztcclxuaW1wb3J0IHsgVW5pdCB9IGZyb20gJy4uLy4uL3R5cGVzJztcclxuaW1wb3J0IHsgc3RvcE1vdmluZyB9IGZyb20gJy4vc3RvcE1vdmluZyc7XHJcbmltcG9ydCB7IHVuaXRDYW5Nb3ZlVG9UaGVOb2RlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdW5pdC9wcmlvcml0eSc7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gJy4uLy4uLy4uL21hcC9ub2Rlcy9NYXBOb2RlJztcclxuaW1wb3J0IHsgZ2V0SW50ZXJjZXB0ZWRFbmVtaWVzIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdW5pdC9pbnRlcmNlcHRpb24vZ2V0SW50ZXJjZXB0ZWRFbmVtaWVzJztcclxuaW1wb3J0IHsgZ2V0QmxvY2tlZEVuZW1pZXMgfSBmcm9tICcuLi8uLi8uLi91dGlscy91bml0L3VuaXRQb3NpdGlvbi9nZXRCbG9ja2VkRW5lbWllcyc7XHJcbmltcG9ydCB7IGRyYXdVbml0SWNvbiB9IGZyb20gJy4uLy4uLy4uL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2RyYXdVbml0SWNvbic7XHJcblxyXG5leHBvcnQgY29uc3QgcHVyc3VlVW5pdCA9ICggXHJcbiAgICB1bml0OiBVbml0LFxyXG4gICAgcHVyc3VlZFVuaXQ6IFVuaXQsIFxyXG4gICAgY3VycmVudE1vdmVUb1g6bnVtYmVyLCBcclxuICAgIGN1cnJlbnRNb3ZlVG9ZOm51bWJlciwgXHJcbiAgICBpOm51bWJlciwgXHJcbiAgICBwYXRoOmFueSwgXHJcbiAgICBuZXdNb3ZlbWVudDpib29sZWFuLCBcclxuICAgIHRyaWVzOiBudW1iZXIgPSAwXHJcbikgPT4ge1xyXG4gIGlmKHRyaWVzID4gMykgcmV0dXJuO1xyXG4gIGlmKHVuaXQuaXNGaWdodGluZykge1xyXG4gICAgdW5pdC5zZXRVbml0VG9QdXJzdWVUb051bGwoKTtcclxuICAgIGlmKG5ld01vdmVtZW50ICYmIHVuaXRDYW5HZXRPdXRPZkNvbWJhdCh1bml0KSkgeyAvLyB1bml0IGlzIHRyeWluZyB0byBvdXQgb2YgY29tYmF0XHJcbiAgICAgIHVuaXQuY2xlYXJGaWdodEFnYWluc3QoKTsgLy8gbm93IHVuaXQgbm90IGZpZ2h0aW5nIHdpdGggYW55b25lXHJcbiAgICAgIHJlbW92ZVVuaXRGcm9tRW5lbWllc0ZpZ2h0QWdhaW5zdCh1bml0KTtcclxuICAgICAgdW5pdC5zZXRJc01vdmluZ1RvVHJ1ZSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbGV0IGN1cnJlbnROb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC54LCB1bml0LnkpOyAvLyBnZXQgY3VycmVudE5vZGVcclxuICAgICAgdW5pdC5zZXRDdXJyZW50Tm9kZShjdXJyZW50Tm9kZSk7IC8vIHNldCBjdXJyZW50Tm9kZVxyXG4gICAgICB1bml0LnNldE5leHROb2RlKGN1cnJlbnROb2RlKTsgLy8gc2V0IG5leHROb2RlXHJcbiAgICAgIHVuaXQuc2V0SXNNb3ZpbmdUb0ZhbHNlKCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodW5pdC51bml0VG9QdXJzdWUgPT09IG51bGwpIHsgLy8gdW5pdCBpc24ndCBwdXJzdWluZyBhbnkgb3Bwb25lbnQncyB1bml0c1xyXG4gICAgbGV0IHN0YXJ0Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICAgIGxldCBmaW5pc2hOb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC5tb3ZlVG9Ob2RlLngsIHVuaXQubW92ZVRvTm9kZS55KTtcclxuICAgIGxldCBuZXdQYXRoOmFueSA9IGFTdGFyKGluaXRpYWxNYXAsIHN0YXJ0Tm9kZSwgZmluaXNoTm9kZSk7XHJcbiAgICB1bml0LmFzc2lnbk1vdmVUb1Bvc2l0aW9uKGZpbmlzaE5vZGUueCwgZmluaXNoTm9kZS55KTtcclxuICAgIHVwZGF0ZVVuaXQodW5pdCxuZXdQYXRoLCAwLCBmaW5pc2hOb2RlLngsIGZpbmlzaE5vZGUueSwgbnVsbCwgZmFsc2UpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZih1bml0LnVuaXRUb1B1cnN1ZSAhPT0gbnVsbCAmJiBwdXJzdWVkVW5pdC5pZCAhPT0gdW5pdC51bml0VG9QdXJzdWUuaWQpIHtcclxuICAgIGxldCBzdGFydE5vZGUgPSBnZXROb2RlRnJvbU1hcCh1bml0LngsIHVuaXQueSk7XHJcbiAgICBsZXQgZmluaXNoTm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQudW5pdFRvUHVyc3VlLngsIHVuaXQudW5pdFRvUHVyc3VlLnkpO1xyXG4gICAgbGV0IG5ld1BhdGg6YW55ID0gYVN0YXIoaW5pdGlhbE1hcCwgc3RhcnROb2RlLCBmaW5pc2hOb2RlKTtcclxuICAgIHVuaXQuYXNzaWduTW92ZVRvUG9zaXRpb24oZmluaXNoTm9kZS54LCBmaW5pc2hOb2RlLnkpXHJcbiAgICBwdXJzdWVVbml0KHVuaXQsIHVuaXQudW5pdFRvUHVyc3VlLCBmaW5pc2hOb2RlLngsIGZpbmlzaE5vZGUueSwgMCwgbmV3UGF0aCwgZmFsc2UpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYoZ2V0SW50ZXJjZXB0ZWRFbmVtaWVzKHVuaXQpLmxlbmd0aCAhPT0gMCkgeyAvLyBlbmVteSBpcyBvbiB0aGUgbmVpZ2hib3VyIG5vZGVcclxuICAgIHVuaXQuc2V0SXNNb3ZpbmdUb0ZhbHNlKCk7XHJcbiAgICB1bml0LnNldFVuaXRUb1B1cnN1ZVRvTnVsbCgpO1xyXG4gICAgZHJhd1VuaXRJY29uKHVuaXQpO1xyXG4gICAgZm9yKGxldCBlbmVteSBvZiBnZXRJbnRlcmNlcHRlZEVuZW1pZXModW5pdCkpIHtcclxuICAgICAgZW5lbXkuc2V0SXNNb3ZpbmdUb0ZhbHNlKCk7XHJcbiAgICAgIHVuaXQuYXNzaWduRW5lbXkoZW5lbXkpOyAvLyBhc3NpZ24gcHVyc3VlZFVuaXQgYXMgZnJvbnQgbGluZSBlbmVteVxyXG4gICAgICBlbmVteS5hc3NpZ25FbmVteSh1bml0KTtcclxuICAgIH1cclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGxldCB1cGRhdGVkUGF0aCA9IE9iamVjdC5hc3NpZ24oW10sIHBhdGgpO1xyXG4gIGxldCBub2RlID0gdXBkYXRlZFBhdGhbaV07IC8vIGdldCBuZXh0IG5vZGVcclxuICBpZighbm9kZSkgcmV0dXJuO1xyXG4gIGxldCBuZXh0Tm9kZTogTWFwTm9kZTtcclxuICBpZihpICsgMSA9PT0gdXBkYXRlZFBhdGgubGVuZ3RoKSB7IC8vIGxhc3Qgbm9kZVxyXG4gICAgbmV4dE5vZGUgPSBub2RlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBuZXh0Tm9kZSA9IHVwZGF0ZWRQYXRoW2kgKyAxXTtcclxuICB9XHJcblxyXG4gIGxldCBjdXJyZW50Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICB1bml0LnNldEN1cnJlbnROb2RlKGN1cnJlbnROb2RlKTsgXHJcbiAgdW5pdC5zZXROZXh0Tm9kZShuZXh0Tm9kZSk7XHJcbiAgbGV0IHN0YXJ0Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICBsZXQgZmluaXNoTm9kZSA9IGdldE5vZGVGcm9tTWFwKHB1cnN1ZWRVbml0LngsIHB1cnN1ZWRVbml0LnkpO1xyXG4gIFxyXG4gIC8vIGlmIHB1cnN1ZWQgdW5pdCBjaGFuZ2VkIHBvc2l0aW9uXHJcbiAgaWYoY3VycmVudE1vdmVUb1ggIT09IHB1cnN1ZWRVbml0LnggfHwgY3VycmVudE1vdmVUb1kgIT09IHB1cnN1ZWRVbml0LnkpIHtcclxuICAgIGkgPSAwO1xyXG4gICAgY3VycmVudE1vdmVUb1ggPSBwdXJzdWVkVW5pdC54O1xyXG4gICAgY3VycmVudE1vdmVUb1kgPSBwdXJzdWVkVW5pdC55O1xyXG4gICAgc3RhcnROb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC54LCB1bml0LnkpO1xyXG4gICAgZmluaXNoTm9kZSA9IGdldE5vZGVGcm9tTWFwKHB1cnN1ZWRVbml0LngsIHB1cnN1ZWRVbml0LnkpO1xyXG4gICAgXHJcbiAgICBwYXRoID0gYVN0YXIoaW5pdGlhbE1hcCwgc3RhcnROb2RlLCBmaW5pc2hOb2RlKTtcclxuICAgIHVuaXQuYXNzaWduTW92ZVRvUG9zaXRpb24ocHVyc3VlZFVuaXQuY3VycmVudE5vZGUueCwgcHVyc3VlZFVuaXQuY3VycmVudE5vZGUueSk7XHJcbiAgICBub2RlID0gcGF0aFtpXTtcclxuICB9XHJcblxyXG4gIC8vIHVuaXQgaXMgcmVhY2hlZCBvcHBvbmVudHMncyB1bml0XHJcbiAgaWYobmV4dE5vZGUueCA9PT0gcHVyc3VlZFVuaXQuY3VycmVudE5vZGUueCAmJiBuZXh0Tm9kZS55ID09PSBwdXJzdWVkVW5pdC5jdXJyZW50Tm9kZS55KSB7XHJcbiAgICBjb25zb2xlLmxvZygnVU5JVCBSRUFDSEVEIEVORU1ZJyk7XHJcbiAgICBzdG9wTW92aW5nKHVuaXQsIGN1cnJlbnROb2RlKTtcclxuICAgIHVuaXQuc2V0VW5pdFRvUHVyc3VlVG9OdWxsKCk7XHJcbiAgICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgICB1bml0LmFzc2lnbkVuZW15KHB1cnN1ZWRVbml0KTsgLy8gYXNzaWduIHB1cnN1ZWRVbml0IGFzIGZyb250IGxpbmUgZW5lbXlcclxuICAgIHB1cnN1ZWRVbml0LmFzc2lnbkVuZW15KHVuaXQpO1xyXG4gICAgbGV0IHB1cnN1ZWRVbml0Q3VycmVudE5vZGUgPSBnZXROb2RlRnJvbU1hcChwdXJzdWVkVW5pdC54LCBwdXJzdWVkVW5pdC55KTtcclxuICAgIHN0b3BNb3ZpbmcocHVyc3VlZFVuaXQsIHB1cnN1ZWRVbml0Q3VycmVudE5vZGUpO1xyXG4gICAgZHJhd1VuaXRJY29uKHB1cnN1ZWRVbml0KTtcclxuICAgIGNoYXJnZSh1bml0LCBwdXJzdWVkVW5pdCk7XHJcbiAgICBjb25zb2xlLmxvZygnZW5kIG9mIHJlYWNoZWQgZW5lbXknKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGlmKGFub3RoZXJVbml0SXNPblRoZVdheSh1bml0KSkge1xyXG4gICAgIC8vIHVuaXQgaGFzIGFub3RoZXIgYWxsaWVzJyB1bml0IG9uIGl0cyB3YXlcclxuICAgICBjb25zb2xlLmVycm9yKFwiQU5PVEhFUiBVTklUIElTIE9OIFRIRSBXQVlcIik7XHJcbiAgICBpZihnZXRCbG9ja2VkRW5lbWllcyh1bml0KS5sZW5ndGggPiAwKSB7IC8vIHVuaXQgaXMgYmxvY2tlZCBieSBlbmVteVxyXG4gICAgICBjb25zb2xlLmxvZygnVU5JVCBpcyBibG9ja2VkIGJ5IGVuZW15Jyk7XHJcbiAgICAgIHN0b3BNb3ZpbmcodW5pdCwgY3VycmVudE5vZGUpO1xyXG4gICAgICB1bml0LnNldFVuaXRUb1B1cnN1ZVRvTnVsbCgpO1xyXG4gICAgICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgICAgIGZvcihsZXQgZW5lbXkgb2YgZ2V0QmxvY2tlZEVuZW1pZXModW5pdCkpIHtcclxuICAgICAgICB1bml0LmFzc2lnbkVuZW15KGVuZW15KTtcclxuICAgICAgICBlbmVteS5hc3NpZ25FbmVteSh1bml0KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm47XHJcbiAgICB9IFxyXG4gICAgY29uc3QgcGVybWlzc2lvbjpib29sZWFuID0gdW5pdENhbk1vdmVUb1RoZU5vZGUobmV4dE5vZGUsIHVuaXQpO1xyXG4gICAgY29uc29sZS5sb2coJ1BFUk1JU1NJT04nLCBwZXJtaXNzaW9uKTtcclxuICAgIGlmKCFwZXJtaXNzaW9uKSB7XHJcbiAgICAgIHN0b3BNb3ZpbmcodW5pdCwgY3VycmVudE5vZGUpO1xyXG4gICAgICBsZXQgdXBkYXRlZE1hcCA9IE9iamVjdC5hc3NpZ24oW10sIGluaXRpYWxNYXApO1xyXG4gICAgICBsZXQgYmxvY2tlZE5vZGVzID0gZ2V0U3Vycm91bmRlZEJsb2NrZWROb2Rlcyh1bml0KTtcclxuICAgICAgZm9yKGxldCBibG9ja2VkTm9kZSBvZiBibG9ja2VkTm9kZXMpIHtcclxuICAgICAgICB1cGRhdGVkTWFwID0gY3JlYXRlVW5pdE9ic3RhY2xlKHVwZGF0ZWRNYXAsIGJsb2NrZWROb2RlLngsIGJsb2NrZWROb2RlLnkpOyAvLyBjcmVhdGUgb2JzdGFjbGUgZm9yIGN1cnJlbnROb2RlXHJcbiAgICAgIH1cclxuICAgICAgYWRkTmVpZ2hib3JzKHVwZGF0ZWRNYXApOyAvLyBjcmVhdGUgbmV3IG5laWdoYm91cnMgZm9yIHVwZGF0ZWQgbWFwXHJcbiAgICAgIGxldCBzdGFydE5vZGUgPSBnZXROb2RlRnJvbU1hcCh1bml0LngsIHVuaXQueSwgdXBkYXRlZE1hcCk7XHJcbiAgICAgIGxldCBmaW5pc2hOb2RlID0gZ2V0Tm9kZUZyb21NYXAoY3VycmVudE1vdmVUb1gsIGN1cnJlbnRNb3ZlVG9ZLCB1cGRhdGVkTWFwKTtcclxuXHJcbiAgICAgIGxldCBuZXdQYXRoOmFueSA9IGFTdGFyKHVwZGF0ZWRNYXAsIHN0YXJ0Tm9kZSwgZmluaXNoTm9kZSk7XHJcbiAgICAgIHB1cnN1ZVVuaXQodW5pdCwgcHVyc3VlZFVuaXQsIGN1cnJlbnRNb3ZlVG9YLCBjdXJyZW50TW92ZVRvWSwgaSwgbmV3UGF0aCwgZmFsc2UsIHRyaWVzICs9IDEpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1bml0LmFzc2lnbk1vdmVUb1Bvc2l0aW9uKHB1cnN1ZWRVbml0LmN1cnJlbnROb2RlLngsIHB1cnN1ZWRVbml0LmN1cnJlbnROb2RlLnkpO1xyXG4gIHVuaXQuc2V0SXNNb3ZpbmdUb1RydWUoKTtcclxuICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgc3BvdEVuZW15KHVuaXQpOyAvLyBjaGVjayBmb3IgZW5lbXkgdW5pdHNcclxuICB1bml0LmRlY3JlYXNlQ29uZGl0aW9uKDEpOyAvLyBkZWNyZWFzZUNvbmRpdGlvbiB3aGlsZSBtb3ZpbmdcclxuICBtb3ZlVG9OZXh0Tm9kZUluUHVyc3VlVW5pdCh1bml0LCBwdXJzdWVkVW5pdCwgY3VycmVudE5vZGUsIG5leHROb2RlLCBjdXJyZW50TW92ZVRvWCwgY3VycmVudE1vdmVUb1ksIHBhdGgsIGkpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgc3BvdEVuZW15LFxyXG4gIHJlbW92ZVVuaXRGcm9tRW5lbWllc0ZpZ2h0QWdhaW5zdFxyXG59IGZyb20gJy4uLy4uJztcclxuaW1wb3J0IHtcclxuICBnZXROb2RlRnJvbU1hcFxyXG59IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHtcclxuICBjcmVhdGVVbml0T2JzdGFjbGUsXHJcbiAgYWRkTmVpZ2hib3JzXHJcbn0gZnJvbSAnLi4vLi4vLi4vbWFwJztcclxuaW1wb3J0IHtpbml0aWFsTWFwfSBmcm9tICcuLi8uLi8uLi9tYXAvY3JlYXRlTWFwL2luaXRpYWxNYXAnO1xyXG5pbXBvcnQge1xyXG4gIGFTdGFyXHJcbn0gZnJvbSAnLi4vLi4vLi4vcGF0aCc7XHJcbmltcG9ydCB7XHJcbiAgYW5vdGhlclVuaXRJc09uVGhlV2F5LFxyXG59IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHt1bml0Q2FuR2V0T3V0T2ZDb21iYXQsfSBmcm9tICcuLi8uLi8uLi91dGlscy91bml0L21vdmVtZW50VXRpbHMnO1xyXG5pbXBvcnQgVW5pdCBmcm9tICcuLi8uLi90eXBlcy9Vbml0JztcclxuaW1wb3J0IHtnZXRTdXJyb3VuZGVkQmxvY2tlZE5vZGVzfSBmcm9tICcuLi8uLi8uLi91dGlscy9ub2RlJztcclxuaW1wb3J0IHtzdG9wTW92aW5nfSBmcm9tICcuL3N0b3BNb3ZpbmcnO1xyXG5pbXBvcnQge21vdmVUb05leHROb2RlSW5VcGRhdGVVbml0fSBmcm9tICcuL21vdmVUb05leHROb2RlJztcclxuaW1wb3J0IHtwdXJzdWVVbml0fSBmcm9tICcuL3B1cnN1ZVVuaXQnXHJcbmltcG9ydCB7dW5pdENhbk1vdmVUb1RoZU5vZGV9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3VuaXQvcHJpb3JpdHknO1xyXG5pbXBvcnQgeyBnZXRJbnRlcmNlcHRlZEVuZW1pZXMgfSBmcm9tICcuLi8uLi8uLi91dGlscy91bml0L2ludGVyY2VwdGlvbi9nZXRJbnRlcmNlcHRlZEVuZW1pZXMnO1xyXG5pbXBvcnQgeyBnZXRCbG9ja2VkRW5lbWllcyB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3VuaXQvdW5pdFBvc2l0aW9uL2dldEJsb2NrZWRFbmVtaWVzJztcclxuaW1wb3J0IHsgZHJhd1VuaXRJY29uIH0gZnJvbSAnLi4vLi4vLi4vVUkvYmF0dGxlVUkvdW5pdFBhbmVsL2ljb24vZHJhd1VuaXRJY29uJztcclxuXHJcbmV4cG9ydCBsZXQgdXBkYXRlVW5pdCA9IChcclxuICAgIHVuaXQ6VW5pdCxcclxuICAgIHBhdGg6YW55W10sIFxyXG4gICAgaTpudW1iZXI9MCwgXHJcbiAgICBjdXJyZW50TW92ZVRvWDpudW1iZXIsIFxyXG4gICAgY3VycmVudE1vdmVUb1k6bnVtYmVyLCBcclxuICAgIGNoYXNlblVuaXQ6YW55PW51bGwsIFxyXG4gICAgbmV3TW92ZW1lbnQ6Ym9vbGVhbixcclxuICAgIHRyaWVzOiBudW1iZXIgPSAwXHJcbiAgKSA9PiB7XHJcbiAgaWYodHJpZXMgPiAzKSByZXR1cm47XHJcbiAgaWYodW5pdC5oZWFsdGggPD0gMCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZihpID09PSBwYXRoLmxlbmd0aCkgeyAvLyB1bml0IGFwcHJvYWNoIGl0cyBlbmQgcG9zaXRpb25cclxuICAgIGxldCBjdXJyZW50Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICAgIHN0b3BNb3ZpbmcodW5pdCwgY3VycmVudE5vZGUpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgaWYodW5pdC5pc0ZpZ2h0aW5nKSB7IC8vIHN0b3AgbW92aW5nIGlmIHVuaXQgaXMgZmlnaHRpbmdcclxuICAgIGRyYXdVbml0SWNvbih1bml0KTtcclxuICAgIGlmKG5ld01vdmVtZW50ICYmIHVuaXRDYW5HZXRPdXRPZkNvbWJhdCh1bml0KSkgeyAvLyB1bml0IGlzIHRyeWluZyB0byBvdXQgb2YgY29tYmF0XHJcbiAgICAgIHVuaXQuc2V0VW5pdFRvUHVyc3VlVG9OdWxsKCk7XHJcbiAgICAgIHVuaXQuY2xlYXJGaWdodEFnYWluc3QoKTsgLy8gbm93IHVuaXQgbm90IGZpZ2h0aW5nIHdpdGggYW55b25lXHJcbiAgICAgIHJlbW92ZVVuaXRGcm9tRW5lbWllc0ZpZ2h0QWdhaW5zdCh1bml0KTsgLy8gcmVtb3ZlIHVuaXQgZnJvbSBhbGwgZW5lbWllcyBmaWd0aEFnYWluc3RcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCBjdXJyZW50Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICAgICAgc3RvcE1vdmluZyh1bml0LCBjdXJyZW50Tm9kZSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGlmKGdldEludGVyY2VwdGVkRW5lbWllcyh1bml0KS5sZW5ndGggIT09IDApIHsgLy8gZW5lbXkgaXMgb24gdGhlIG5laWdoYm91ciBub2RlXHJcbiAgICBjb25zb2xlLmxvZygnVU5JVCBJUyBJTlRFUkNFUFRFRCBCWSBFTkVNWScpO1xyXG4gICAgbGV0IGN1cnJlbnROb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC54LCB1bml0LnkpO1xyXG4gICAgc3RvcE1vdmluZyh1bml0LCBjdXJyZW50Tm9kZSk7XHJcbiAgICB1bml0LnNldFVuaXRUb1B1cnN1ZVRvTnVsbCgpO1xyXG4gICAgZHJhd1VuaXRJY29uKHVuaXQpO1xyXG4gICAgZm9yKGxldCBlbmVteSBvZiBnZXRJbnRlcmNlcHRlZEVuZW1pZXModW5pdCkpIHtcclxuICAgICAgc3RvcE1vdmluZyhlbmVteSwgZW5lbXkubmV4dE5vZGUpO1xyXG4gICAgICB1bml0LmFzc2lnbkVuZW15KGVuZW15KTsgLy8gYXNzaWduIHB1cnN1ZWRVbml0IGFzIGZyb250IGxpbmUgZW5lbXlcclxuICAgICAgZW5lbXkuYXNzaWduRW5lbXkodW5pdCk7XHJcbiAgICAgIGRyYXdVbml0SWNvbihlbmVteSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBpZih1bml0LnVuaXRUb1B1cnN1ZSkge1xyXG4gICAgLy8gdW5pdCBub3cgaXMgcHVyc3Vpbmcgb3Bwb25lbnQncyB1bml0XHJcbiAgICBsZXQgc3RhcnROb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC54LCB1bml0LnkpO1xyXG4gICAgc3RvcE1vdmluZyh1bml0LCBzdGFydE5vZGUpO1xyXG4gICAgbGV0IGZpbmlzaE5vZGUgPSBnZXROb2RlRnJvbU1hcCh1bml0LnVuaXRUb1B1cnN1ZS54LCB1bml0LnVuaXRUb1B1cnN1ZS55KTtcclxuICAgIGxldCBuZXdQYXRoOmFueSA9IGFTdGFyKGluaXRpYWxNYXAsIHN0YXJ0Tm9kZSwgZmluaXNoTm9kZSk7XHJcbiAgICB1bml0LmFzc2lnbk1vdmVUb1Bvc2l0aW9uKGZpbmlzaE5vZGUueCwgZmluaXNoTm9kZS55KTtcclxuICAgIHB1cnN1ZVVuaXQodW5pdCwgdW5pdC51bml0VG9QdXJzdWUsIGZpbmlzaE5vZGUueCwgZmluaXNoTm9kZS55LCAwLCBuZXdQYXRoLCBmYWxzZSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBpZihjdXJyZW50TW92ZVRvWCAhPT0gdW5pdC5tb3ZlVG9Ob2RlLnggfHwgY3VycmVudE1vdmVUb1kgIT09IHVuaXQubW92ZVRvTm9kZS55KSB7IC8vIG5ldyBkZXN0aW5hdGlvblxyXG4gICAgbGV0IHN0YXJ0Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICAgIGxldCBmaW5pc2hOb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC5tb3ZlVG9Ob2RlLngsIHVuaXQubW92ZVRvTm9kZS55KTtcclxuICAgIHN0b3BNb3ZpbmcodW5pdCwgc3RhcnROb2RlKTtcclxuICAgIGxldCBuZXdQYXRoOmFueSA9IGFTdGFyKGluaXRpYWxNYXAsIHN0YXJ0Tm9kZSwgZmluaXNoTm9kZSk7XHJcbiAgICB1bml0LmFzc2lnbk1vdmVUb1Bvc2l0aW9uKGZpbmlzaE5vZGUueCwgZmluaXNoTm9kZS55KTtcclxuICAgIHVwZGF0ZVVuaXQodW5pdCxuZXdQYXRoLCAwLCBmaW5pc2hOb2RlLngsIGZpbmlzaE5vZGUueSwgbnVsbCwgZmFsc2UpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgbGV0IHVwZGF0ZWRQYXRoID0gT2JqZWN0LmFzc2lnbihbXSwgcGF0aCk7XHJcbiAgbGV0IG5vZGUgPSB1cGRhdGVkUGF0aFtpXTsgLy8gZ2V0IG5leHQgbm9kZVxyXG4gIGlmKCFub2RlKSByZXR1cm47XHJcbiAgbGV0IG5leHROb2RlOmFueTtcclxuICBpZihpICsgMSA9PT0gdXBkYXRlZFBhdGgubGVuZ3RoKSB7IC8vIGxhc3Qgbm9kZVxyXG4gICAgbmV4dE5vZGUgPSBub2RlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBuZXh0Tm9kZSA9IHVwZGF0ZWRQYXRoW2kgKyAxXTtcclxuICB9XHJcblxyXG4gIGxldCBjdXJyZW50Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTsgLy8gZ2V0IGN1cnJlbnROb2RlXHJcbiAgdW5pdC5zZXRDdXJyZW50Tm9kZShjdXJyZW50Tm9kZSk7IC8vIHNldCBjdXJyZW50Tm9kZVxyXG4gIHVuaXQuc2V0TmV4dE5vZGUobm9kZSk7IC8vIHNldCBuZXh0Tm9kZVxyXG4gIGlmKGkgPj0gdXBkYXRlZFBhdGgubGVuZ3RoKSB7XHJcbiAgICBzdG9wTW92aW5nKHVuaXQsIGN1cnJlbnROb2RlKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8vIGFsbHkgdW5pdCBpcyBvbiB0aGUgZGVzdGluYXRpb24gcG9zaXRpb25cclxuICAvLyBjdXJyZW50VW5pdCBzaG91bGQgc3RvcCBtb3ZpbmdcclxuICBpZihhbm90aGVyVW5pdElzT25UaGVXYXkodW5pdCkgJiYgaSA9PT0gdXBkYXRlZFBhdGgubGVuZ3RoIC0gMSkge1xyXG4gICAgaWYoZ2V0QmxvY2tlZEVuZW1pZXModW5pdCkubGVuZ3RoID4gMCkge1xyXG4gICAgICBzdG9wTW92aW5nKHVuaXQsIGN1cnJlbnROb2RlKTtcclxuICAgICAgdW5pdC5zZXRVbml0VG9QdXJzdWVUb051bGwoKTtcclxuICAgICAgZHJhd1VuaXRJY29uKHVuaXQpO1xyXG4gICAgICBmb3IobGV0IGVuZW15IG9mIGdldEJsb2NrZWRFbmVtaWVzKHVuaXQpKSB7XHJcbiAgICAgICAgdW5pdC5hc3NpZ25FbmVteShlbmVteSk7XHJcbiAgICAgICAgZW5lbXkuYXNzaWduRW5lbXkodW5pdCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc29sZS5lcnJvcignYW5vdGhlciB1bml0IG9jY3VweWluZyBkZXN0aW5hdGlvbiBwb3NpdGlvbicpO1xyXG4gICAgdW5pdC5hc3NpZ25Nb3ZlVG9Qb3NpdGlvbih1bml0LngsIHVuaXQueSk7XHJcbiAgICBzdG9wTW92aW5nKHVuaXQsIGN1cnJlbnROb2RlKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgaWYoYW5vdGhlclVuaXRJc09uVGhlV2F5KHVuaXQpKSB7XHJcbiAgICBjb25zb2xlLmxvZygnYW5vdGhlciB1bml0IGlzIG9uIHRoZSB3YXknKTtcclxuICAgIC8vIHVuaXQgaGFzIGFub3RoZXIgYWxsaWVzJyB1bml0IG9uIGl0cyB3YXlcclxuICAgIGlmKGdldEJsb2NrZWRFbmVtaWVzKHVuaXQpLmxlbmd0aCA+IDApIHsgLy8gdW5pdCBpcyBibG9ja2VkIGJ5IGVuZW15XHJcbiAgICAgIHN0b3BNb3ZpbmcodW5pdCwgY3VycmVudE5vZGUpO1xyXG4gICAgICB1bml0LnNldFVuaXRUb1B1cnN1ZVRvTnVsbCgpO1xyXG4gICAgICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgICAgIGZvcihsZXQgZW5lbXkgb2YgZ2V0QmxvY2tlZEVuZW1pZXModW5pdCkpIHtcclxuICAgICAgICB1bml0LmFzc2lnbkVuZW15KGVuZW15KTtcclxuICAgICAgICBlbmVteS5hc3NpZ25FbmVteSh1bml0KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm47XHJcbiAgICB9IFxyXG4gICAgY29uc3QgcGVybWlzc2lvbjpib29sZWFuID0gdW5pdENhbk1vdmVUb1RoZU5vZGUobmV4dE5vZGUsIHVuaXQpO1xyXG4gICAgaWYoIXBlcm1pc3Npb24pIHtcclxuICAgICAgc3RvcE1vdmluZyh1bml0LCBjdXJyZW50Tm9kZSk7XHJcbiAgICAgIGxldCB1cGRhdGVkTWFwID0gT2JqZWN0LmFzc2lnbihbXSwgaW5pdGlhbE1hcCk7XHJcbiAgICAgIGxldCBibG9ja2VkTm9kZXMgPSBnZXRTdXJyb3VuZGVkQmxvY2tlZE5vZGVzKHVuaXQpO1xyXG4gICAgICBmb3IobGV0IGJsb2NrZWROb2RlIG9mIGJsb2NrZWROb2Rlcykge1xyXG4gICAgICAgIHVwZGF0ZWRNYXAgPSBjcmVhdGVVbml0T2JzdGFjbGUodXBkYXRlZE1hcCwgYmxvY2tlZE5vZGUueCwgYmxvY2tlZE5vZGUueSk7IC8vIGNyZWF0ZSBvYnN0YWNsZSBmb3IgY3VycmVudE5vZGVcclxuICAgICAgfVxyXG4gICAgICBhZGROZWlnaGJvcnModXBkYXRlZE1hcCk7IC8vIGNyZWF0ZSBuZXcgbmVpZ2hib3VycyBmb3IgdXBkYXRlZCBtYXBcclxuICAgICAgbGV0IHN0YXJ0Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55LCB1cGRhdGVkTWFwKTtcclxuICAgICAgbGV0IGZpbmlzaE5vZGUgPSBnZXROb2RlRnJvbU1hcChjdXJyZW50TW92ZVRvWCwgY3VycmVudE1vdmVUb1ksIHVwZGF0ZWRNYXApO1xyXG5cclxuICAgICAgbGV0IG5ld1BhdGg6YW55ID0gYVN0YXIodXBkYXRlZE1hcCwgc3RhcnROb2RlLCBmaW5pc2hOb2RlKTtcclxuICAgICAgdXBkYXRlVW5pdCh1bml0LCBuZXdQYXRoLCAwLCBjdXJyZW50TW92ZVRvWCwgY3VycmVudE1vdmVUb1ksIG51bGwsIGZhbHNlLCB0cmllcyArPSAxKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfSBcclxuICB9XHJcblxyXG4gIHVuaXQuc2V0SXNNb3ZpbmdUb1RydWUoKTtcclxuICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgbGV0IG5vZGVUb0NsZWFyID0gbm9kZTtcclxuICBzcG90RW5lbXkodW5pdCk7IC8vIGNoZWNrIGZvciBlbmVteSB1bml0c1xyXG4gIGlmKGkgIT09IDApIHtcclxuICAgIG5vZGVUb0NsZWFyID0gdXBkYXRlZFBhdGhbaSAtIDFdO1xyXG4gIH1cclxuICB1bml0LmRlY3JlYXNlQ29uZGl0aW9uKDEpOyAvLyBkZWNyZWFzZUNvbmRpdGlvbiB3aGlsZSBtb3ZpbmdcclxuICBtb3ZlVG9OZXh0Tm9kZUluVXBkYXRlVW5pdCh1bml0LCBub2RlVG9DbGVhciwgbm9kZSwgY3VycmVudE1vdmVUb1gsIGN1cnJlbnRNb3ZlVG9ZLCBwYXRoLCBpKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNvbXB1dGVyVW5pdHMsXHJcbiAgcGxheWVyVW5pdHNcclxufSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHtcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMsXHJcbiAgZGVsZXRlVW5pdEZyb21BcnJheVxyXG59IGZyb20gJy4uL2dlbmVyYWwnO1xyXG5pbXBvcnQgeyBnZXREaXN0YW5jZUJldHdlZW5Vbml0QW5kTm9kZUluR3JpZHMgfSBmcm9tICcuLi8uLi9ub2RlJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuXHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Q2xvc2VzdFVuaXRUb05vZGUgPSAobm9kZTphbnkpOiBVbml0ID0+IHtcclxuICBsZXQgY2xvc2VzdFVuaXQ6YW55ID0gY29tcHV0ZXJVbml0c1swXTtcclxuICBmb3IobGV0IGkgPSAxOyBpIDwgY29tcHV0ZXJVbml0cy5sZW5ndGg7ICsraSkge1xyXG4gICAgbGV0IGNsb3Nlc3RVbml0RGlzdGFuY2UgPSBnZXREaXN0YW5jZUJldHdlZW5Vbml0QW5kTm9kZUluR3JpZHMoY2xvc2VzdFVuaXQsIG5vZGUpO1xyXG4gICAgbGV0IHVuaXREaXN0YW5jZSA9IGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5Hcmlkcyhjb21wdXRlclVuaXRzW2ldLCBub2RlKTtcclxuICAgIGlmKHVuaXREaXN0YW5jZSA8IGNsb3Nlc3RVbml0RGlzdGFuY2UpIHtcclxuICAgICAgY2xvc2VzdFVuaXQgPSBjb21wdXRlclVuaXRzW2ldO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gY2xvc2VzdFVuaXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRDbG9zZXN0VW5pdFRvT3RoZXJVbml0ID0gKHVuaXQ6VW5pdCwgdW5pdHM6VW5pdFtdID0gY29tcHV0ZXJVbml0cyk6YW55ID0+IHtcclxuICBsZXQgdXBkYXRlZENvbXB1dGVyc1VuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCB1bml0cykpO1xyXG4gIGlmKHVwZGF0ZWRDb21wdXRlcnNVbml0cy5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybiB1bml0O1xyXG4gIH1cclxuICBsZXQgY2xvc2VzdFVuaXQ6YW55ID0gdXBkYXRlZENvbXB1dGVyc1VuaXRzWzBdO1xyXG4gIGZvcihsZXQgaSA9IDE7IGkgPCB1cGRhdGVkQ29tcHV0ZXJzVW5pdHMubGVuZ3RoOyArK2kpIHtcclxuICAgIGxldCBjbG9zZXN0VW5pdERpc3RhbmNlID0gZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvVW5pdHNJbkdyaWRzKGNsb3Nlc3RVbml0LCB1bml0KTtcclxuICAgIGxldCB1bml0RGlzdGFuY2UgPSBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHModXBkYXRlZENvbXB1dGVyc1VuaXRzW2ldLCB1bml0KTtcclxuICAgIGlmKHVuaXREaXN0YW5jZSA8IGNsb3Nlc3RVbml0RGlzdGFuY2UpIHtcclxuICAgICAgY2xvc2VzdFVuaXQgPSB1cGRhdGVkQ29tcHV0ZXJzVW5pdHNbaV07XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBjbG9zZXN0VW5pdDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldEJlc3RVbml0QnlQcm9wZXJ0eSA9IChwcm9wZXJ0eTpzdHJpbmcsIGV4Y2x1c2lvbjphbnlbXSA9IFtdKTphbnkgPT4ge1xyXG4gIGxldCB1cGRhdGVkQ29tcHV0ZXJzVW5pdHMgPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICBpZihleGNsdXNpb24ubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgZXhjbHVzaW9uKSB7XHJcbiAgICAgIHVwZGF0ZWRDb21wdXRlcnNVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgdXBkYXRlZENvbXB1dGVyc1VuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZENvbXB1dGVyc1VuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGxldCBiZXN0VW5pdCA9IHVwZGF0ZWRDb21wdXRlcnNVbml0c1swXTtcclxuICBmb3IobGV0IGkgPSAwOyBpIDwgdXBkYXRlZENvbXB1dGVyc1VuaXRzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBpZihiZXN0VW5pdFtwcm9wZXJ0eV0gPCB1cGRhdGVkQ29tcHV0ZXJzVW5pdHNbaV1bcHJvcGVydHldKSB7XHJcbiAgICAgIGJlc3RVbml0ID0gdXBkYXRlZENvbXB1dGVyc1VuaXRzW2ldO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gYmVzdFVuaXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRXb3JzdFVuaXRCeVByb3BlcnR5ID0gKHByb3BlcnR5OnN0cmluZywgZXhjbHVzaW9uOmFueVtdID0gW10pOmFueSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRDb21wdXRlcnNVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gIGlmKGV4Y2x1c2lvbi5sZW5ndGggIT09IDApIHtcclxuICAgIGZvcihsZXQgdW5pdCBvZiBleGNsdXNpb24pIHtcclxuICAgICAgdXBkYXRlZENvbXB1dGVyc1VuaXRzID0gZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCB1cGRhdGVkQ29tcHV0ZXJzVW5pdHMpO1xyXG4gICAgfVxyXG4gIH1cclxuICBpZih1cGRhdGVkQ29tcHV0ZXJzVW5pdHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgbGV0IHdvcnN0VW5pdCA9IHVwZGF0ZWRDb21wdXRlcnNVbml0c1swXTtcclxuICBmb3IobGV0IGkgPSAwOyBpIDwgdXBkYXRlZENvbXB1dGVyc1VuaXRzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBpZih3b3JzdFVuaXRbcHJvcGVydHldID4gdXBkYXRlZENvbXB1dGVyc1VuaXRzW2ldW3Byb3BlcnR5XSkge1xyXG4gICAgICB3b3JzdFVuaXQgPSB1cGRhdGVkQ29tcHV0ZXJzVW5pdHNbaV07XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiB3b3JzdFVuaXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRCZXN0RW5lbXlCeVByb3BlcnR5ID0gKHByb3BlcnR5OnN0cmluZywgZXhjbHVzaW9uOmFueVtdID0gW10pOmFueSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRQbGF5ZXJVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIHBsYXllclVuaXRzKTtcclxuICBpZihleGNsdXNpb24ubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgZXhjbHVzaW9uKSB7XHJcbiAgICAgIHVwZGF0ZWRQbGF5ZXJVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgdXBkYXRlZFBsYXllclVuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZFBsYXllclVuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGxldCBiZXN0VW5pdCA9IHVwZGF0ZWRQbGF5ZXJVbml0c1swXTtcclxuICBmb3IobGV0IGkgPSAwOyBpIDwgdXBkYXRlZFBsYXllclVuaXRzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBpZihiZXN0VW5pdFtwcm9wZXJ0eV0gPCB1cGRhdGVkUGxheWVyVW5pdHNbaV1bcHJvcGVydHldKSB7XHJcbiAgICAgIGJlc3RVbml0ID0gdXBkYXRlZFBsYXllclVuaXRzW2ldO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gYmVzdFVuaXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRXb3JzdEVuZW15QnlQcm9wZXJ0eSA9IChwcm9wZXJ0eTpzdHJpbmcsIGV4Y2x1c2lvbjpVbml0W10gPSBbXSk6VW5pdCA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRQbGF5ZXJVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIHBsYXllclVuaXRzKTtcclxuICBpZihleGNsdXNpb24ubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgZXhjbHVzaW9uKSB7XHJcbiAgICAgIHVwZGF0ZWRQbGF5ZXJVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgdXBkYXRlZFBsYXllclVuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZFBsYXllclVuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGxldCB3b3JzdFVuaXQgPSB1cGRhdGVkUGxheWVyVW5pdHNbMF07XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IHVwZGF0ZWRQbGF5ZXJVbml0cy5sZW5ndGg7ICsraSkge1xyXG4gICAgaWYod29yc3RVbml0W3Byb3BlcnR5XSA+IHVwZGF0ZWRQbGF5ZXJVbml0c1tpXVtwcm9wZXJ0eV0pIHtcclxuICAgICAgd29yc3RVbml0ID0gdXBkYXRlZFBsYXllclVuaXRzW2ldO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gd29yc3RVbml0O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Tm90RmlnaHRpbmdVbml0cyA9IChleGNsdXNpb246VW5pdFtdID0gW10pOlVuaXRbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRDb21wdXRlclVuaXRzOlVuaXRbXSA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gIGlmKGV4Y2x1c2lvbi5sZW5ndGggIT09IDApIHtcclxuICAgIGZvcihsZXQgdW5pdCBvZiBleGNsdXNpb24pIHtcclxuICAgICAgdXBkYXRlZENvbXB1dGVyVW5pdHMgPSBkZWxldGVVbml0RnJvbUFycmF5KHVuaXQsIHVwZGF0ZWRDb21wdXRlclVuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZENvbXB1dGVyVW5pdHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgbGV0IG5vdEZpZ2h0aW5nVW5pdHM6VW5pdFtdID0gW107XHJcbiAgZm9yKGxldCB1bml0IG9mIHVwZGF0ZWRDb21wdXRlclVuaXRzKSB7XHJcbiAgICBpZighdW5pdC5pc0ZpZ2h0aW5nKSB7XHJcbiAgICAgIG5vdEZpZ2h0aW5nVW5pdHMucHVzaCh1bml0KTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG5vdEZpZ2h0aW5nVW5pdHM7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRGaWdodGluZ1VuaXRzID0gKHVuaXRzOiBVbml0W10pOiBVbml0W10gPT4ge1xyXG4gIGxldCBmaWdodGluZ1VuaXRzOiBVbml0W10gPSBbXTtcclxuICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgIGlmKHVuaXQuaXNGaWdodGluZykge1xyXG4gICAgICBmaWdodGluZ1VuaXRzLnB1c2godW5pdCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBmaWdodGluZ1VuaXRzO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VG90YWxVbml0c0hlYWx0aCA9ICh1bml0czogVW5pdFtdKTogbnVtYmVyID0+IHtcclxuICBsZXQgdG90YWxIZWFsdGg6IG51bWJlciA9IDA7XHJcbiAgZm9yKGxldCB1bml0IG9mIHVuaXRzKSB7XHJcbiAgICB0b3RhbEhlYWx0aCArPSB1bml0LmhlYWx0aDtcclxuICB9XHJcbiAgcmV0dXJuIHRvdGFsSGVhbHRoO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VG90YWxVbml0c0luaXRpYWxIZWFsdGggPSAodW5pdHM6IFVuaXRbXSk6IG51bWJlciA9PiB7XHJcbiAgbGV0IHRvdGFsSW5pdGlhbEhlYWx0aDogbnVtYmVyID0gMDtcclxuICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgIHRvdGFsSW5pdGlhbEhlYWx0aCArPSB1bml0LmhlYWx0aDtcclxuICB9XHJcbiAgcmV0dXJuIHRvdGFsSW5pdGlhbEhlYWx0aDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldENsb3Nlc3RFbmVteVRvVW5pdCA9ICh1bml0OlVuaXQpID0+IHtcclxuICBsZXQgdXBkYXRlZFBsYXllclVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCBwbGF5ZXJVbml0cykpO1xyXG4gIGlmKHVwZGF0ZWRQbGF5ZXJVbml0cy5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxuICBsZXQgY2xvc2VzdFVuaXQ6YW55ID0gdXBkYXRlZFBsYXllclVuaXRzWzBdO1xyXG4gIGZvcihsZXQgaSA9IDE7IGkgPCB1cGRhdGVkUGxheWVyVW5pdHMubGVuZ3RoOyArK2kpIHtcclxuICAgIGxldCBjbG9zZXN0VW5pdERpc3RhbmNlID0gZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvVW5pdHNJbkdyaWRzKGNsb3Nlc3RVbml0LCB1bml0KTtcclxuICAgIGxldCB1bml0RGlzdGFuY2UgPSBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHModXBkYXRlZFBsYXllclVuaXRzW2ldLCB1bml0KTtcclxuICAgIGlmKHVuaXREaXN0YW5jZSA8IGNsb3Nlc3RVbml0RGlzdGFuY2UpIHtcclxuICAgICAgY2xvc2VzdFVuaXQgPSB1cGRhdGVkUGxheWVyVW5pdHNbaV07XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBjbG9zZXN0VW5pdDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldEZyZWVVbml0cyA9IChleGNsdXNpb246VW5pdFtdID0gW10pOlVuaXRbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRDb21wdXRlcnNVbml0czpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICBpZihleGNsdXNpb24ubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgZXhjbHVzaW9uKSB7XHJcbiAgICAgIHVwZGF0ZWRDb21wdXRlcnNVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgdXBkYXRlZENvbXB1dGVyc1VuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZENvbXB1dGVyc1VuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGxldCBmcmVlVW5pdHM6VW5pdFtdID0gW107XHJcbiAgZm9yKGxldCB1bml0IG9mIHVwZGF0ZWRDb21wdXRlcnNVbml0cykge1xyXG4gICAgaWYoIXVuaXQudGFzaykge1xyXG4gICAgICBmcmVlVW5pdHMucHVzaCh1bml0KTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIGZyZWVVbml0cztcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldFVuaXRzQnlUYXNrID0gKHRhc2s6c3RyaW5nLCBleGNsdXNpb246VW5pdFtdID0gW10pOlVuaXRbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRDb21wdXRlcnNVbml0czpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICBpZihleGNsdXNpb24ubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgZXhjbHVzaW9uKSB7XHJcbiAgICAgIHVwZGF0ZWRDb21wdXRlcnNVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgdXBkYXRlZENvbXB1dGVyc1VuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZENvbXB1dGVyc1VuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG4gIGxldCB1bml0czpVbml0W10gPSBbXTtcclxuICBmb3IobGV0IHVuaXQgb2YgdXBkYXRlZENvbXB1dGVyc1VuaXRzKSB7XHJcbiAgICBpZih1bml0LnRhc2sgPT09IHRhc2spIHtcclxuICAgICAgdW5pdHMucHVzaCh1bml0KTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHVuaXRzO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VW5pdHNCeVByb3BlcnR5VmFsdWUgPSAocHJvcGVydHk6c3RyaW5nLCB2YWx1ZTphbnksIGV4Y2x1c2lvbjpVbml0W109W10pOlVuaXRbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRDb21wdXRlcnNVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gIGlmKGV4Y2x1c2lvbi5sZW5ndGggIT09IDApIHtcclxuICAgIGZvcihsZXQgdW5pdCBvZiBleGNsdXNpb24pIHtcclxuICAgICAgdXBkYXRlZENvbXB1dGVyc1VuaXRzID0gZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCB1cGRhdGVkQ29tcHV0ZXJzVW5pdHMpO1xyXG4gICAgfVxyXG4gIH1cclxuICBpZih1cGRhdGVkQ29tcHV0ZXJzVW5pdHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgbGV0IHVuaXRzOlVuaXRbXSA9IFtdO1xyXG4gIGZvcihsZXQgdW5pdCBvZiB1cGRhdGVkQ29tcHV0ZXJzVW5pdHMpIHtcclxuICAgIGlmKHVuaXRbcHJvcGVydHldID09PSB2YWx1ZSkge1xyXG4gICAgICB1bml0cy5wdXNoKHVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdW5pdHM7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRVbml0c1doZXJlVmFsdWUgPSAocHJvcGVydHk6c3RyaW5nLCBvcGVyYXRvcjpzdHJpbmcsIHZhbHVlOmFueSwgZXhjbHVzaW9uOlVuaXRbXSA9IFtdKTpVbml0W10gPT4ge1xyXG4gIGxldCB1cGRhdGVkQ29tcHV0ZXJzVW5pdHMgPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICBpZihleGNsdXNpb24ubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgZXhjbHVzaW9uKSB7XHJcbiAgICAgIHVwZGF0ZWRDb21wdXRlcnNVbml0cyA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkodW5pdCwgdXBkYXRlZENvbXB1dGVyc1VuaXRzKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYodXBkYXRlZENvbXB1dGVyc1VuaXRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBsZXQgdW5pdHM6VW5pdFtdID0gW107XHJcbiAgZm9yKGxldCB1bml0IG9mIHVwZGF0ZWRDb21wdXRlcnNVbml0cykge1xyXG4gICAgb3BlcmF0b3IudG9Mb3dlckNhc2UoKTtcclxuICAgIGlmKG9wZXJhdG9yID09PSAnPScgfHwgb3BlcmF0b3IgPT09ICdlcXVhbCcgfHwgb3BlcmF0b3IgPT09ICc9PScgfHwgb3BlcmF0b3IgPT09ICc9PT0nKSB7XHJcbiAgICAgIGlmKHVuaXRbcHJvcGVydHldID09IHZhbHVlKSB7XHJcbiAgICAgICAgdW5pdHMucHVzaCh1bml0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZihvcGVyYXRvciA9PT0gJz4nIHx8IG9wZXJhdG9yID09PSAnZ3JlYXRlcicpIHtcclxuICAgICAgaWYodW5pdFtwcm9wZXJ0eV0gPiB2YWx1ZSkge1xyXG4gICAgICAgIHVuaXRzLnB1c2godW5pdCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2UgaWYob3BlcmF0b3IgPT09ICc+PScgfHwgb3BlcmF0b3IgPT09ICc+PT0nIHx8IG9wZXJhdG9yID09PSAnZ3JlYXRlck9yRXF1YWwnKSB7XHJcbiAgICAgIGlmKHVuaXRbcHJvcGVydHldID49IHZhbHVlKSB7XHJcbiAgICAgICAgdW5pdHMucHVzaCh1bml0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZihvcGVyYXRvciA9PT0gJzwnIHx8IG9wZXJhdG9yID09PSAnbGVzcycpIHtcclxuICAgICAgaWYodW5pdFtwcm9wZXJ0eV0gPCB2YWx1ZSkge1xyXG4gICAgICAgIHVuaXRzLnB1c2godW5pdCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2UgaWYob3BlcmF0b3IgPT09ICc8PScgfHwgb3BlcmF0b3IgPT09ICc8PT0nIHx8IG9wZXJhdG9yID09PSAnbGVzc09yRXF1YWwnKSB7XHJcbiAgICAgIGlmKHVuaXRbcHJvcGVydHldIDw9IHZhbHVlKSB7XHJcbiAgICAgICAgdW5pdHMucHVzaCh1bml0KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdW5pdHM7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXREYW5nZXJvdXNVbml0cyA9ICh1bml0OiBVbml0KTogVW5pdFtdID0+IHtcclxuICBsZXQgZW5lbWllczogVW5pdFtdID0gW107XHJcbiAgbGV0IGRhbmdlcm91c0VuZW1pZXM6IFVuaXRbXSA9IFtdO1xyXG4gIGlmKHVuaXQuY29udHJvbEJ5ID09PSAnY29tcHV0ZXInKSB7XHJcbiAgICBlbmVtaWVzID0gT2JqZWN0LmFzc2lnbihbXSwgcGxheWVyVW5pdHMpO1xyXG4gIH0gXHJcbiAgZWxzZSBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ3BsYXllcicpIHtcclxuICAgIGVuZW1pZXMgPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICB9XHJcblxyXG4gIGZvcihsZXQgZW5lbXkgb2YgZW5lbWllcykge1xyXG4gICAgZm9yKGxldCBkYW5nZXJvdXNFbmVteSBvZiB1bml0LnZ1bG5lcmFibGVBZ2FpbnN0KSB7XHJcbiAgICAgIGlmKGVuZW15Lm5hbWUgPT0gZGFuZ2Vyb3VzRW5lbXkpIHtcclxuICAgICAgICBkYW5nZXJvdXNFbmVtaWVzLnB1c2goZW5lbXkpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBkYW5nZXJvdXNFbmVtaWVzO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY29udGFpbnNEYW5nZXJvdXNVbml0cyA9ICh1bml0OiBVbml0LCB1bml0czogVW5pdFtdKTogYm9vbGVhbiA9PiB7XHJcbiAgZm9yKGxldCBlbmVteSBvZiB1bml0cykge1xyXG4gICAgZm9yKGxldCBkYW5nZXJvdXNFbmVteSBvZiB1bml0LnZ1bG5lcmFibGVBZ2FpbnN0KSB7XHJcbiAgICAgIGlmKGVuZW15Lm5hbWUgPT0gZGFuZ2Vyb3VzRW5lbXkpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpc0VuZW15RGFuZ2Vyb3VzRm9yVW5pdCA9ICh1bml0OiBVbml0LCBlbmVteTogVW5pdCkgPT4ge1xyXG4gIGZvcihsZXQgZGFuZ2Vyb3VzRW5lbXkgb2YgdW5pdC52dWxuZXJhYmxlQWdhaW5zdCkge1xyXG4gICAgaWYoZW5lbXkubmFtZSA9PSBkYW5nZXJvdXNFbmVteSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIGZhbHNlO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgaXNFbmVteVZ1bG5lcmFibGVUb1VuaXQgPSAodW5pdDogVW5pdCwgZW5lbXk6IFVuaXQpID0+IHtcclxuICBmb3IobGV0IHZ1bG5lcmFibGVFbmVteSBvZiB1bml0LmFkdmFudGFnZU92ZXIpIHtcclxuICAgIGlmKGVuZW15Lm5hbWUgPT0gdnVsbmVyYWJsZUVuZW15KSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRTY291dHNOdW1iZXIgPSAoKTpudW1iZXIgPT4ge1xyXG4gIGZvcihsZXQgdW5pdCBvZiBjb21wdXRlclVuaXRzKSB7XHJcbiAgICAgIGxldCBzY291dHM6VW5pdFtdID0gZ2V0VW5pdHNCeVRhc2soJ2V4cGxvcmF0aW9uJyk7XHJcbiAgICAgIHJldHVybiBzY291dHMubGVuZ3RoO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGlzVW5pdHNDaGFuZ2VkID0gKGN1cnJlbnRVbml0czogVW5pdFtdLCBwcmV2aW91c1VuaXRzOiBVbml0W10pOiBib29sZWFuID0+IHtcclxuICBjb25zdCBjb21wYXJlID0gKHVuaXQxOiBVbml0LCB1bml0MjogVW5pdCkgPT4ge1xyXG4gICAgaWYgKHVuaXQxLmlkIDwgdW5pdDIuaWQpXHJcbiAgICAgIHJldHVybiAtMTtcclxuICAgIGlmICh1bml0MS5pZCA+IHVuaXQyLmlkKVxyXG4gICAgICByZXR1cm4gMTtcclxuICAgIHJldHVybiAwO1xyXG4gIH1cclxuICBpZihjdXJyZW50VW5pdHMubGVuZ3RoICE9IHByZXZpb3VzVW5pdHMubGVuZ3RoKSByZXR1cm4gdHJ1ZTtcclxuICBsZXQgdXBkYXRlZEN1cnJlbnRVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIGN1cnJlbnRVbml0cyk7XHJcbiAgbGV0IHVwZGF0ZWRQcmV2aW91c1VuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgcHJldmlvdXNVbml0cylcclxuICB1cGRhdGVkQ3VycmVudFVuaXRzLnNvcnQoY29tcGFyZSk7XHJcbiAgdXBkYXRlZFByZXZpb3VzVW5pdHMuc29ydChjb21wYXJlKTtcclxuXHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IHVwZGF0ZWRDdXJyZW50VW5pdHMubGVuZ3RoOyArK2kpIHtcclxuICAgIGlmKHVwZGF0ZWRDdXJyZW50VW5pdHNbaV0gIT0gdXBkYXRlZFByZXZpb3VzVW5pdHNbaV0pIHtcclxuICAgICAgY29uc29sZS5lcnJvcigndW5pdHMgY2hhbmdlZCcpO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gXHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gICAgY29tcHV0ZXJVbml0cyxcclxuICAgIHBsYXllclVuaXRzXHJcbiAgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuICBpbXBvcnQge2dldFN1cnJvdW5kZWROb2Rlc30gZnJvbSAnLi9nZXRTdXJyb3VuZGVkTm9kZXMnO1xyXG4gIGltcG9ydCB7Z2V0Tm9kZUZyb21NYXB9IGZyb20gJy4uL25vZGUvZ2V0L2Zyb21NYXAnO1xyXG4gIGltcG9ydCB7ZGVsZXRlVW5pdEZyb21BcnJheSwgaXNVbml0SW5BcnJheX0gZnJvbSAnLi4vdW5pdC9nZW5lcmFsJztcclxuICBpbXBvcnQgVW5pdCBmcm9tICcuLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG4gIFxyXG4gIGV4cG9ydCBjb25zdCBnZXRTdXJyb3VuZGVkVW5pdHMgPSAoXHJcbiAgICAgIHVuaXQ6IFVuaXQsIFxyXG4gICAgICB1bml0czogVW5pdFtdLCBcclxuICAgICAgcmFuZ2U6IG51bWJlciA9IDMsIFxyXG4gICAgICBjb3VudE9uZXNlbGY6IGJvb2xlYW4gPSBmYWxzZVxyXG4gICAgKTogVW5pdFtdID0+IHtcclxuICAgIGxldCBzdXJyb3VuZGVkVW5pdHM6VW5pdFtdID0gW107XHJcbiAgICBsZXQgdXBkYXRlZFVuaXRzOlVuaXRbXSA9IE9iamVjdC5hc3NpZ24oW10sIHVuaXRzKTtcclxuICAgIFxyXG4gICAgaWYoIWNvdW50T25lc2VsZiAmJiBpc1VuaXRJbkFycmF5KHVuaXQsIHVwZGF0ZWRVbml0cykpIHtcclxuICAgICAgICB1cGRhdGVkVW5pdHMgPSBkZWxldGVVbml0RnJvbUFycmF5KHVuaXQsIHVwZGF0ZWRVbml0cyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGxldCBub2RlcyA9IGdldFN1cnJvdW5kZWROb2Rlcyh1bml0LCByYW5nZSk7XHJcbiAgICBmb3IobGV0IG5vZGUgb2Ygbm9kZXMpIHtcclxuICAgICAgZm9yKGxldCBjdXJyZW50VW5pdCBvZiB1cGRhdGVkVW5pdHMpIHtcclxuICAgICAgICBsZXQgY3VycmVudFVuaXROb2RlID0gZ2V0Tm9kZUZyb21NYXAoY3VycmVudFVuaXQueCwgY3VycmVudFVuaXQueSk7XHJcbiAgICAgICAgaWYobm9kZS54ID09PSBjdXJyZW50VW5pdE5vZGUueCAmJiBub2RlLnkgPT09IGN1cnJlbnRVbml0Tm9kZS55KSB7XHJcbiAgICAgICAgICBzdXJyb3VuZGVkVW5pdHMucHVzaChjdXJyZW50VW5pdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc3Vycm91bmRlZFVuaXRzO1xyXG4gIH0iLCJpbXBvcnQgeyBkZWZhdWx0VW5pdHMgfSBmcm9tICcuLi91bml0L2RlZmF1bHRVbml0cyc7XHJcblxyXG5leHBvcnQgbGV0IHJvc3RlcjogYW55W10gPSBbXTtcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVSb3N0ZXIgPSAoKSA9PiB7XHJcbiAgZm9yKGxldCB1bml0IG9mIGRlZmF1bHRVbml0cykge1xyXG4gICAgcm9zdGVyLnB1c2godW5pdCk7XHJcbiAgfVxyXG5cclxuICBmb3IobGV0IHVuaXQgb2Ygcm9zdGVyKSB7XHJcbiAgICB1bml0LnNlbGVjdGVkID0gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuIiwiZXhwb3J0IGxldCB0b3RhbEdvbGQ6bnVtYmVyID0gNDAwO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldFRvdGFsR29sZCA9IChnb2xkOm51bWJlcikgPT4ge1xyXG4gIHRvdGFsR29sZCA9IGdvbGQ7XHJcbn1cclxuIiwiZXhwb3J0IGxldCBzaG93QmF0dGxlU2V0dGluZ3M6Ym9vbGVhbiA9IHRydWU7XHJcbmV4cG9ydCBsZXQgc2hvd1VuaXRJbmZvOmJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGFuZ2VCYXR0bGVTZXR0aW5nc1RvVHJ1ZSA9ICgpID0+IHtcclxuICBzaG93QmF0dGxlU2V0dGluZ3MgPSB0cnVlO1xyXG4gIHNob3dVbml0SW5mbyA9IGZhbHNlO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY2hhbmdlVW5pdEluZm9Ub1RydWUgPSAoKSA9PiB7XHJcbiAgc2hvd0JhdHRsZVNldHRpbmdzID0gZmFsc2U7XHJcbiAgc2hvd1VuaXRJbmZvID0gdHJ1ZTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRpc3BsYXlBcm15XHJcbn0gZnJvbSAnLi9hcm15JztcclxuaW1wb3J0IHtcclxuICBkcmF3UmVtb3ZlSWNvblxyXG59IGZyb20gJy4vaWNvbic7XHJcbmltcG9ydCB7XHJcbiAgaXNVbml0U2hvdWxkQmVSZW1vdmVkXHJcbn0gZnJvbSAnLi9yZW1vdmUnO1xyXG5pbXBvcnQge1xyXG4gIGFybXlJbWdXaWR0aCxcclxuICBhcm15SW1nSGVpZ2h0XHJcbn0gZnJvbSAnLi9hcm15U2V0dGluZ3MnO1xyXG5pbXBvcnQge1xyXG4gIGRpc3BsYXlDaG9zZW5Vbml0cyxcclxuICBkaXNwbGF5Q2hvc2VuVW5pdHNUaXRsZSxcclxuICBvbkNob29zZVVuaXRJbkFybXlcclxufSBmcm9tICcuL3VuaXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkaXNwbGF5QXJteSxcclxuICBkcmF3UmVtb3ZlSWNvbixcclxuICBpc1VuaXRTaG91bGRCZVJlbW92ZWQsXHJcbiAgYXJteUltZ1dpZHRoLFxyXG4gIGFybXlJbWdIZWlnaHQsXHJcbiAgZGlzcGxheUNob3NlblVuaXRzLFxyXG4gIGRpc3BsYXlDaG9zZW5Vbml0c1RpdGxlLFxyXG4gIG9uQ2hvb3NlVW5pdEluQXJteVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZGlzcGxheUNvbXB1dGVyXHJcbn0gZnJvbSAnLi9jb21wdXRlcic7XHJcbmltcG9ydCB7XHJcbiAgZGlzcGxheVBsYXllclxyXG59IGZyb20gJy4vcGxheWVyJztcclxuaW1wb3J0IHtcclxuICBkaXNwbGF5UmVtYWluR29sZFxyXG59IGZyb20gJy4vcmVtYWluR29sZCc7XHJcbmltcG9ydCB7XHJcbiAgZGlzcGxheVRpdGxlXHJcbn0gZnJvbSAnLi90aXRsZSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGRpc3BsYXlDb21wdXRlcixcclxuICBkaXNwbGF5UGxheWVyLFxyXG4gIGRpc3BsYXlSZW1haW5Hb2xkLFxyXG4gIGRpc3BsYXlUaXRsZVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgTUFQX0hFSUdIVCxcclxuICBNQVBfV0lEVEgsXHJcbiAgQ0FOVkFTX0hFSUdIVFxyXG59IGZyb20gJy4vbWFwJztcclxuaW1wb3J0IHtncmlkU2l6ZX0gZnJvbSAnLi9ncmlkU2l6ZSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGdyaWRTaXplLFxyXG4gIE1BUF9IRUlHSFQsXHJcbiAgTUFQX1dJRFRILFxyXG4gIENBTlZBU19IRUlHSFRcclxufVxyXG4iLCJleHBvcnQgbGV0IGJhdHRsZU1vZGU6Ym9vbGVhbiA9IGZhbHNlO1xyXG5leHBvcnQgbGV0IGJhdHRsZUZpbmlzaDpib29sZWFuID0gZmFsc2U7XHJcbmV4cG9ydCBsZXQgbWFpbk1lbnVNb2RlOmJvb2xlYW4gPSB0cnVlO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldEJhdHRsZU1vZGUgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgbWFpbk1lbnVNb2RlID0gZmFsc2U7XHJcbiAgICBiYXR0bGVNb2RlID0gdHJ1ZTtcclxuICAgIHJlc29sdmUoKTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNldE1haW5NZW51TW9kZSA9ICgpID0+IHtcclxuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICBtYWluTWVudU1vZGUgPSBmYWxzZTtcclxuICAgIGJhdHRsZU1vZGUgPSB0cnVlO1xyXG4gICAgcmVzb2x2ZSgpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZmluaXNoQmF0dGxlID0gKCkgPT4ge1xyXG4gIGJhdHRsZUZpbmlzaCA9IHRydWU7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBNQVBfV0lEVEgsXHJcbiAgQ0FOVkFTX0hFSUdIVFxyXG59IGZyb20gJy4uJztcclxuICBcclxuZXhwb3J0IGNvbnN0IHBhdGhDYW52YXM6YW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhdGhDYW52YXMnKTtcclxuXHJcbmlmKHBhdGhDYW52YXMpIHtcclxuICBwYXRoQ2FudmFzLndpZHRoID0gTUFQX1dJRFRIO1xyXG4gIHBhdGhDYW52YXMuaGVpZ2h0ID0gQ0FOVkFTX0hFSUdIVDtcclxufSIsImltcG9ydCB7XHJcbiAgICBNQVBfV0lEVEgsXHJcbiAgICBDQU5WQVNfSEVJR0hUXHJcbn0gZnJvbSAnLi4nO1xyXG4gIFxyXG5leHBvcnQgY29uc3QgZXZlbnRDYW52YXM6YW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V2ZW50Q2FudmFzJyk7XHJcblxyXG5pZihldmVudENhbnZhcykge1xyXG4gICAgZXZlbnRDYW52YXMud2lkdGggPSBNQVBfV0lEVEg7XHJcbiAgICBldmVudENhbnZhcy5oZWlnaHQgPSBDQU5WQVNfSEVJR0hUO1xyXG59IiwiZXhwb3J0IGxldCB1bml0SWQ6bnVtYmVyID0gMDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmNVbml0SWQgPSAoKSA9PiB7XHJcbiAgdW5pdElkKys7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBjYWxjdWxhdGVEYW1hZ2UsXHJcbiAgY2FsY3VsYXRlRGFtYWdlQmFzZU9uRW5lbXlQb3NpdGlvbixcclxuICBjYWxjdWxhdGVEYW1hZ2VXaGVuSXRzTGVzc1RoYW5PbmVcclxufSBmcm9tICcuL2RhbWFnZSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGNhbGN1bGF0ZURhbWFnZSxcclxuICBjYWxjdWxhdGVEYW1hZ2VCYXNlT25FbmVteVBvc2l0aW9uLFxyXG4gIGNhbGN1bGF0ZURhbWFnZVdoZW5JdHNMZXNzVGhhbk9uZVxyXG59XHJcbiIsImltcG9ydCB7YVN0YXJ9IGZyb20gJy4vYVN0YXIvQVN0YXInO1xyXG5pbXBvcnQge2RyYXdQYXRofSBmcm9tICcuL2RyYXcvZHJhd1BhdGgnO1xyXG5pbXBvcnQge2ZpbmRQYXRoRnJvbU9uZU5vZGVUb0Fub3RoZXJ9IGZyb20gJy4vZmluZC9maW5kUGF0aCc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0TWluRlNjb3JlLFxyXG4gIHVuY2xvc2VkTmVpZ2JvcnMsXHJcbiAgaXNPYmplY3RJbk1hcEtleXNcclxufSBmcm9tICcuL2FTdGFyL2FTdGFyVXRpbHMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBhU3RhcixcclxuICBkcmF3UGF0aCxcclxuICBmaW5kUGF0aEZyb21PbmVOb2RlVG9Bbm90aGVyLFxyXG4gIGdldE1pbkZTY29yZSxcclxuICB1bmNsb3NlZE5laWdib3JzLFxyXG4gIGlzT2JqZWN0SW5NYXBLZXlzXHJcbn1cclxuIiwiaW1wb3J0IHtuZWlnaGJvcnN9IGZyb20gJy4uLy4uL21hcCc7XHJcbmltcG9ydCB7XHJcbiAgZGVsZXRlT2JqZWN0RnJvbUFycmF5LFxyXG4gIGlzT2JqZWN0SW5BcnJheVxyXG59IGZyb20gJy4uLy4uL3V0aWxzJztcclxuXHJcbmltcG9ydCB7XHJcbiAgZ2V0TWluRlNjb3JlLFxyXG4gIHVuY2xvc2VkTmVpZ2JvcnMsXHJcbiAgaXNPYmplY3RJbk1hcEtleXMsXHJcbiAgZ2V0TmVpZ2hib3JEaXN0YW5jZVxyXG59IGZyb20gJy4vYVN0YXJVdGlscyc7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gJy4uLy4uL21hcC9ub2Rlcy9NYXBOb2RlJztcclxuXHJcbmV4cG9ydCBjb25zdCBhU3RhciA9IChtYXA6IE1hcE5vZGVbXSwgc3RhcnROb2RlOmFueSwgZmluaXNoTm9kZTphbnkpID0+IHtcclxuICAvLyB0aGUgc2V0IG9mIGN1cnJlbnRseSBkaXNjb3ZlcmVkIG5vZGVzIHRoYXQgYXJlIG5vdCBldmFsdWF0ZWQgeWV0XHJcbiAgLy8gSW5pdGlhbGx5IG9ubHkgdGhlIHN0YXJ0IG5vZGUgaXMga25vd25cclxuICBsZXQgdXBkYXRlZE1hcCA9IE9iamVjdC5hc3NpZ24oW10sIG1hcCk7XHJcbiAgaWYoIXN0YXJ0Tm9kZSB8fCAhZmluaXNoTm9kZSkgcmV0dXJuO1xyXG4gIGxldCBvcGVuOmFueVtdID0gW107XHJcblxyXG4gIC8vIHRoZSBzZXQgb2Ygbm9kZXMgdGhhdCBhbHJlYWR5IGV2YWx1YXRlZFxyXG4gIGxldCBjbG9zZWQ6YW55W10gPSBbXTtcclxuICBzdGFydE5vZGUuZ1Njb3JlID0gMDtcclxuICBzdGFydE5vZGUuZlNjb3JlID0gc3RhcnROb2RlLmdTY29yZSArIGgoc3RhcnROb2RlLCBmaW5pc2hOb2RlKVxyXG4gIG9wZW4ucHVzaChzdGFydE5vZGUpO1xyXG5cclxuICAvLyBmb3IgZWFjaCBub2RlLCB3aGljaCBub2RlIGlzIGNhbiBtb3N0IGVmZmljaWVudGx5IGJlIHJlYWNoZWQgZnJvbVxyXG4gIC8vIGlmIGEgbm9kZSBjYW4gYmUgcmVhY2hlZCBmcm9tIG1hbnkgbm9kZXMsIGNhbWVGcm9tIHdpbGwgZXZlbnRpYWxseVxyXG4gIC8vIGNvbnRhaW4gdGhlIG1vc3QgZWZmaWNpZW50IHByZXZpb3VzIHN0ZXBcclxuICBsZXQgZnJvbSA9IG5ldyBNYXAoKTtcclxuICAvLyBGb3IgZWFjaCBub2RlLCB0aGUgY29zdCBvZiBnZXR0aW5nIGZyb20gdGhlIHN0YXJ0IG5vZGUgdG8gdGhhdCBub2RlLlxyXG4gIHdoaWxlKG9wZW4pIHtcclxuICAgIGxldCBjdXJyZW50OmFueSA9IGdldE1pbkZTY29yZShvcGVuKTtcclxuICAgIGlmKCFjdXJyZW50KSByZXR1cm47XHJcbiAgICBpZihjdXJyZW50LnggPT09IGZpbmlzaE5vZGUueCAmJiBjdXJyZW50LnkgPT09IGZpbmlzaE5vZGUueSkge1xyXG4gICAgICAvLyBjdXJyZW50Tm9kZSBpcyBhIGdvYWxcclxuICAgICAgcmV0dXJuIHJlY29uc3RydWN0UGF0aChmcm9tLCBjdXJyZW50KTtcclxuICAgIH1cclxuICAgIG9wZW4gPSBkZWxldGVPYmplY3RGcm9tQXJyYXkoY3VycmVudCwgb3Blbik7XHJcbiAgICBjbG9zZWQucHVzaChjdXJyZW50KTtcclxuICAgIGZvcihsZXQgbmVpZ2hib3Igb2YgdW5jbG9zZWROZWlnYm9ycyhjdXJyZW50LCBjbG9zZWQpKSB7XHJcbiAgICAgIGxldCBkaXN0YW5jZSA9IGdldE5laWdoYm9yRGlzdGFuY2UoY3VycmVudCwgbmVpZ2hib3IpO1xyXG4gICAgICBsZXQgdGVtcEcgPSBjdXJyZW50LmdTY29yZSArIGRpc3RhbmNlO1xyXG4gICAgICBpZighaXNPYmplY3RJbkFycmF5KG5laWdoYm9yLCBvcGVuKSB8fCB0ZW1wRyA8IG5laWdoYm9yLmdTY29yZSkge1xyXG4gICAgICAgIGZyb20uc2V0KG5laWdoYm9yLCBjdXJyZW50KTtcclxuICAgICAgICBpZighbmVpZ2hib3IpIHJldHVybjtcclxuICAgICAgICBuZWlnaGJvci5nU2NvcmUgPSB0ZW1wRztcclxuICAgICAgICBuZWlnaGJvci5mU2NvcmUgPSBuZWlnaGJvci5nU2NvcmUgKyBoKG5laWdoYm9yLCBmaW5pc2hOb2RlKTtcclxuICAgICAgfVxyXG4gICAgICBpZighaXNPYmplY3RJbkFycmF5KG5laWdoYm9yLCBvcGVuKSkgeyAvLyBjcmVhdGUgZnVuY3Rpb25cclxuICAgICAgICBsZXQgbm9kZU5laWdoYm9ycyA9IG5laWdoYm9ycyh1cGRhdGVkTWFwLCBuZWlnaGJvcik7XHJcbiAgICAgICAgbmVpZ2hib3IubmVpZ2hib3JzID0gbm9kZU5laWdoYm9ycztcclxuICAgICAgICBvcGVuLnB1c2gobmVpZ2hib3IpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiAwOyAvLyBmYWlsdXJlXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBoID0gKHN0YXJ0Tm9kZTphbnksIGZpbmlzaE5vZGU6YW55KSA9PiB7XHJcbi8vZnVuY3Rpb24gaGV1cmlzdGljKG5vZGUpID1cclxuICAvLyBkeCA9IGFicyhub2RlLnggLSBnb2FsLngpXHJcbiAgLy8gZHkgPSBhYnMobm9kZS55IC0gZ29hbC55KVxyXG4gIC8vIHJldHVybiBEICogKGR4ICsgZHkpICsgKEQyIC0gMiAqIEQpICogbWluKGR4LCBkeSlcclxuICBsZXQgRCA9IDEwOyAvLyBjb3N0IG9mIG1vdmluZyBob3Jpem9udGFsbHlcclxuICBsZXQgRDIgPSAxNDsgLy8gY29zdCBvZiBtb3ZpbmcgZGlhZ29uYWxseVxyXG4gIGxldCBkeCA9IE1hdGguYWJzKHN0YXJ0Tm9kZS54IC0gZmluaXNoTm9kZS54KTtcclxuICBsZXQgZHkgPSBNYXRoLmFicyhzdGFydE5vZGUueSAtIGZpbmlzaE5vZGUueSk7XHJcbiAgcmV0dXJuIEQgKiAoZHggKyBkeSkgKyAoRDIgLSAyICogRCkgKiBNYXRoLm1pbihkeCwgZHkpO1xyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCByZWNvbnN0cnVjdFBhdGggPSAoZnJvbTphbnksIGN1cnJlbnQ6YW55KSA9PiB7XHJcbiAgLy8gZnVuY3Rpb24gcmVjb25zdHJ1Y3RfcGF0aChjYW1lRnJvbSwgY3VycmVudClcclxuICAvLyAgIHRvdGFsX3BhdGggOj0gW2N1cnJlbnRdXHJcbiAgLy8gICB3aGlsZSBjdXJyZW50IGluIGNhbWVGcm9tLktleXM6XHJcbiAgLy8gICAgICAgY3VycmVudCA6PSBjYW1lRnJvbVtjdXJyZW50XVxyXG4gIC8vICAgICAgIHRvdGFsX3BhdGguYXBwZW5kKGN1cnJlbnQpXHJcbiAgLy8gICByZXR1cm4gdG90YWxfcGF0aFxyXG4gIGxldCByZXZlcnNlUGF0aDphbnlbXSA9IFtjdXJyZW50XTtcclxuICBsZXQgdG90YWxQYXRoOmFueVtdID0gW107XHJcbiAgd2hpbGUoaXNPYmplY3RJbk1hcEtleXMoY3VycmVudCwgZnJvbSkpIHtcclxuICAgIGN1cnJlbnQgPSBmcm9tLmdldChjdXJyZW50KTtcclxuICAgIHJldmVyc2VQYXRoLnB1c2goY3VycmVudCk7XHJcbiAgfVxyXG4gIGZvcihsZXQgaSA9IHJldmVyc2VQYXRoLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICB0b3RhbFBhdGgucHVzaChyZXZlcnNlUGF0aFtpXSk7XHJcbiAgfVxyXG4gIHJldHVybiB0b3RhbFBhdGg7XHJcbn1cclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vdHlwZXMvVW5pdCc7XHJcbmltcG9ydCB7Z2V0Tm9kZUZyb21NYXB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL25vZGUvZ2V0L2Zyb21NYXAnO1xyXG5pbXBvcnQge2luaXRpYWxNYXB9IGZyb20gJy4uLy4uLy4uL21hcC9jcmVhdGVNYXAvaW5pdGlhbE1hcCc7XHJcbmltcG9ydCB7dXBkYXRlVW5pdH0gZnJvbSAnLi91cGRhdGVVbml0JztcclxuaW1wb3J0IHthU3Rhcn0gZnJvbSAnLi4vLi4vLi4vcGF0aC9hU3Rhci9BU3Rhcic7XHJcblxyXG5leHBvcnQgY29uc3QgbW92ZVRvID0gKHVuaXQ6VW5pdCwgbW92ZVRvWDpudW1iZXIsIG1vdmVUb1k6bnVtYmVyKTp2b2lkID0+IHtcclxuICBpZih1bml0LmlzTW92aW5nKSB7XHJcbiAgICB1bml0LnNldFVuaXRUb1B1cnN1ZShudWxsKTtcclxuICAgIGxldCBmaW5pc2hOb2RlID0gZ2V0Tm9kZUZyb21NYXAobW92ZVRvWCwgbW92ZVRvWSk7XHJcbiAgICB1bml0LmFzc2lnbk1vdmVUb1Bvc2l0aW9uKGZpbmlzaE5vZGUueCwgZmluaXNoTm9kZS55KTtcclxuICB9IGVsc2Uge1xyXG4gICAgdW5pdC5zZXRVbml0VG9QdXJzdWUobnVsbCk7XHJcbiAgICBsZXQgc3RhcnROb2RlID0gZ2V0Tm9kZUZyb21NYXAodW5pdC54LCB1bml0LnkpO1xyXG4gICAgbGV0IGZpbmlzaE5vZGUgPSBnZXROb2RlRnJvbU1hcChtb3ZlVG9YLCBtb3ZlVG9ZKTtcclxuICAgIGxldCBwYXRoOmFueSA9IGFTdGFyKGluaXRpYWxNYXAsIHN0YXJ0Tm9kZSwgZmluaXNoTm9kZSk7XHJcbiAgICB1bml0LmFzc2lnbk1vdmVUb1Bvc2l0aW9uKGZpbmlzaE5vZGUueCwgZmluaXNoTm9kZS55KTtcclxuICAgIHVwZGF0ZVVuaXQodW5pdCwgcGF0aCwgMCwgZmluaXNoTm9kZS54LCBmaW5pc2hOb2RlLnksIG51bGwsIHRydWUpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG93ZXIgZnJvbSAnLi9Qb3dlcic7XHJcbmV4cG9ydCBsZXQgcGxheWVyUG93ZXIgPSBuZXcgUG93ZXI7XHJcbiIsImltcG9ydCBQb3dlciBmcm9tICcuL1Bvd2VyJztcclxuZXhwb3J0IGxldCBjb21wdXRlclBvd2VyID0gbmV3IFBvd2VyO1xyXG4iLCJpbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uL3VuaXRcIjtcclxuaW1wb3J0IHsgc2h1ZmZsZVVuaXRzIH0gZnJvbSBcIi4uL3NodWZmbGVcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRSYW5kb21Vbml0ID0gKHVuaXRzOiBVbml0W10pID0+IHtcclxuICAgIGxldCB1cGRhdGVkVW5pdHM6IFVuaXRbXSA9IE9iamVjdC5hc3NpZ24oW10sIHVuaXRzKTtcclxuICAgIGNvbnN0IHNodWZmbGVkVW5pdHM6IFVuaXRbXSA9IHNodWZmbGVVbml0cyh1cGRhdGVkVW5pdHMpO1xyXG4gICAgcmV0dXJuIHNodWZmbGVkVW5pdHNbMF07XHJcbn0iLCJpbXBvcnQge1xyXG4gICAgYXNzZXNzVnVsbmVyYWJpbGl0eVxyXG59IGZyb20gJy4vYXNzZXNzVnVsbmVyYWJpbGl0eSc7XHJcblxyXG5leHBvcnQge1xyXG4gICAgYXNzZXNzVnVsbmVyYWJpbGl0eVxyXG59IiwiZXhwb3J0IGxldCBjdXJyZW50Q29tbWFuZE51bWJlcjogbnVtYmVyO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ3VycmVudENvbW1hbmROdW1iZXIgPSAoKTogbnVtYmVyID0+IHsgXHJcbiAgICBsZXQgcmFuZG9tTnVtYmVyID0gTWF0aC5yYW5kb20oKTtcclxuICAgIGN1cnJlbnRDb21tYW5kTnVtYmVyID0gcmFuZG9tTnVtYmVyO1xyXG4gICAgcmV0dXJuIHJhbmRvbU51bWJlcjtcclxufSIsImltcG9ydCB7XHJcbiAgcm9zdGVySW1nV2lkdGgsXHJcbiAgcm9zdGVySW1nSGVpZ2h0XHJcbn0gZnJvbSAnLi9zZXR0aW5ncyc7XHJcblxyXG5leHBvcnQge1xyXG4gIHJvc3RlckltZ1dpZHRoLFxyXG4gIHJvc3RlckltZ0hlaWdodFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZGlzcGxheVJvc3RlclxyXG59IGZyb20gJy4vZGlzcGxheVJvc3Rlcic7XHJcbmltcG9ydCB7XHJcbiAgZGlzcGxheVJvc3RlclVuaXRzXHJcbn0gZnJvbSAnLi9kaXNwbGF5VW5pdHMnO1xyXG5pbXBvcnQge1xyXG4gIGRpc3BsYXlSb3N0ZXJUaXRsZVxyXG59IGZyb20gJy4vZGlzcGxheVRpdGxlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGlzcGxheVJvc3RlcixcclxuICBkaXNwbGF5Um9zdGVyVW5pdHMsXHJcbiAgZGlzcGxheVJvc3RlclRpdGxlXHJcbn1cclxuIiwiaW1wb3J0IHtzaWRlfSBmcm9tICcuLi9zaWRlcy9zaWRlJztcclxuXHJcbmV4cG9ydCBsZXQgcGxheWVyU3BlbnRHb2xkOm51bWJlciA9IDA7XHJcbmV4cG9ydCBsZXQgY29tcHV0ZXJTcGVudEdvbGQ6bnVtYmVyID0gMDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbmNyZWFzZVNwZW50R29sZCA9IChnb2xkOm51bWJlcikgPT4ge1xyXG4gIGlmKHNpZGUgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGNvbXB1dGVyU3BlbnRHb2xkICs9IGdvbGQ7XHJcbiAgfVxyXG4gIGVsc2UgaWYoc2lkZSA9PT0gJ3BsYXllcicpIHtcclxuICAgIHBsYXllclNwZW50R29sZCArPSBnb2xkO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGRlY3JlYXNlU3BlbnRHb2xkID0gKGdvbGQ6bnVtYmVyKSA9PiB7XHJcbiAgaWYoc2lkZSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgY29tcHV0ZXJTcGVudEdvbGQgLT0gZ29sZDtcclxuICB9XHJcbiAgZWxzZSBpZihzaWRlID09PSAncGxheWVyJykge1xyXG4gICAgcGxheWVyU3BlbnRHb2xkIC09IGdvbGQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBsZXQgc3RhcnRCYXR0bGVBdmFpbGFibGU6Ym9vbGVhbiA9IGZhbHNlO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc2FibGVTdGFydEJhdHRsZUJ1dHRvbiA9ICgpID0+IHtcclxuICBzdGFydEJhdHRsZUF2YWlsYWJsZSA9IGZhbHNlO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZW5hYmxlU3RhcnRCYXR0bGVCdXR0b24gPSAoKSA9PiB7XHJcbiAgc3RhcnRCYXR0bGVBdmFpbGFibGUgPSB0cnVlO1xyXG59XHJcbiIsImV4cG9ydCBsZXQgc2VsZWN0ZWRVbml0SW5Sb3N0ZXI6YW55ID0gbnVsbDtcclxuXHJcbmV4cG9ydCBjb25zdCBzZWxlY3RVbml0SW5Sb3N0ZXIgPSAodW5pdDphbnkpID0+IHtcclxuICBpZih1bml0KSB7XHJcbiAgICBzZWxlY3RlZFVuaXRJblJvc3RlciA9IHVuaXQ7XHJcbiAgfSBlbHNlIHtcclxuICAgIHNlbGVjdGVkVW5pdEluUm9zdGVyID0gbnVsbDtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBjaGFuZ2VUb3RhbEdvbGRcclxufSBmcm9tICcuL2JhdHRsZUluZm8nO1xyXG5pbXBvcnQge1xyXG4gIG9uQ2hvb3NlSW5mbyxcclxuICBkaXNwbGF5SW5mbyxcclxufSBmcm9tICcuL2luZm8nO1xyXG5cclxuXHJcbmV4cG9ydCB7XHJcbiAgb25DaG9vc2VJbmZvLFxyXG4gIGRpc3BsYXlJbmZvLFxyXG4gIGNoYW5nZVRvdGFsR29sZFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYXJteUxheW91dFdpZHRoLFxyXG4gIHRpdGxlSGVpZ2h0LFxyXG4gIHVuaXRSb3N0ZXJXaWR0aFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcblxyXG5leHBvcnQgY29uc3QgZ29sZEJveFN0YXJ0WDpudW1iZXIgPSBhcm15TGF5b3V0V2lkdGggKyB1bml0Um9zdGVyV2lkdGggKyAxMDA7XHJcbmV4cG9ydCBjb25zdCBnb2xkQm94U3RhcnRZOm51bWJlciA9IHRpdGxlSGVpZ2h0ICsgODA7XHJcbmV4cG9ydCBsZXQgc3RhcnRUb3RhbE1vbmV5VGl0bGVYOm51bWJlciA9IGdvbGRCb3hTdGFydFggKyA0MDtcclxuZXhwb3J0IGxldCBzdGFydFRvdGFsTW9uZXlUaXRsZVk6bnVtYmVyID0gZ29sZEJveFN0YXJ0WSAtIDIwO1xyXG5leHBvcnQgY29uc3QgYm94V2lkdGg6bnVtYmVyID0gNDA7XHJcbmV4cG9ydCBjb25zdCBib3hIZWlnaHQ6bnVtYmVyID0gNDA7XHJcbmV4cG9ydCBjb25zdCBnb2xkT3B0aW9uczphbnlbXSA9IFtcclxuICAyMDAsIDMwMCwgNDAwLCA2MDAsIDEwMDBcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCB1bml0SW5mb1RpdGxlWDpudW1iZXIgPSBhcm15TGF5b3V0V2lkdGggKyB1bml0Um9zdGVyV2lkdGggKyAxNzA7XHJcbmV4cG9ydCBjb25zdCB1bml0SW5mb1RpdGxlWTpudW1iZXIgPSB0aXRsZUhlaWdodCArIDYwO1xyXG5leHBvcnQgbGV0IHByb3BlcnR5U3RhcnRYOm51bWJlciA9IHVuaXRJbmZvVGl0bGVYIC0gMTAwO1xyXG5leHBvcnQgbGV0IHByb3BlcnR5U3RhcnRZOm51bWJlciA9IHVuaXRJbmZvVGl0bGVZICsgMzA7XHJcbmV4cG9ydCBsZXQgdmFsdWVTdGFydFg6bnVtYmVyID0gcHJvcGVydHlTdGFydFggKyAyMDA7XHJcbmV4cG9ydCBsZXQgdmFsdWVTdGFydFk6bnVtYmVyID0gdW5pdEluZm9UaXRsZVkgKyAzMDtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGFuZ2VZID0gKCkgPT4ge1xyXG4gIHByb3BlcnR5U3RhcnRZICs9IDMwO1xyXG4gIHZhbHVlU3RhcnRZICs9IDMwO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc2V0RGVmYXVsdCA9ICgpID0+IHtcclxuICBwcm9wZXJ0eVN0YXJ0WCA9IHVuaXRJbmZvVGl0bGVYIC0gMTAwO1xyXG4gIHByb3BlcnR5U3RhcnRZID0gdW5pdEluZm9UaXRsZVkgKyAzMDtcclxuICB2YWx1ZVN0YXJ0WCA9IHByb3BlcnR5U3RhcnRYICsgMjAwO1xyXG4gIHZhbHVlU3RhcnRZID0gdW5pdEluZm9UaXRsZVkgKyAzMDtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIG9uQ2hvb3NlUGxheWVyLFxyXG4gIG9uQ2hvb3NlQ29tcHV0ZXJcclxufSBmcm9tICcuL2Nob29zZSc7XHJcbmltcG9ydCB7XHJcbiAgZGlzcGxheVRpdGxlXHJcbn0gZnJvbSAnLi9kaXNwbGF5JztcclxuaW1wb3J0IHtcclxuXHJcbn0gZnJvbSAnLi91cHBlckxheW91dFNldHRpbmdzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGlzcGxheVRpdGxlLFxyXG4gIG9uQ2hvb3NlUGxheWVyLFxyXG4gIG9uQ2hvb3NlQ29tcHV0ZXJcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIHBsYXllclN3aXRjaGVyWDAsXHJcbiAgcGxheWVyU3dpdGNoZXJYMSxcclxuICBwbGF5ZXJTd2l0Y2hlclkwLFxyXG4gIHBsYXllclN3aXRjaGVyWTEsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlclgwLFxyXG4gIGNvbXB1dGVyU3dpdGNoZXJYMSxcclxuICBjb21wdXRlclN3aXRjaGVyWTAsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlclkxLFxyXG4gIHBsYXllclN3aXRjaGVyV2lkdGgsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlcldpZHRoLFxyXG4gIGdvbGRYLFxyXG4gIGdvbGRZXHJcbn0gZnJvbSAnLi9zZXR0aW5ncyc7XHJcblxyXG5leHBvcnQge1xyXG4gIHBsYXllclN3aXRjaGVyWDAsXHJcbiAgcGxheWVyU3dpdGNoZXJYMSxcclxuICBwbGF5ZXJTd2l0Y2hlclkwLFxyXG4gIHBsYXllclN3aXRjaGVyWTEsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlclgwLFxyXG4gIGNvbXB1dGVyU3dpdGNoZXJYMSxcclxuICBjb21wdXRlclN3aXRjaGVyWTAsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlclkxLFxyXG4gIHBsYXllclN3aXRjaGVyV2lkdGgsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlcldpZHRoLFxyXG4gIGdvbGRYLFxyXG4gIGdvbGRZXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBzdGFydEJhdHRsZUJ1dHRvblgsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25ZLFxyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uV2lkdGgsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25IZWlnaHQsXHJcbiAgc3RhcnRCYXR0bGVUZXh0WCxcclxuICBzdGFydEJhdHRsZVRleHRZXHJcbn0gZnJvbSAnLi9sYXlvdXRTZXR0aW5ncyc7XHJcblxyXG5leHBvcnQge1xyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uWCxcclxuICBzdGFydEJhdHRsZUJ1dHRvblksXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25XaWR0aCxcclxuICBzdGFydEJhdHRsZUJ1dHRvbkhlaWdodCxcclxuICBzdGFydEJhdHRsZVRleHRYLFxyXG4gIHN0YXJ0QmF0dGxlVGV4dFlcclxufVxyXG4iLCJpbXBvcnQgeyBhdXhpbGlhcnlDYW52YXMgfSBmcm9tICcuLi8uLi9jb25maWcvY2FudmFzJztcclxuaW1wb3J0IHsgYXV4aWxpYXJ5Q3R4IH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQge1xyXG4gIE1BUF9XSURUSCxcclxuICBNQVBfSEVJR0hULFxyXG4gIGdyaWRTaXplXHJcbn0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHtcclxuICBnZXROb2RlRnJvbU1hcCxcclxuICBkcmF3QmFja2dyb3VuZFxyXG59IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHtvbkNob29zZVVuaXR9IGZyb20gJy4uLy4uL3VuaXQnO1xyXG5pbXBvcnQge1xyXG4gIHVuaXRzLFxyXG4gIGNvbXB1dGVyVW5pdHNcclxufSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHtcclxuICBhdHRhY2tFbmVteSxcclxuICBtb3ZlVG9cclxufSBmcm9tICcuLi8uLi91bml0L21vdmVtZW50JztcclxuaW1wb3J0IHsgY3VycmVudGx5Q2hvc2VuVW5pdCB9IGZyb20gJy4uLy4uL3N0b3JlL3VuaXQvY3VycmVudGx5Q2hvc2VuVW5pdCc7XHJcbmltcG9ydCB7IGJhdHRsZU1vZGUgfSBmcm9tICcuLi8uLi9jb25maWcvZ2xvYmFsL2dsb2JhbENvbmZpZyc7XHJcbmltcG9ydCB7IGRpc3BsYXlVbml0SWNvbnMgfSBmcm9tICcuLi8uLi9VSS9iYXR0bGVVSS91bml0UGFuZWwvZGlzcGxheS9kaXNwbGF5VW5pdEljb25zJztcclxuaW1wb3J0IHsgYmF0dGxlTGlzdGVuZXIsIGlzQmF0dGxlRW5kIH0gZnJvbSAnLi4vLi4vZ2FtZUxvb3AnO1xyXG5pbXBvcnQgeyByZWRyYXdQbGF5ZXJVbml0cyB9IGZyb20gJy4uLy4uL3VuaXQvZHJhdy9kcmF3VW5pdCc7XHJcbmltcG9ydCB7IGRyYXdDbGlja2VkSWNvbiB9IGZyb20gJy4uLy4uL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2NsaWNrSWNvbic7XHJcbmltcG9ydCB7IGNsZWFyUGF0aCB9IGZyb20gJy4uLy4uL3BhdGgvZHJhdy9kcmF3UGF0aCc7XHJcbmltcG9ydCB7IGNvbXB1dGVyTW92ZW1lbnQgfSBmcm9tICcuLi8uLi9BSS9zdHJhdGVneU1vZHVsZS9jb250cm9sVW5pdC9jb21wdXRlckFjdGlvbic7XHJcblxyXG5leHBvcnQgY29uc3QgbGF1bmNoQmF0dGxlID0gKCkgPT4ge1xyXG4gIGF1eGlsaWFyeUNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCAoZTphbnkpID0+IHtcclxuICAgIGxldCBtb3VzZVggPSBlLm9mZnNldFg7IC8vIGdldCBYXHJcbiAgICBsZXQgbW91c2VZID0gZS5vZmZzZXRZOyAvLyBnZXQgWVxyXG4gICAgaWYoY3VycmVudGx5Q2hvc2VuVW5pdCkge1xyXG4gICAgICBsZXQgcG9pbnRlZFVuaXQgPSBudWxsO1xyXG4gICAgICBmb3IobGV0IHVuaXQgb2YgY29tcHV0ZXJVbml0cykge1xyXG4gICAgICAgIGxldCBmaW5pc2hYID0gdW5pdC54ICsgZ3JpZFNpemU7XHJcbiAgICAgICAgbGV0IGZpbmlzaFkgPSB1bml0LnkgKyBncmlkU2l6ZTtcclxuICAgICAgICBpZigobW91c2VYID49IHVuaXQueCAmJiBtb3VzZVggPCBmaW5pc2hYKSAmJiAobW91c2VZID49IHVuaXQueSAmJiBtb3VzZVkgPCBmaW5pc2hZKSkge1xyXG4gICAgICAgICAgcG9pbnRlZFVuaXQgPSB1bml0O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgaWYocG9pbnRlZFVuaXQgJiYgcG9pbnRlZFVuaXQuaXNWaXNpYmxlKSB7XHJcbiAgICAgICAgYXV4aWxpYXJ5Q3R4LmZpbGxTdHlsZSA9ICcjMDAwJztcclxuICAgICAgICBhdXhpbGlhcnlDdHguZm9udCA9IFwiMTRweCBBcmlhbFwiO1xyXG4gICAgICAgIGF1eGlsaWFyeUN0eC5maWxsVGV4dChcIkF0dGFja1wiLCBwb2ludGVkVW5pdC54LCBwb2ludGVkVW5pdC55ICsgZ3JpZFNpemUgLyAyKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBhdXhpbGlhcnlDdHguY2xlYXJSZWN0KDAsIDAsIE1BUF9XSURUSCwgTUFQX0hFSUdIVCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgYXV4aWxpYXJ5Q2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6YW55KSA9PiB7XHJcbiAgICBsZXQgeCA9IGUub2Zmc2V0WDsgLy8gZ2V0IFhcclxuICAgIGxldCB5ID0gZS5vZmZzZXRZOyAvLyBnZXQgWVxyXG4gICAgb25DaG9vc2VVbml0KHVuaXRzLCB4LCB5KTtcclxuICAgIHJlZHJhd1BsYXllclVuaXRzKCk7XHJcbiAgICBkaXNwbGF5VW5pdEljb25zKCk7XHJcbiAgICBjbGVhclBhdGgoKTtcclxuICB9KTtcclxuXHJcbiAgYXV4aWxpYXJ5Q2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgKGU6YW55KSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBsZXQgeCA9IGUub2Zmc2V0WDsgLy8gZ2V0IFhcclxuICAgIGxldCB5ID0gZS5vZmZzZXRZOyAvLyBnZXQgWVxyXG4gICAgaWYoY3VycmVudGx5Q2hvc2VuVW5pdCkge1xyXG4gICAgICBsZXQgcHVyc3VlZFVuaXQ6YW55ID0gbnVsbDtcclxuICAgICAgZm9yKGxldCBjb21wdXRlclVuaXQgb2YgY29tcHV0ZXJVbml0cykge1xyXG4gICAgICAgIGxldCBib3R0b21SaWdodFggPSBjb21wdXRlclVuaXQueCArIGdyaWRTaXplO1xyXG4gICAgICAgIGxldCBib3R0b21SaWdodFkgPSBjb21wdXRlclVuaXQueSArIGdyaWRTaXplO1xyXG4gICAgICAgIGlmKHggPj0gY29tcHV0ZXJVbml0LnggJiYgeCA8IGJvdHRvbVJpZ2h0WCAmJiB5ID49IGNvbXB1dGVyVW5pdC55ICYmIHkgPCBib3R0b21SaWdodFkpIHtcclxuICAgICAgICAgIHB1cnN1ZWRVbml0ID0gY29tcHV0ZXJVbml0O1xyXG4gICAgICAgIH1cclxuICAgICAgfSAvLyBmb3IgY29tcHV0ZXIgdW5pdHNcclxuICAgICAgaWYocHVyc3VlZFVuaXQgJiYgcHVyc3VlZFVuaXQuaXNWaXNpYmxlKSB7XHJcbiAgICAgICAgYXR0YWNrRW5lbXkoY3VycmVudGx5Q2hvc2VuVW5pdCwgcHVyc3VlZFVuaXQpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG1vdmVUbyhjdXJyZW50bHlDaG9zZW5Vbml0LCB4LCB5KTtcclxuICAgICAgICBkcmF3Q2xpY2tlZEljb24oeCwgeSk7XHJcbiAgICAgIH1cclxuICAgICAgY2xlYXJQYXRoKCk7XHJcbiAgICB9XHJcbiAgfSk7IC8vIG9uIGNvbnRleHRcclxuICBkcmF3QmFja2dyb3VuZCgnLi9zcmMvaW1nL3RlcnJhaW4vdGVycmFpbi5wbmcnKTtcclxuICBkaXNwbGF5VW5pdEljb25zKCk7XHJcbiAgYmF0dGxlTGlzdGVuZXIoKTtcclxuICBjb21wdXRlck1vdmVtZW50KCk7XHJcbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgaXNCYXR0bGVFbmQoKTtcclxuICB9LCAxNTAwMCk7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbiIsIi8vIGxvYWQgaW1hZ2VcclxuZXhwb3J0IGNvbnN0IGxvYWRJbWFnZSA9IChpbWdQYXRoOiBzdHJpbmcsIGNhbGxiYWNrOmFueSkgPT4ge1xyXG4gIGxldCBpbWcgPSBuZXcgSW1hZ2U7XHJcbiAgaW1nLm9ubG9hZCA9ICgpID0+IHtcclxuICAgIGNhbGxiYWNrKG51bGwsIGltZyk7XHJcbiAgfVxyXG4gIGltZy5vbmVycm9yID0gKCkgPT4ge1xyXG4gICAgbGV0IG1zZyA9ICdDYW5ub3QgbG9hZCB0aGUgaW1hZ2UgYXQgJyArIGltZ1BhdGg7XHJcbiAgICBjYWxsYmFjayhuZXcgRXJyb3IobXNnKSk7XHJcbiAgfVxyXG4gIGltZy5zcmMgPSBpbWdQYXRoO1xyXG59XHJcbiIsImV4cG9ydCBjb25zdCBkZWxldGVPYmplY3RGcm9tQXJyYXkgPSAob2JqZWN0OmFueSwgYXJyOmFueVtdKTphbnlbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRBcnIgPSBhcnIuZmlsdGVyKChlbCkgPT4ge1xyXG4gICAgaWYoZWwueCA9PT0gb2JqZWN0LnggJiYgZWwueSA9PT0gb2JqZWN0LnkpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIHVwZGF0ZWRBcnI7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpc09iamVjdEluQXJyYXkgPSAob2JqZWN0OmFueSwgYXJyOmFueVtdKTpib29sZWFuID0+IHtcclxuICBpZihhcnIubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IG5vZGUgb2YgYXJyKSB7XHJcbiAgICAgIGlmKG9iamVjdC54ID09PSBub2RlLnggJiYgb2JqZWN0LnkgPT09IG5vZGUueSkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGlzT2JqZWN0RW1wdHkgPSAob2JqOmFueSk6Ym9vbGVhbiA9PiB7XHJcbiAgbGV0IGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcclxuICAvLyBudWxsIGFuZCB1bmRlZmluZWQgYXJlIFwiZW1wdHlcIlxyXG4gIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIHRydWU7XHJcblxyXG4gIC8vIEFzc3VtZSBpZiBpdCBoYXMgYSBsZW5ndGggcHJvcGVydHkgd2l0aCBhIG5vbi16ZXJvIHZhbHVlXHJcbiAgLy8gdGhhdCB0aGF0IHByb3BlcnR5IGlzIGNvcnJlY3QuXHJcbiAgaWYgKG9iai5sZW5ndGggPiAwKSAgICByZXR1cm4gZmFsc2U7XHJcbiAgaWYgKG9iai5sZW5ndGggPT09IDApICByZXR1cm4gdHJ1ZTtcclxuXHJcbiAgLy8gSWYgaXQgaXNuJ3QgYW4gb2JqZWN0IGF0IHRoaXMgcG9pbnRcclxuICAvLyBpdCBpcyBlbXB0eSwgYnV0IGl0IGNhbid0IGJlIGFueXRoaW5nICpidXQqIGVtcHR5XHJcbiAgLy8gSXMgaXQgZW1wdHk/ICBEZXBlbmRzIG9uIHlvdXIgYXBwbGljYXRpb24uXHJcbiAgaWYgKHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIpIHJldHVybiB0cnVlO1xyXG5cclxuICAvLyBPdGhlcndpc2UsIGRvZXMgaXQgaGF2ZSBhbnkgcHJvcGVydGllcyBvZiBpdHMgb3duP1xyXG4gIC8vIE5vdGUgdGhhdCB0aGlzIGRvZXNuJ3QgaGFuZGxlXHJcbiAgLy8gdG9TdHJpbmcgYW5kIHZhbHVlT2YgZW51bWVyYXRpb24gYnVncyBpbiBJRSA8IDlcclxuICBmb3IgKGxldCBrZXkgaW4gb2JqKSB7XHJcbiAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICByZXR1cm4gdHJ1ZTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGZpbmRDbG9zZXN0VW5pdHNUb1RoZU5vZGVDZW50ZXIsXHJcbiAgZ2V0Q2xvc2VzdE5vZGVUb1VuaXQsXHJcbiAgZ2V0QmVzdFVuaXRzQnlQcm9wZXJ0eVxyXG59IGZyb20gJy4vdW5pdEFjdGlvbnMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBmaW5kQ2xvc2VzdFVuaXRzVG9UaGVOb2RlQ2VudGVyLFxyXG4gIGdldENsb3Nlc3ROb2RlVG9Vbml0LFxyXG4gIGdldEJlc3RVbml0c0J5UHJvcGVydHlcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIE1BUF9IRUlHSFQsXHJcbiAgZ3JpZFNpemUsXHJcbiAgTUFQX1dJRFRIXHJcbn0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IE1hcE5vZGUgZnJvbSAnLi9NYXBOb2RlJztcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVOb2RlcyA9ICgpOiBNYXBOb2RlW10gPT4ge1xyXG4gIGxldCBtYXA6IE1hcE5vZGVbXSA9IFtdO1xyXG4gIGxldCBpZCA9IDA7XHJcbiAgZm9yKGxldCB4ID0gMDsgeCA8IE1BUF9XSURUSDsgeCArPSBncmlkU2l6ZSkge1xyXG4gICAgZm9yKGxldCB5ID0gMDsgeSA8IE1BUF9IRUlHSFQ7IHkgKz0gZ3JpZFNpemUpIHtcclxuICAgICAgbGV0IG1hcE5vZGU6IE1hcE5vZGUgPSBuZXcgTWFwTm9kZShpZCwgeCwgeSk7XHJcbiAgICAgIG1hcC5wdXNoKG1hcE5vZGUpO1xyXG4gICAgICBpZCsrO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gbWFwO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlU2VhcmNoTWFwID0gKG1hcDogTWFwTm9kZVtdKSA9PiB7XHJcbiAgbGV0IHNlYXJjaE1hcDogYW55ID0ge307XHJcbiAgbGV0IGN1cnJlbnRYOiBudW1iZXIgPSAwO1xyXG4gIGxldCBjdXJyZW50WTogTWFwTm9kZVtdID0gW107XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IG1hcC5sZW5ndGg7ICsraSkge1xyXG4gICAgY3VycmVudFkucHVzaChtYXBbaV0pO1xyXG4gICAgaWYoaSA8PSBtYXAubGVuZ3RoIC0gMiAmJiBtYXBbaSArIDFdLnggIT09IGN1cnJlbnRYKSB7XHJcbiAgICAgIHNlYXJjaE1hcFtjdXJyZW50WF0gPSBjdXJyZW50WTtcclxuICAgICAgY3VycmVudFggKz0gZ3JpZFNpemU7XHJcbiAgICAgIGN1cnJlbnRZID0gW107XHJcbiAgICB9XHJcbiAgfVxyXG4gIHNlYXJjaE1hcFtjdXJyZW50WF0gPSBjdXJyZW50WTtcclxuICByZXR1cm4gc2VhcmNoTWFwO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgc2h1ZmZsZU5vZGVzXHJcbn0gZnJvbSAnLi9zaHVmZmxlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgc2h1ZmZsZU5vZGVzXHJcbn1cclxuIiwiaW1wb3J0IHtncmlkU2l6ZX0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuaW1wb3J0IHt1bml0c30gZnJvbSAnLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0cyc7XHJcblxyXG5leHBvcnQgY29uc3QgYWRkVW5pdEludG9BcnJheSA9ICh1bml0OlVuaXQsIGFycjphbnlbXSk6YW55W10gPT4ge1xyXG4gIGxldCB1cGRhdGVkQXJyID0gT2JqZWN0LmFzc2lnbihbXSwgYXJyKTtcclxuICBpZighaXNVbml0SW5BcnJheSh1bml0LCBhcnIpKSB7XHJcbiAgICB1cGRhdGVkQXJyLnB1c2godW5pdCk7XHJcbiAgfVxyXG4gIHJldHVybiB1cGRhdGVkQXJyO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGVsZXRlVW5pdEZyb21BcnJheSA9ICh1bml0OlVuaXQsIGFycjphbnlbXSk6YW55W10gPT4ge1xyXG4gIGxldCB1cGRhdGVkQXJyOlVuaXRbXSA9IGFyci5maWx0ZXIoKGVsKSA9PiB7XHJcbiAgICBpZihlbC5pZCA9PT0gdW5pdC5pZCkge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9KTtcclxuICByZXR1cm4gdXBkYXRlZEFycjtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGRlbGV0ZVVuaXRGcm9tQXJteSA9ICh1bml0OmFueSwgYXJyOmFueVtdKTphbnlbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRBcnIgPSBhcnIuZmlsdGVyKChlbCkgPT4ge1xyXG4gICAgaWYoZWwuYXJteVBvc2l0aW9uLnggPT09IHVuaXQuYXJteVBvc2l0aW9uLnggJiYgZWwuYXJteVBvc2l0aW9uLnkgPT09IHVuaXQuYXJteVBvc2l0aW9uLnkpIHtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIHVwZGF0ZWRBcnI7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMgPSAodW5pdDE6VW5pdCwgdW5pdDI6VW5pdCk6bnVtYmVyID0+IHtcclxuICBsZXQgdW5pdDFYOm51bWJlciA9IHVuaXQxLmN1cnJlbnROb2RlLng7XHJcbiAgbGV0IHVuaXQxWTpudW1iZXIgPSB1bml0MS5jdXJyZW50Tm9kZS55O1xyXG4gIGxldCB1bml0Mlg6bnVtYmVyID0gdW5pdDIuY3VycmVudE5vZGUueDtcclxuICBsZXQgdW5pdDJZOm51bWJlciA9IHVuaXQyLmN1cnJlbnROb2RlLnk7XHJcbiAgbGV0IGRpc3RhbmNlWDpudW1iZXIgPSBNYXRoLmFicyh1bml0MVggLSB1bml0MlgpIC8gZ3JpZFNpemU7XHJcbiAgbGV0IGRpc3RhbmNlWTpudW1iZXIgPSBNYXRoLmFicyh1bml0MVkgLSB1bml0MlkpIC8gZ3JpZFNpemU7XHJcbiAgbGV0IGRpc3RhbmNlOm51bWJlciA9IGRpc3RhbmNlWCArIGRpc3RhbmNlWTtcclxuICByZXR1cm4gZGlzdGFuY2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBpc1VuaXRJbkFycmF5ID0gKGNoZWNrZWRVbml0OlVuaXQsIGFycjphbnlbXSk6Ym9vbGVhbiA9PiB7XHJcbiAgaWYoYXJyLmxlbmd0aCAhPT0gMCkge1xyXG4gICAgZm9yKGxldCB1bml0IG9mIGFycikge1xyXG4gICAgICBpZih1bml0LmlkID09PSBjaGVja2VkVW5pdC5pZCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGdldFVuaXRCeUlkID0gKGlkOm51bWJlciwgYXJyOlVuaXRbXSA9IHVuaXRzKTpVbml0ID0+IHtcclxuICBmb3IobGV0IHVuaXQgb2YgYXJyKSB7XHJcbiAgICBpZihpZCA9PT0gdW5pdC5pZCkge1xyXG4gICAgICByZXR1cm4gdW5pdDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRVbml0UG9zaXRpb25JbkFycmF5ID0gKHVuaXRJZDogbnVtYmVyLCBhcnI6IFVuaXRbXSk6IG51bWJlciA9PiB7XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7ICsraSkge1xyXG4gICAgaWYoYXJyW2ldLmlkID09PSB1bml0SWQpIHtcclxuICAgICAgcmV0dXJuIGk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBudWxsO1xyXG59XHJcbiIsImltcG9ydCB7Y2hvb3NlVW5pdFR5cGV9IGZyb20gJy4vY2hvb3NlVW5pdFR5cGUnO1xyXG5pbXBvcnQge29uQ2hvb3NlVW5pdH0gZnJvbSAnLi9vbkNob29zZVVuaXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBjaG9vc2VVbml0VHlwZSxcclxuICBvbkNob29zZVVuaXRcclxufVxyXG4iLCJpbXBvcnQgQXJjaGVycyBmcm9tICcuL0FyY2hlcnMnO1xyXG5pbXBvcnQgSGVhdnlDYXZhbHJ5IGZyb20gJy4vSGVhdnlDYXZhbHJ5JztcclxuaW1wb3J0IEhlYXZ5SW5mYW50cnkgZnJvbSAnLi9IZWF2eUluZmFudHJ5JztcclxuaW1wb3J0IEhvcGxpdGVzIGZyb20gJy4vSG9wbGl0ZXMnO1xyXG5pbXBvcnQgTGlnaHRDYXZhbHJ5IGZyb20gJy4vTGlnaHRDYXZhbHJ5JztcclxuaW1wb3J0IExpZ2h0SW5mYW50cnkgZnJvbSAnLi9MaWdodEluZmFudHJ5JztcclxuaW1wb3J0IE1pbGl0aWEgZnJvbSAnLi9NaWxpdGlhJztcclxuaW1wb3J0IFBlbHRhc3RzIGZyb20gJy4vUGVsdGFzdHMnO1xyXG5pbXBvcnQgUGlrZW1lbiBmcm9tICcuL1Bpa2VtZW4nO1xyXG5pbXBvcnQgU2NvdXRzIGZyb20gJy4vU2NvdXRzJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi9Vbml0JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgQXJjaGVycyxcclxuICBIZWF2eUluZmFudHJ5LFxyXG4gIEhlYXZ5Q2F2YWxyeSxcclxuICBIb3BsaXRlcyxcclxuICBMaWdodEluZmFudHJ5LFxyXG4gIExpZ2h0Q2F2YWxyeSxcclxuICBNaWxpdGlhLFxyXG4gIFBlbHRhc3RzLFxyXG4gIFBpa2VtZW4sXHJcbiAgU2NvdXRzLFxyXG4gIFVuaXRcclxufVxyXG4iLCJpbXBvcnQgeyBhZGRUb1VuaXRzIH0gZnJvbSAnLi4vLi4vc3RvcmUvdW5pdC91bml0cyc7XHJcbmltcG9ydCB7IGluY1VuaXRJZCB9IGZyb20gJy4uLy4uL3N0b3JlL3VuaXQvdW5pdElkJztcclxuaW1wb3J0IHsgZHJhd1VuaXQgfSBmcm9tICcuLi9kcmF3L2RyYXdVbml0JztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vdHlwZXMvVW5pdCc7XHJcbmltcG9ydCB7Y2hvb3NlVW5pdFR5cGV9IGZyb20gJy4uL2Nob29zZSc7XHJcblxyXG5leHBvcnQgbGV0IGNyZWF0ZVVuaXQgPSAodHlwZTpzdHJpbmcsIHg6bnVtYmVyLCB5Om51bWJlciwgY29udHJvbEJ5OnN0cmluZyk6IFVuaXQgPT4ge1xyXG4gIGlmKGNvbnRyb2xCeSA9PT0gJ3BsYXllcicgfHwgY29udHJvbEJ5ID09PSAnY29tcHV0ZXInKSB7XHJcbiAgICBsZXQgdW5pdDpVbml0O1xyXG4gICAgdW5pdCA9IGNob29zZVVuaXRUeXBlKHR5cGUsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgICBhZGRUb1VuaXRzKHVuaXQpO1xyXG4gICAgZHJhd1VuaXQodW5pdCk7XHJcbiAgICBpbmNVbml0SWQoKTtcclxuICAgIHJldHVybiB1bml0O1xyXG4gIH0gZWxzZSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbml0IGNhbm5vdCBiZSBjb250cm9sbGVkIGJ5IFwiICsgY29udHJvbEJ5KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVEZWZhdWx0VW5pdCA9ICh0eXBlOnN0cmluZywgeDpudW1iZXIsIHk6bnVtYmVyLCBjb250cm9sQnk6c3RyaW5nKTogVW5pdCA9PiB7XHJcbiAgaWYoY29udHJvbEJ5ID09PSAncGxheWVyJyB8fCBjb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGxldCB1bml0OlVuaXQ7XHJcbiAgICB1bml0ID0gY2hvb3NlVW5pdFR5cGUodHlwZSwgeCwgeSwgY29udHJvbEJ5KTtcclxuICAgIHJldHVybiB1bml0O1xyXG4gIH0gZWxzZSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbml0IGNhbm5vdCBiZSBjb250cm9sbGVkIGJ5IFwiICsgY29udHJvbEJ5KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgc3dvcmRJY29uSW1hZ2UsIHNwZWFySWNvbkltYWdlLCBzcGVhckFuZFNoaWVsZEljb25JbWFnZSwgc3dvcmRBbmRSb3VuZFNoaWVsZEljb25JbWFnZSB9IGZyb20gXCIuL3VuaXRJY29uSW1hZ2VzXCI7XHJcblxyXG5leHBvcnQgbGV0IHVuaXRUb0ljb25NYXA6YW55O1xyXG5cclxuZXhwb3J0IGNvbnN0IGZpbGxVbml0VG9JY29uTWFwID0gKCkgPT4ge1xyXG4gICAgdW5pdFRvSWNvbk1hcCA9IHtcclxuICAgICAgICAnQXJjaGVycyc6IHN3b3JkSWNvbkltYWdlLFxyXG4gICAgICAgICdIZWF2eUNhdmFscnknOiBzd29yZEljb25JbWFnZSxcclxuICAgICAgICAnSG9wbGl0ZXMnOiBzcGVhckFuZFNoaWVsZEljb25JbWFnZSxcclxuICAgICAgICAnTGlnaHRDYXZhbHJ5Jzogc3dvcmRJY29uSW1hZ2UsXHJcbiAgICAgICAgJ0xpZ2h0SW5mYW50cnknOiBzd29yZEljb25JbWFnZSxcclxuICAgICAgICAnSGVhdnlJbmZhbnRyeSc6IHN3b3JkQW5kUm91bmRTaGllbGRJY29uSW1hZ2UsXHJcbiAgICAgICAgJ01pbGl0aWEnOiBzd29yZEljb25JbWFnZSxcclxuICAgICAgICAnUGVsdGFzdHMnOiBzd29yZEljb25JbWFnZSxcclxuICAgICAgICAnUGlrZW1lbic6IHNwZWFySWNvbkltYWdlLFxyXG4gICAgICAgICdTY291dHMnOiBzd29yZEljb25JbWFnZVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgVU5JVF9JQ09OX0hFSUdIVCB9IGZyb20gXCIuLi9zZXR0aW5nc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGF0dHJpYnV0ZXNIZWlnaHQ6IG51bWJlciA9IDIwO1xyXG5leHBvcnQgY29uc3QgaGVhbHRoUG9pbnRzSGVpZ2h0OiBudW1iZXIgPSAxMDtcclxuZXhwb3J0IGNvbnN0IGljb25IZWlnaHQ6IG51bWJlciA9IFVOSVRfSUNPTl9IRUlHSFQgLSAoYXR0cmlidXRlc0hlaWdodCArIGhlYWx0aFBvaW50c0hlaWdodCk7XHJcbmV4cG9ydCBjb25zdCBtb3ZlSWNvblNyYzogc3RyaW5nID0gXCIuL3NyYy9pbWcvaWNvbnMvTW92ZUljb24ucG5nXCI7XHJcbmV4cG9ydCBjb25zdCBmaWdodEljb25TcmM6IHN0cmluZyA9IFwiLi9zcmMvaW1nL2ljb25zL1N3b3Jkcy5wbmdcIjtcclxuZXhwb3J0IGNvbnN0IHN3b3JkSWNvblNyYzogc3RyaW5nID0gXCIuL3NyYy9pbWcvdW5pdHMvaWNvbnMvc3dvcmQucG5nXCI7XHJcbmV4cG9ydCBjb25zdCBzcGVhckljb25TcmM6IHN0cmluZyA9IFwiLi9zcmMvaW1nL3VuaXRzL2ljb25zL3NwZWFyLnBuZ1wiO1xyXG5leHBvcnQgY29uc3Qgc3BlYXJBbmRTaGllbGRTcmM6IHN0cmluZyA9IFwiLi9zcmMvaW1nL3VuaXRzL2ljb25zL3NwZWFyQW5kU2hpZWxkLnBuZ1wiO1xyXG5leHBvcnQgY29uc3Qgc3dvcmRBbmRSb3VuZFNoaWVsZFNyYzogc3RyaW5nID0gXCIuL3NyYy9pbWcvdW5pdHMvaWNvbnMvc3dvcmRBbmRSb3VuZFNoaWVsZC5wbmdcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBtb3ZlbWVudEljb246IGFueSA9IHtcclxuICAgIHdpZHRoOiAzMCxcclxuICAgIGhlaWdodDogYXR0cmlidXRlc0hlaWdodFxyXG59XHJcbmV4cG9ydCBjb25zdCBmaWdodEljb246IGFueSA9IHtcclxuICAgIHdpZHRoOiA0MCxcclxuICAgIGhlaWdodDogYXR0cmlidXRlc0hlaWdodFxyXG59XHJcbmV4cG9ydCBjb25zdCBhcnJvd0ljb246IGFueSA9IHtcclxuICAgIHdpZHRoOiAzMCxcclxuICAgIGhlaWdodDogYXR0cmlidXRlc0hlaWdodFxyXG59IiwiaW1wb3J0IHsgVW5pdCB9IGZyb20gXCIuLi8uLi91bml0XCI7XHJcbmltcG9ydCB7IGNyZWF0ZURlZmF1bHRVbml0IH0gZnJvbSBcIi4uLy4uL3VuaXQvY3JlYXRlL2NyZWF0ZVVuaXRcIjtcclxuXHJcbmV4cG9ydCBsZXQgZGVmYXVsdFVuaXRzOiBVbml0W10gPSBbXTtcclxuXHJcbmNvbnN0IHJlbGVhc2VkVW5pdFR5cGVzID0gW1xyXG4gICAgXCJIZWF2eUNhdmFscnlcIiwgXCJIZWF2eUluZmFudHJ5XCIsXHJcbiAgICBcIkhvcGxpdGVzXCIsIFwiTGlnaHRDYXZhbHJ5XCIsIFwiTGlnaHRJbmZhbnRyeVwiLFxyXG4gICAgXCJNaWxpdGlhXCIsIFwiUGlrZW1lblwiLCBcIlNjb3V0c1wiXHJcbl1cclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVEZWZhdWx0VW5pdHMgPSAoKSA9PiB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgZm9yKGxldCB0eXBlIG9mIHJlbGVhc2VkVW5pdFR5cGVzKSB7XHJcbiAgICAgICAgICAgIGxldCB1bml0ID0gY3JlYXRlRGVmYXVsdFVuaXQodHlwZSwgMCwgMCwgXCJwbGF5ZXJcIik7XHJcbiAgICAgICAgICAgIGRlZmF1bHRVbml0cy5wdXNoKHVuaXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXNvbHZlKCk7XHJcbiAgICB9KTtcclxufSIsImltcG9ydCB7XHJcbiAgZHJhd1VuaXQsXHJcbiAgcmVkcmF3VW5pdHNcclxufSBmcm9tICcuL2RyYXdVbml0JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZHJhd1VuaXQsXHJcbiAgcmVkcmF3VW5pdHNcclxufVxyXG4iLCJpbXBvcnQge2FybW91clBlbmV0cmF0aW9ufSBmcm9tICcuL2FybW91clBlbmV0cmF0aW9uJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYXJtb3VyUGVuZXRyYXRpb25cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNoZWNrQXR0YWNrU2lkZVxyXG59IGZyb20gJy4vYXR0YWNrU2lkZSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGNoZWNrQXR0YWNrU2lkZVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgcmVtb3ZlVW5pdEZyb21FbmVtaWVzRmlnaHRBZ2FpbnN0LFxyXG4gIGZpbmRVbml0SW5GaWdodEFnYWluc3RcclxufSBmcm9tICcuL3VuaXRGaWdodEFnYWluc3QnO1xyXG5cclxuZXhwb3J0IHtcclxuICByZW1vdmVVbml0RnJvbUVuZW1pZXNGaWdodEFnYWluc3QsXHJcbiAgZmluZFVuaXRJbkZpZ2h0QWdhaW5zdFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgY2hlY2tIZWFsdGhcclxufSBmcm9tICcuL2NoZWNrSGVhbHRoJztcclxuaW1wb3J0IHtcclxuICBpc1VuaXRGaWdodGluZ1xyXG59IGZyb20gJy4vY2hlY2tGaWdodGluZyc7XHJcbmltcG9ydCB7XHJcbiAgbWVsZWVBdHRhY2tcclxufSBmcm9tICcuL21lbGVlQXR0YWNrJztcclxuaW1wb3J0IHtcclxuICBtZWxlZUNvbWJhdFxyXG59IGZyb20gJy4vbWVsZWVDb21iYXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBjaGVja0hlYWx0aCxcclxuICBpc1VuaXRGaWdodGluZyxcclxuICBtZWxlZUF0dGFjayxcclxuICBtZWxlZUNvbWJhdFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgcmVtb3ZlVW5pdFxyXG59IGZyb20gJy4vcmVtb3ZlVW5pdCc7XHJcblxyXG5leHBvcnQge1xyXG4gIHJlbW92ZVVuaXRcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGFzc2lnbkN1cnJlbnRseUNob3NlblVuaXQsXHJcbiAgYWRkVW5pdFRvU3BvdHRlZFVuaXRzLFxyXG4gIHJlbW92ZVVuaXRGcm9tU3BvdHRlZFVuaXRzLFxyXG4gIGluY1VuaXRJZCxcclxuICBhZGRVbml0SW50b1Zpc2libGVVbml0cyxcclxuICByZW1vdmVVbml0RnJvbVZpc2libGVVbml0c1xyXG59IGZyb20gJy4vdW5pdCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGFzc2lnbkN1cnJlbnRseUNob3NlblVuaXQsXHJcbiAgYWRkVW5pdFRvU3BvdHRlZFVuaXRzLFxyXG4gIHJlbW92ZVVuaXRGcm9tU3BvdHRlZFVuaXRzLFxyXG4gIGluY1VuaXRJZCxcclxuICBhZGRVbml0SW50b1Zpc2libGVVbml0cyxcclxuICByZW1vdmVVbml0RnJvbVZpc2libGVVbml0c1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZGVsZXRlT2JqZWN0RnJvbUFycmF5LFxyXG4gIGlzVW5pdEluQXJyYXlcclxufSBmcm9tICcuLi8uLi91dGlscyc7XHJcbmltcG9ydCBVbml0IGZyb20gJy4uLy4uL3VuaXQvdHlwZXMvVW5pdCc7XHJcblxyXG5leHBvcnQgbGV0IHNwb3R0ZWRVbml0czpVbml0W10gPSBbXTtcclxuXHJcbmV4cG9ydCBjb25zdCBhZGRVbml0VG9TcG90dGVkVW5pdHMgPSAodW5pdDpVbml0KSA9PiB7XHJcbiAgaWYoIWlzVW5pdEluQXJyYXkodW5pdCwgc3BvdHRlZFVuaXRzKSkge1xyXG4gICAgc3BvdHRlZFVuaXRzLnB1c2godW5pdCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlVW5pdEZyb21TcG90dGVkVW5pdHMgPSAodW5pdDpVbml0KSA9PiB7XHJcbiAgaWYoaXNVbml0SW5BcnJheSh1bml0LCBzcG90dGVkVW5pdHMpKSB7XHJcbiAgICBzcG90dGVkVW5pdHMgPSBkZWxldGVPYmplY3RGcm9tQXJyYXkodW5pdCwgc3BvdHRlZFVuaXRzKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtpc09iamVjdEVtcHR5fSBmcm9tICcuLi8uLi8uLi91dGlscyc7XHJcbi8qXHJcbiAgQ2hlY2tzIGlmIHVuaXQgaXMgY3VycmVudGx5IGZpZ2h0aW5nXHJcbiAgd2l0aCBhbnkgZW5lbWllcywgaWYgbm90IGZpZ2h0aW5nXHJcbiAgc2V0IGlzRmlnaHRpbmcgcHJvcGVydHkgdG8gZmFsc2VcclxuKi9cclxuZXhwb3J0IGNvbnN0IGlzVW5pdEZpZ2h0aW5nID0gKHVuaXQ6YW55KSA9PiB7XHJcbiAgbGV0IGlzRmlnaHRpbmcgPSBmYWxzZTtcclxuICBsZXQgZmlndGhBZ2FpbnN0ID0gdW5pdC5maWd0aEFnYWluc3Q7XHJcbiAgaWYoIWlzT2JqZWN0RW1wdHkoZmlndGhBZ2FpbnN0LmZyb250KSkgeyAvLyB1bml0IGhhcyBlbmVteSBpbiBmcm9udCBvZiBpdFxyXG4gICAgaXNGaWdodGluZyA9IHRydWU7XHJcbiAgfVxyXG4gIGVsc2UgaWYoIWlzT2JqZWN0RW1wdHkoZmlndGhBZ2FpbnN0LnJlYXIpKSB7IC8vIHVuaXQgaGFzIGFuIGVuZW15IGZyb20gdW5pdCdzIGJhY2tcclxuICAgIGlzRmlnaHRpbmcgPSB0cnVlO1xyXG4gIH1cclxuICBlbHNlIGlmKGZpZ3RoQWdhaW5zdC5mbGFuay5sZW5ndGggIT09IDApIHsgLy8gdW5pdCBoYXMgZW5lbXkgb24gdGhlIHNpZGVcclxuICAgIGlzRmlnaHRpbmcgPSB0cnVlO1xyXG4gIH1cclxuICBpZighaXNGaWdodGluZykgeyAvLyB1bml0IG5vdCBmaWdodGluZyBhdCB0aGF0IG1vbWVudFxyXG4gICAgdW5pdC5zZXRJc0ZpZ2h0aW5nVG9GYWxzZSgpOyAvLyBzZXQgaXNGaWdodGluZyBwcm9wZXJ0eSB0byBmYWxzZVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIHJlZnJlc2htZW50XHJcbn0gZnJvbSAnLi9yZWZyZXNobWVudCc7XHJcblxyXG5leHBvcnQge1xyXG4gIHJlZnJlc2htZW50XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IHJhbmRvbWl6ZU1lbGVlRGFtYWdlID0gKG1lbGVlQXR0YWNrOm51bWJlcikgPT4ge1xyXG4gICAgbGV0IG1heCA9IG1lbGVlQXR0YWNrIC0gKE1hdGguY2VpbChtZWxlZUF0dGFjayAqIDAuMjApKTtcclxuICAgIGxldCBtaW4gPSBtZWxlZUF0dGFjayArIChNYXRoLmZsb29yKG1lbGVlQXR0YWNrICogMC4yMCkpO1xyXG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47XHJcbn0iLCJpbXBvcnQgeyBwbGF5ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzXCI7XHJcbmltcG9ydCB7IFVOSVRfUEFORUxfSEVJR0hULCBVTklUX0xFRlRfUEFORUxfV0lEVEgsIFVOSVRfSUNPTl9XSURUSCwgVU5JVF9JQ09OX0hFSUdIVCwgVU5JVF9QQU5FTF9XSURUSCB9IGZyb20gXCIuLi9zZXR0aW5nc1wiO1xyXG5pbXBvcnQgeyBDQU5WQVNfSEVJR0hUIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBkcmF3VW5pdEljb24gfSBmcm9tIFwiLi4vaWNvbi9kcmF3VW5pdEljb25cIjtcclxuaW1wb3J0IHsgY3R4IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0XCI7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheVVuaXRJY29ucyA9ICgpID0+IHtcclxuICAgIGxldCBkaXNwYXlIYWxmT2ZJbWFnZTogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgbGV0IGsgPSAoZGlzcGF5SGFsZk9mSW1hZ2UpID8gMC41IDogMTtcclxuICAgIGxldCB4ID0gVU5JVF9MRUZUX1BBTkVMX1dJRFRIO1xyXG4gICAgbGV0IHkgPSBDQU5WQVNfSEVJR0hUIC0gVU5JVF9QQU5FTF9IRUlHSFQ7XHJcbiAgICBjdHguY2xlYXJSZWN0KHgsIHksIFVOSVRfUEFORUxfV0lEVEgsIFVOSVRfUEFORUxfSEVJR0hUKTtcclxuICAgIGZvcihsZXQgdW5pdCBvZiBwbGF5ZXJVbml0cykge1xyXG4gICAgICAgIGRyYXdVbml0SWNvbih1bml0LCBkaXNwYXlIYWxmT2ZJbWFnZSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQge2dyaWRTaXplfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5leHBvcnQgY29uc3QgZ2V0TWluRlNjb3JlID0gKG9wZW46YW55W10pID0+IHtcclxuICBsZXQgbWluID0gMDtcclxuICBmb3IobGV0IGkgPSAxOyBpIDwgb3Blbi5sZW5ndGggLSAxOyArK2kpIHtcclxuICAgIGlmKG9wZW5bbWluXS5mU2NvcmUgPiBvcGVuW2ldLmZTY29yZSkge1xyXG4gICAgICBtaW4gPSBpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gb3BlblttaW5dO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdW5jbG9zZWROZWlnYm9ycyA9IChjdXJyZW50OmFueSwgY2xvc2VkOmFueSkgPT4ge1xyXG4gIGxldCBuZWlnaGJvcnNOb3RJbkNsb3NlZCA9IFtdO1xyXG4gIGZvcihsZXQgbmVpZ2hib3Igb2YgY3VycmVudC5uZWlnaGJvcnMpIHtcclxuICAgIGxldCBpc0luQ2xvc2VkOmJvb2xlYW4gPSBmYWxzZTtcclxuICAgIGZvcihsZXQgbm9kZSBvZiBjbG9zZWQpIHtcclxuICAgICAgaWYobmVpZ2hib3IueCA9PT0gbm9kZS54ICYmIG5laWdoYm9yLnkgPT09IG5vZGUueSkge1xyXG4gICAgICAgIGlzSW5DbG9zZWQgPSB0cnVlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBpZighaXNJbkNsb3NlZCkge1xyXG4gICAgICBuZWlnaGJvcnNOb3RJbkNsb3NlZC5wdXNoKG5laWdoYm9yKTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG5laWdoYm9yc05vdEluQ2xvc2VkO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgaXNPYmplY3RJbk1hcEtleXMgPSAob2JqZWN0OmFueSwgbWFwOmFueSkgPT4ge1xyXG4gIGxldCBhcnI6YW55W10gPSBBcnJheS5mcm9tKG1hcCk7XHJcbiAgbGV0IHJlc3VsdDpib29sZWFuID0gZmFsc2U7XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7ICsraSkge1xyXG4gICAgaWYoYXJyW2ldWzBdLnggPT09IG9iamVjdC54ICYmIGFycltpXVswXS55ID09PSBvYmplY3QueSkge1xyXG4gICAgICByZXN1bHQgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0TmVpZ2hib3JEaXN0YW5jZSA9IChjdXJyZW50Tm9kZTphbnksIG5laWdoYm9yOmFueSkgPT4ge1xyXG4gIGxldCBkeCA9IE1hdGguYWJzKGN1cnJlbnROb2RlLnggLSBuZWlnaGJvci54KTtcclxuICBsZXQgZHkgPSBNYXRoLmFicyhjdXJyZW50Tm9kZS55IC0gbmVpZ2hib3IueSk7XHJcbiAgaWYoZHggIT09IDAgJiYgZHkgIT09IDApIHtcclxuICAgIHJldHVybiAxNDtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIDEwO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBncmlkU2l6ZSwgTUFQX1dJRFRILCBNQVBfSEVJR0hUIH0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHsgcGF0aEN0eCB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb250ZXh0L2NvbnRleHQnO1xyXG5pbXBvcnQgeyBVbml0IH0gZnJvbSAnLi4vLi4vdW5pdCc7XHJcbmltcG9ydCB7IGN1cnJlbnRseUNob3NlblVuaXQgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L2N1cnJlbnRseUNob3NlblVuaXQnO1xyXG5pbXBvcnQgeyBnZXROb2RlRnJvbU1hcCB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuXHJcbmV4cG9ydCBjb25zdCBkcmF3UGF0aCA9ICh1bml0OiBVbml0LCBwYXRoOmFueVtdLCBzdGFydEluZGV4OiBudW1iZXIgPSAwKSA9PiB7XHJcbiAgaWYoY3VycmVudGx5Q2hvc2VuVW5pdCAmJiBjdXJyZW50bHlDaG9zZW5Vbml0LmlkID09PSB1bml0LmlkKSB7XHJcbiAgICBjbGVhclBhdGgoKTtcclxuICAgIGlmKHN0YXJ0SW5kZXggIT0gMCkge1xyXG4gICAgICBzdGFydEluZGV4IC09IDE7XHJcbiAgICB9XHJcbiAgICBsZXQgZmlyc3ROb2RlOiBib29sZWFuID0gdHJ1ZTtcclxuICAgIGZvcihsZXQgaSA9IHN0YXJ0SW5kZXg7IGkgIT0gcGF0aC5sZW5ndGggLSAxOyArK2kpIHtcclxuICAgICAgbGV0IGN1cnJlbnROb2RlQ2VudGVyWCA9IHBhdGhbaV0ueCArIChncmlkU2l6ZSAvIDIpO1xyXG4gICAgICBsZXQgY3VycmVudE5vZGVDZW50ZXJZID0gcGF0aFtpXS55ICsgKGdyaWRTaXplIC8gMik7XHJcbiAgICAgIGxldCBuZXh0Tm9kZUNlbnRlclggPSBwYXRoW2kgKyAxXS54ICsgKGdyaWRTaXplIC8gMik7XHJcbiAgICAgIGxldCBuZXh0Tm9kZUNlbnRlclkgPSBwYXRoW2kgKyAxXS55ICsgKGdyaWRTaXplIC8gMik7XHJcbiAgICAgIHBhdGhDdHguc2F2ZSgpO1xyXG4gICAgICBwYXRoQ3R4LnN0cm9rZVN0eWxlID0gJ3llbGxvdyc7XHJcbiAgICAgIHBhdGhDdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgIGlmKGZpcnN0Tm9kZSkge1xyXG4gICAgICAgIHBhdGhDdHgubW92ZVRvKHVuaXQuY2VudGVyWCwgdW5pdC5jZW50ZXJZKTtcclxuICAgICAgICBmaXJzdE5vZGUgPSBmYWxzZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBwYXRoQ3R4Lm1vdmVUbyhjdXJyZW50Tm9kZUNlbnRlclgsIGN1cnJlbnROb2RlQ2VudGVyWSk7XHJcbiAgICAgIH1cclxuICAgICAgcGF0aEN0eC5saW5lVG8obmV4dE5vZGVDZW50ZXJYLCBuZXh0Tm9kZUNlbnRlclkpO1xyXG4gICAgICBwYXRoQ3R4LnN0cm9rZSgpO1xyXG4gICAgICBpZihpID09IHBhdGgubGVuZ3RoIC0gMikge1xyXG4gICAgICAgIGxldCByYWRpdXMgPSBNYXRoLnJvdW5kKGdyaWRTaXplIC8gNCk7XHJcbiAgICAgICAgcGF0aEN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICBwYXRoQ3R4LmFyYyhuZXh0Tm9kZUNlbnRlclgsIG5leHROb2RlQ2VudGVyWSwgcmFkaXVzLCAwLCBNYXRoLlBJKjIpO1xyXG4gICAgICAgIHBhdGhDdHguZmlsbCgpO1xyXG4gICAgICAgIHBhdGhDdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgIH1cclxuICAgICAgcGF0aEN0eC5yZXN0b3JlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY2xlYXJQYXRoID0gKCkgPT4ge1xyXG4gIHBhdGhDdHguY2xlYXJSZWN0KDAsIDAsIE1BUF9XSURUSCwgTUFQX0hFSUdIVCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhckN1cnJlbnROb2RlID0gKHVuaXQ6IFVuaXQpID0+IHtcclxuICBsZXQgbm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXQueCwgdW5pdC55KTtcclxuICBwYXRoQ3R4LmNsZWFyUmVjdChub2RlLngsIG5vZGUueSwgZ3JpZFNpemUsIGdyaWRTaXplKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNhbGN1bGF0ZUNoYW5jZVRvR2V0T3V0T2ZDb21iYXQsXHJcbiAgdW5pdENhbkdldE91dE9mQ29tYmF0XHJcbn0gZnJvbSAnLi9vdXRPZkNvbWJhdCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGNhbGN1bGF0ZUNoYW5jZVRvR2V0T3V0T2ZDb21iYXQsXHJcbiAgdW5pdENhbkdldE91dE9mQ29tYmF0XHJcbn1cclxuIiwiaW1wb3J0IHsgZ3JpZFNpemUgfSBmcm9tICcuLi8uLi8uLi9jb25maWcnO1xyXG5pbXBvcnQgeyBmaW5kUGF0aEZyb21PbmVOb2RlVG9Bbm90aGVyIH0gZnJvbSAnLi4vLi4vLi4vcGF0aCc7XHJcbmltcG9ydCB7XHJcbiAgbWFrZU1vdmVtZW50SW5QdXJzdWVVbml0LFxyXG4gIG1ha2VNb3ZlbWVudEluVXBkYXRlVW5pdFxyXG59IGZyb20gJy4vbWFrZU1vdmVtZW50JztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vdHlwZXMvVW5pdCc7XHJcblxyXG5leHBvcnQgY29uc3QgbW92ZVRvTmV4dE5vZGVJblB1cnN1ZVVuaXQgPSAodW5pdDpVbml0LCBwdXJzdWVkVW5pdDpVbml0LCBjdXJyZW50Tm9kZTphbnksIG5leHROb2RlOmFueSwgY3Vyclg6bnVtYmVyLCBjdXJyWTpudW1iZXIsIGFsbFBhdGg6YW55W10sIG5vZGVJOm51bWJlcikgPT4ge1xyXG4gIGxldCBzdGFydFggPSBjdXJyZW50Tm9kZS54ICsgKGdyaWRTaXplICogMC41KTtcclxuICBsZXQgc3RhcnRZID0gY3VycmVudE5vZGUueSArIChncmlkU2l6ZSAqIDAuNSk7XHJcbiAgbGV0IGZpbmlzaFggPSBuZXh0Tm9kZS54ICsgKGdyaWRTaXplICogMC41KTtcclxuICBsZXQgZmluaXNoWSA9IG5leHROb2RlLnkgKyAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gIGxldCBwYXRoID0gZmluZFBhdGhGcm9tT25lTm9kZVRvQW5vdGhlcihzdGFydFgsIHN0YXJ0WSwgZmluaXNoWCwgZmluaXNoWSk7XHJcbiAgbWFrZU1vdmVtZW50SW5QdXJzdWVVbml0KHVuaXQsIHB1cnN1ZWRVbml0LCBjdXJyZW50Tm9kZSwgbmV4dE5vZGUsIHBhdGgsIGFsbFBhdGgsIGN1cnJYLCBjdXJyWSwgMCwgbm9kZUkpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgbW92ZVRvTmV4dE5vZGVJblVwZGF0ZVVuaXQgPSAodW5pdDpVbml0LCBjdXJyZW50Tm9kZTphbnksIG5leHROb2RlOmFueSwgY3Vyclg6bnVtYmVyLCBjdXJyWTpudW1iZXIsIGFsbFBhdGg6YW55W10sIG5vZGVJOm51bWJlcikgPT4ge1xyXG4gIGxldCBzdGFydFggPSBjdXJyZW50Tm9kZS54ICsgKGdyaWRTaXplICogMC41KTtcclxuICBsZXQgc3RhcnRZID0gY3VycmVudE5vZGUueSArIChncmlkU2l6ZSAqIDAuNSk7XHJcbiAgbGV0IGZpbmlzaFggPSBuZXh0Tm9kZS54ICsgKGdyaWRTaXplICogMC41KTtcclxuICBsZXQgZmluaXNoWSA9IG5leHROb2RlLnkgKyAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gIGxldCBwYXRoID0gZmluZFBhdGhGcm9tT25lTm9kZVRvQW5vdGhlcihzdGFydFgsIHN0YXJ0WSwgZmluaXNoWCwgZmluaXNoWSk7XHJcbiAgbWFrZU1vdmVtZW50SW5VcGRhdGVVbml0KHVuaXQsIGN1cnJlbnROb2RlLCBuZXh0Tm9kZSwgcGF0aCwgYWxsUGF0aCwgY3VyclgsIGN1cnJZLCAwLCBub2RlSSk7XHJcbn1cclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vdHlwZXMvVW5pdCc7XHJcbmltcG9ydCB7IGRyYXdVbml0SWNvbiB9IGZyb20gJy4uLy4uLy4uL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2RyYXdVbml0SWNvbic7XHJcblxyXG5leHBvcnQgY29uc3Qgc3RvcE1vdmluZyA9ICh1bml0OlVuaXQsIGN1cnJlbnROb2RlOmFueSkgPT4ge1xyXG4gIHVuaXQuc2V0SXNNb3ZpbmdUb0ZhbHNlKCk7XHJcbiAgdW5pdC5zZXRDdXJyZW50Tm9kZShjdXJyZW50Tm9kZSk7XHJcbiAgdW5pdC5zZXROZXh0Tm9kZShjdXJyZW50Tm9kZSk7XHJcbiAgZHJhd1VuaXRJY29uKHVuaXQpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZ2V0UHJpb3JpdHlVbml0LFxyXG4gIHVuaXRDYW5Nb3ZlVG9UaGVOb2RlXHJcbn0gZnJvbSAnLi9hc3Nlc3NQcmlvcml0eSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGdldFByaW9yaXR5VW5pdCxcclxuICB1bml0Q2FuTW92ZVRvVGhlTm9kZVxyXG59XHJcbiIsImltcG9ydCB7c2h1ZmZsZVVuaXRzfSBmcm9tICcuL3NodWZmbGVVbml0cyc7XHJcbmltcG9ydCB7c2h1ZmZsZUlEfSBmcm9tICcuL3NodWZmbGVJRCc7XHJcblxyXG5leHBvcnQge1xyXG4gIHNodWZmbGVJRCxcclxuICBzaHVmZmxlVW5pdHNcclxufVxyXG4iLCJpbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uL3VuaXRcIjtcclxuaW1wb3J0IHsgZ2V0SW50ZXJjZXB0aW9uTm9kZXMgfSBmcm9tIFwiLi9nZXRJbnRlcmNlcHRpb25Ob2Rlc1wiO1xyXG5pbXBvcnQgeyBwbGF5ZXJVbml0cywgY29tcHV0ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzXCI7XHJcbmltcG9ydCB7IGlzVW5pdEluQXJyYXkgfSBmcm9tIFwiLi4vZ2VuZXJhbFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEludGVyY2VwdGVkRW5lbWllcyA9ICh1bml0OiBVbml0KTogVW5pdFtdID0+IHtcclxuICAgIGxldCBlbmVtaWVzOiBVbml0W107XHJcbiAgICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ3BsYXllcicpIHtcclxuICAgICAgICBlbmVtaWVzID0gT2JqZWN0LmFzc2lnbihbXSwgY29tcHV0ZXJVbml0cyk7XHJcbiAgICB9IFxyXG4gICAgZWxzZSBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgICAgIGVuZW1pZXMgPSBPYmplY3QuYXNzaWduKFtdLCBwbGF5ZXJVbml0cyk7XHJcbiAgICB9XHJcbiAgICBsZXQgaW50ZXJjZXB0aW9uRW5lbWllczogVW5pdFtdID0gW107XHJcbiAgICBsZXQgaW50ZXJjZXB0aW9uTm9kZXMgPSBnZXRJbnRlcmNlcHRpb25Ob2Rlcyh1bml0KTtcclxuICAgIGZvcihsZXQgZW5lbXkgb2YgZW5lbWllcykge1xyXG4gICAgICAgIGZvcihsZXQgbm9kZSBvZiBpbnRlcmNlcHRpb25Ob2Rlcykge1xyXG4gICAgICAgICAgICBpZihlbmVteS5jdXJyZW50Tm9kZS54ID09IG5vZGUueCAmJiBlbmVteS5jdXJyZW50Tm9kZS55ID09PSBub2RlLnkpIHtcclxuICAgICAgICAgICAgICAgIGlmKCFpc1VuaXRJbkFycmF5KGVuZW15LCBpbnRlcmNlcHRpb25FbmVtaWVzKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGludGVyY2VwdGlvbkVuZW1pZXMucHVzaChlbmVteSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaW50ZXJjZXB0aW9uRW5lbWllcztcclxufSIsImltcG9ydCB7IFVuaXQgfSBmcm9tIFwiLi4vLi4vLi4vdW5pdFwiO1xyXG5pbXBvcnQgeyBjb21wdXRlclVuaXRzLCBwbGF5ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QmxvY2tlZEVuZW1pZXMgPSAodW5pdDogVW5pdCk6IFVuaXRbXSA9PiB7XHJcbiAgICBsZXQgYmxvY2tlZEVuZW1pZXM6IFVuaXRbXSA9IFtdO1xyXG4gICAgbGV0IGVuZW1pZXM6IFVuaXRbXTtcclxuICAgIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgICAgIGVuZW1pZXMgPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICAgIH0gXHJcbiAgICBlbHNlIGlmKHVuaXQuY29udHJvbEJ5ID09PSAnY29tcHV0ZXInKSB7XHJcbiAgICAgICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIHBsYXllclVuaXRzKTtcclxuICAgIH0gXHJcbiAgICBmb3IobGV0IGVuZW15IG9mIGVuZW1pZXMpIHtcclxuICAgICAgICBpZih1bml0Lm5leHROb2RlLnggPT09IGVuZW15Lm5leHROb2RlLnggJiYgdW5pdC5uZXh0Tm9kZS55ID09PSBlbmVteS5uZXh0Tm9kZS55KSB7XHJcbiAgICAgICAgICAgIGJsb2NrZWRFbmVtaWVzLnB1c2goZW5lbXkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBibG9ja2VkRW5lbWllcztcclxufSIsImltcG9ydCB7IGluaXRpYWxDb21wdXRlclBvd2VyIH0gZnJvbSAnLi4vLi4vc3RvcmUvQUkvcG93ZXIvaW5pdGlhbENvbXB1dGVyUG93ZXInO1xyXG5pbXBvcnQgeyBpbml0aWFsUGxheWVyUG93ZXIgfSBmcm9tICcuLi8uLi9zdG9yZS9BSS9wb3dlci9pbml0aWFsUGxheWVyUG93ZXInO1xyXG5pbXBvcnQgeyBwbGF5ZXJQb3dlciB9IGZyb20gJy4uLy4uL3N0b3JlL0FJL3Bvd2VyL3BsYXllclBvd2VyJztcclxuaW1wb3J0IHsgY29tcHV0ZXJQb3dlciB9IGZyb20gJy4uLy4uL3N0b3JlL0FJL3Bvd2VyL2NvbXB1dGVyUG93ZXInO1xyXG5pbXBvcnQge1xyXG4gIHBsYXllclVuaXRzLFxyXG4gIGNvbXB1dGVyVW5pdHNcclxufSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHsgcmV2ZWFsZWRVbml0cyB9IGZyb20gJy4uLy4uL3N0b3JlL0FJL2VuZW1pZXMvcmV2ZWFsZWRFbmVtaWVzJztcclxuaW1wb3J0IHsgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3Zpc2libGVVbml0cyc7XHJcbmltcG9ydCB7IHZpc2libGVQbGF5ZXJVbml0c1Bvd2VyIH0gZnJvbSAnLi4vLi4vc3RvcmUvQUkvcG93ZXIvdmlzaWJsZVBsYXllclVuaXRzUG93ZXInO1xyXG5pbXBvcnQgeyByZXZlYWxlZFVuaXRzUG93ZXIgfSBmcm9tICcuLi8uLi9zdG9yZS9BSS9wb3dlci9yZXZlYWxlZFVuaXRzUG93ZXInO1xyXG5pbXBvcnQgUG93ZXIgZnJvbSAnLi4vLi4vc3RvcmUvQUkvcG93ZXIvUG93ZXInO1xyXG5pbXBvcnQgeyBVbml0IH0gZnJvbSAnLi4vLi4vdW5pdCc7XHJcblxyXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlVG90YWxDb21wdXRlclBvd2VyID0gKCk6IFBvd2VyID0+IHtcclxuICBsZXQgbG9jYWxQb3dlciA9IG5ldyBQb3dlcigpO1xyXG4gIGNvbXB1dGVyUG93ZXIucmVzZXRBbGxQcm9wZXJ0aWVzKCk7XHJcbiAgZm9yKGxldCB1bml0IG9mIGNvbXB1dGVyVW5pdHMpIHtcclxuICAgIGRlY29tcG9zZVVuaXRQcm9wcyh1bml0LCAnY29tcHV0ZXInKTtcclxuICAgIGRlY29tcG9zZVBvd2VyKGxvY2FsUG93ZXIsIHVuaXQpO1xyXG4gIH1cclxuICByZXR1cm4gbG9jYWxQb3dlcjtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZVRvdGFsUGxheWVyUG93ZXIgPSAoKTogUG93ZXIgPT4ge1xyXG4gIGxldCBsb2NhbFBvd2VyID0gbmV3IFBvd2VyKCk7XHJcbiAgcGxheWVyUG93ZXIucmVzZXRBbGxQcm9wZXJ0aWVzKCk7XHJcbiAgZm9yKGxldCB1bml0IG9mIHBsYXllclVuaXRzKSB7XHJcbiAgICBkZWNvbXBvc2VVbml0UHJvcHModW5pdCk7XHJcbiAgICBkZWNvbXBvc2VQb3dlcihsb2NhbFBvd2VyLCB1bml0KTtcclxuICB9XHJcbiAgcmV0dXJuIGxvY2FsUG93ZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVSZXZlYWxlZFVuaXRzUG93ZXIgPSAoKSA9PiB7XHJcbiAgcmV2ZWFsZWRVbml0c1Bvd2VyLnJlc2V0QWxsUHJvcGVydGllcygpO1xyXG4gIGZvcihsZXQgdW5pdCBvZiByZXZlYWxlZFVuaXRzKSB7XHJcbiAgICBkZWNvbXBvc2VVbml0UHJvcHModW5pdCwgJ3JldmVhbGVkVW5pdHMnKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVWaXNpYmxlUGxheWVyUG93ZXIgPSAoKSA9PiB7XHJcbiAgdmlzaWJsZVBsYXllclVuaXRzUG93ZXIucmVzZXRBbGxQcm9wZXJ0aWVzKCk7XHJcbiAgZm9yKGxldCB1bml0IG9mIHZpc2libGVGb3JDb21wdXRlclVuaXRzKSB7XHJcbiAgICBkZWNvbXBvc2VVbml0UHJvcHModW5pdCwgJ3Zpc2libGVQbGF5ZXJVbml0cycpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUluaXRpYWxDb21wdXRlclBvd2VyID0gKCkgPT4ge1xyXG4gIGluaXRpYWxDb21wdXRlclBvd2VyLnJlc2V0QWxsUHJvcGVydGllcygpO1xyXG4gIGZvcihsZXQgdW5pdCBvZiBjb21wdXRlclVuaXRzKSB7XHJcbiAgICBkZWNvbXBvc2VVbml0UHJvcHModW5pdCwgJ2luaXRpYWxDb21wdXRlcicpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUluaXRpYWxQbGF5ZXJQb3dlciA9ICgpID0+IHtcclxuICBpbml0aWFsUGxheWVyUG93ZXIucmVzZXRBbGxQcm9wZXJ0aWVzKCk7XHJcbiAgZm9yKGxldCB1bml0IG9mIHBsYXllclVuaXRzKSB7XHJcbiAgICBkZWNvbXBvc2VVbml0UHJvcHModW5pdCwgJ2luaXRpYWxQbGF5ZXInKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVUb3RhbFBvd2VyID0gKCkgPT4ge1xyXG4gIGNhbGN1bGF0ZVRvdGFsQ29tcHV0ZXJQb3dlcigpO1xyXG4gIGNhbGN1bGF0ZVRvdGFsUGxheWVyUG93ZXIoKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUluaXRpYWxQb3dlciA9ICgpID0+IHtcclxuICBjYWxjdWxhdGVJbml0aWFsQ29tcHV0ZXJQb3dlcigpO1xyXG4gIGNhbGN1bGF0ZUluaXRpYWxQbGF5ZXJQb3dlcigpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGVjb21wb3NlVW5pdFByb3BzID0gKHVuaXQ6YW55LCBzaWRlOnN0cmluZz0ncGxheWVyJykgPT4ge1xyXG4gIGlmKHNpZGUgPT09ICd2aXNpYmxlUGxheWVyVW5pdHMnKSB7XHJcbiAgICBkZWNvbXBvc2VQb3dlcih2aXNpYmxlUGxheWVyVW5pdHNQb3dlciwgdW5pdCk7XHJcbiAgfVxyXG4gIGlmKHNpZGUgPT09ICdwbGF5ZXInKSB7XHJcbiAgICBkZWNvbXBvc2VQb3dlcihwbGF5ZXJQb3dlciwgdW5pdCk7XHJcbiAgfVxyXG4gIGVsc2UgaWYoc2lkZSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgZGVjb21wb3NlUG93ZXIoY29tcHV0ZXJQb3dlciwgdW5pdCk7XHJcbiAgfVxyXG4gIGVsc2UgaWYoc2lkZSA9PT0gJ2luaXRpYWxDb21wdXRlcicpIHtcclxuICAgIGRlY29tcG9zZVBvd2VyKGluaXRpYWxDb21wdXRlclBvd2VyLCB1bml0KTtcclxuICB9XHJcbiAgZWxzZSBpZihzaWRlID09PSAnaW5pdGlhbFBsYXllcicpIHtcclxuICAgIGRlY29tcG9zZVBvd2VyKGluaXRpYWxQbGF5ZXJQb3dlciwgdW5pdCk7XHJcbiAgfVxyXG5cclxuICBlbHNlIGlmKHNpZGUgPT09ICdyZXZlYWxlZFVuaXRzJykge1xyXG4gICAgZGVjb21wb3NlUG93ZXIocmV2ZWFsZWRVbml0c1Bvd2VyLCB1bml0KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkZWNvbXBvc2VQb3dlciA9IChwb3dlcjogUG93ZXIsIHVuaXQ6IFVuaXQpID0+IHtcclxuICBwb3dlci5pbmNyZW1lbnRRdWFudGl0eSgpO1xyXG4gIHBvd2VyLmFkZEhlYWx0aCh1bml0LmhlYWx0aCk7XHJcbiAgcG93ZXIuYWRkU3BlZWQodW5pdC5zcGVlZCk7XHJcbiAgcG93ZXIuYWRkQXJtb3VyKHVuaXQuYXJtb3VyKTtcclxuICBwb3dlci5hZGRNZWxlZURhbWFnZSh1bml0Lm1lbGVlRGFtYWdlKTtcclxuICBwb3dlci5hZGRNaXNzaWxlRGFtYWdlKHVuaXQubWlzc2lsZURhbWFnZSk7XHJcbiAgcG93ZXIuYWRkRGlzY2lwbGluZSh1bml0LmRpc2NpcGxpbmUpO1xyXG4gIHBvd2VyLmFkZE1vcmFsZSh1bml0Lm1vcmFsZSk7XHJcbiAgcG93ZXIuYWRkQ29uZGl0aW9uKHVuaXQuY29uZGl0aW9uKTtcclxufSIsImV4cG9ydCBjb25zdCBnZXRSYW5kb21WYWx1ZUluUmFuZ2UgPSAobWluOm51bWJlciwgbWF4Om51bWJlcik6IG51bWJlciA9PiB7XHJcblxyXG4gICAgaWYobWluID49IG1heCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBtaW4gb3IgbWF4Jyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYoKG1pbiA+IDAgJiYgbWluIDwgMSkgJiYgKG1heCA+IDAgJiYgbWF4IDwgMSkpIHtcclxuXHJcbiAgICAgICAgbGV0IG5ld01pbjogbnVtYmVyID0gTWF0aC5yb3VuZChtaW4gKiAxMDApO1xyXG4gICAgICAgIGxldCBuZXdNYXg6IG51bWJlciA9IE1hdGgucm91bmQobWF4ICogMTAwKTtcclxuXHJcbiAgICAgICAgbGV0IHJhbmRvbTogbnVtYmVyID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG5ld01heCAtIG5ld01pbiArIDEpKSArIG5ld01pbjtcclxuXHJcbiAgICAgICAgcmV0dXJuIHJhbmRvbSAqIDAuMDE7XHJcblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbjtcclxuICAgIH0gXHJcblxyXG59IiwiZXhwb3J0IGVudW0gQ29tbWFuZCB7XHJcbiAgICBBdHRhY2ssXHJcbiAgICBCZUNsb3NlVG9Vbml0LFxyXG4gICAgTW92ZVRvTm9kZVxyXG59IiwiaW1wb3J0IHtcclxuICBnZXRDbG9zZXN0VW5pdFRvTm9kZSxcclxuICBnZXRDbG9zZXN0VW5pdFRvT3RoZXJVbml0LFxyXG4gIGdldEJlc3RVbml0QnlQcm9wZXJ0eSxcclxuICBnZXRXb3JzdFVuaXRCeVByb3BlcnR5LFxyXG4gIGdldEJlc3RFbmVteUJ5UHJvcGVydHksXHJcbiAgZ2V0V29yc3RFbmVteUJ5UHJvcGVydHksXHJcbiAgZ2V0Tm90RmlnaHRpbmdVbml0cyxcclxuICBnZXRDbG9zZXN0RW5lbXlUb1VuaXQsXHJcbiAgZ2V0RnJlZVVuaXRzLFxyXG4gIGdldFVuaXRzQnlUYXNrLFxyXG4gIGdldFVuaXRzQnlQcm9wZXJ0eVZhbHVlLFxyXG4gIGdldFNjb3V0c051bWJlcixcclxuICBnZXRVbml0c1doZXJlVmFsdWVcclxufSBmcm9tICcuL0FJX2FjdGlvbnMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBnZXRDbG9zZXN0VW5pdFRvTm9kZSxcclxuICBnZXRDbG9zZXN0VW5pdFRvT3RoZXJVbml0LFxyXG4gIGdldEJlc3RVbml0QnlQcm9wZXJ0eSxcclxuICBnZXRXb3JzdFVuaXRCeVByb3BlcnR5LFxyXG4gIGdldEJlc3RFbmVteUJ5UHJvcGVydHksXHJcbiAgZ2V0V29yc3RFbmVteUJ5UHJvcGVydHksXHJcbiAgZ2V0Tm90RmlnaHRpbmdVbml0cyxcclxuICBnZXRDbG9zZXN0RW5lbXlUb1VuaXQsXHJcbiAgZ2V0RnJlZVVuaXRzLFxyXG4gIGdldFVuaXRzQnlUYXNrLFxyXG4gIGdldFVuaXRzQnlQcm9wZXJ0eVZhbHVlLFxyXG4gIGdldFNjb3V0c051bWJlcixcclxuICBnZXRVbml0c1doZXJlVmFsdWVcclxufVxyXG4iLCJpbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uL3VuaXRcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVUb3RhbFVuaXRzV2VpZ2h0ID0gKHVuaXRzOiBVbml0W10pOiBudW1iZXIgPT4ge1xyXG4gICAgbGV0IHdlaWdodCA9IDA7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgICAgICB3ZWlnaHQgKz0gdW5pdC53ZWlnaHQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gd2VpZ2h0O1xyXG59IiwiaW1wb3J0IHsgVW5pdCB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xyXG5pbXBvcnQgeyBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMsIGdldFN1cnJvdW5kZWROb2RlcyB9IGZyb20gXCIuLi8uLi8uLi91dGlsc1wiO1xyXG5pbXBvcnQgeyBnZXRSYW5kb21Vbml0IH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3VuaXQvcmFuZG9tL2dldFJhbmRvbVVuaXRcIjtcclxuaW1wb3J0IHsgYXR0YWNrRW5lbXkgfSBmcm9tIFwiLi5cIjtcclxuaW1wb3J0IHsgZ2V0U3Vycm91bmRlZFVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3N1cnJvdW5kZWQvZ2V0U3Vycm91bmRlZFVuaXRzXCI7XHJcbmltcG9ydCB7IHZpc2libGVGb3JDb21wdXRlclVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uL3N0b3JlL3VuaXQvdmlzaWJsZVVuaXRzXCI7XHJcbmltcG9ydCB7IGdldFJhbmRvbU5vZGUgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvbm9kZVwiO1xyXG5pbXBvcnQgeyBjdXJyZW50Q29tbWFuZE51bWJlciB9IGZyb20gXCIuLi8uLi8uLi9BSS9zdHJhdGVneU1vZHVsZS9kZWNpc2lvblVuaXQvY29tbWFuZE51bWJlci9jdXJyZW50Q29tbWFuZE51bWJlclwiO1xyXG5pbXBvcnQgeyBtb3ZlVG8gfSBmcm9tICcuLi9jb21tb24vbW92ZVRvJztcclxuXHJcbmV4cG9ydCBjb25zdCBiZUNsb3NlVG8gPSAoXHJcbiAgICB1bml0OiBVbml0LCBcclxuICAgIGFjdGlvblVuaXQ6IFVuaXQsIFxyXG4gICAgY29tbWFuZE51bWJlcjogbnVtYmVyLCBcclxuICAgIHByb3RlY3Rpb246IGJvb2xlYW4gPSBmYWxzZSxcclxuICAgIG5ld0NvbW1hbmQ6IGJvb2xlYW4gPSBmYWxzZVxyXG4pID0+IHtcclxuICAgIGlmKGNvbW1hbmROdW1iZXIgIT09IGN1cnJlbnRDb21tYW5kTnVtYmVyKSByZXR1cm47XHJcbiAgICBpZihuZXdDb21tYW5kIHx8ICghdW5pdC5pc0ZpZ2h0aW5nICYmICF1bml0LmlzTW92aW5nKSkge1xyXG4gICAgICAgIGxldCBkaXN0YW5jZUJldHdlZW5Vbml0czogbnVtYmVyID0gZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvVW5pdHNJbkdyaWRzKHVuaXQsIGFjdGlvblVuaXQpO1xyXG4gICAgICAgIGlmKGFjdGlvblVuaXQuaXNGaWdodGluZykge1xyXG4gICAgICAgICAgICBpZihhY3Rpb25Vbml0LmZpZ3RoQWdhaW5zdC5hbGwubGVuZ3RoICE9IDApIHtcclxuICAgICAgICAgICAgICAgIGxldCB1bml0VG9BdHRhY2s6IFVuaXQgPSBnZXRSYW5kb21Vbml0KGFjdGlvblVuaXQuZmlndGhBZ2FpbnN0LmFsbCk7XHJcbiAgICAgICAgICAgICAgICBhdHRhY2tFbmVteSh1bml0LCB1bml0VG9BdHRhY2spO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYocHJvdGVjdGlvbiAmJiBnZXRTdXJyb3VuZGVkVW5pdHMoYWN0aW9uVW5pdCwgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMsIDMpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgbGV0IGVuZW1pZXMgPSBnZXRTdXJyb3VuZGVkVW5pdHMoYWN0aW9uVW5pdCwgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMsIDMpO1xyXG4gICAgICAgICAgICBsZXQgdW5pdFRvQXR0YWNrOiBVbml0ID0gZ2V0UmFuZG9tVW5pdChlbmVtaWVzKTtcclxuICAgICAgICAgICAgYXR0YWNrRW5lbXkodW5pdCwgdW5pdFRvQXR0YWNrKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihkaXN0YW5jZUJldHdlZW5Vbml0cyA+PSAyKSB7XHJcbiAgICAgICAgICAgIGxldCBub2RlcyA9IGdldFN1cnJvdW5kZWROb2RlcyhhY3Rpb25Vbml0LCAyKTtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSBnZXRSYW5kb21Ob2RlKG5vZGVzKTtcclxuICAgICAgICAgICAgbW92ZVRvKHVuaXQsIG5vZGUueCwgbm9kZS55KTtcclxuICAgICAgICB9XHJcbiAgICB9IFxyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgYmVDbG9zZVRvKHVuaXQsIGFjdGlvblVuaXQsIGNvbW1hbmROdW1iZXIsIHByb3RlY3Rpb24pO1xyXG4gICAgfSwgMjAwMCk7ICBcclxufSIsImltcG9ydCB7XHJcbiAgcm9zdGVySW1nSGVpZ2h0LFxyXG4gIHJvc3RlckltZ1dpZHRoXHJcbn0gZnJvbSAnLi4vcm9zdGVyU2V0dGluZ3MnO1xyXG5pbXBvcnQge3Jvc3Rlcn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3RvcmUvcm9zdGVyL3Jvc3Rlcic7XHJcblxyXG5leHBvcnQgY29uc3QgaXNVbml0U2VsZWN0ZWRJblJvc3RlciA9IChtb3VzZVg6bnVtYmVyLCBtb3VzZVk6bnVtYmVyKSA9PiB7XHJcbiAgZm9yKGxldCB1bml0IG9mIHJvc3Rlcikge1xyXG4gICAgbGV0IHgwID0gdW5pdC54O1xyXG4gICAgbGV0IHgxID0geDAgKyByb3N0ZXJJbWdXaWR0aDtcclxuICAgIGxldCB5MCA9IHVuaXQueTtcclxuICAgIGxldCB5MSA9IHkwICsgcm9zdGVySW1nSGVpZ2h0O1xyXG4gICAgaWYobW91c2VYID49IHgwICYmIG1vdXNlWCA8IHgxICYmIG1vdXNlWSA+PSB5MCAmJiBtb3VzZVkgPCB5MSkge1xyXG4gICAgICByZXR1cm4gdW5pdDtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG51bGw7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBhcm15TGF5b3V0SGVpZ2h0LFxyXG4gIGFybXlMYXlvdXRXaWR0aFxyXG59IGZyb20gJy4vYXJteUxheW91dCc7XHJcbmltcG9ydCB7XHJcbiAgaW5mb0xheW91dEhlaWdodCxcclxuICBpbmZvTGF5b3V0V2lkdGhcclxufSBmcm9tICcuL2luZm9MYXlvdXQnO1xyXG5pbXBvcnQge1xyXG4gIHVuaXRSb3N0ZXJIZWlnaHQsXHJcbiAgdW5pdFJvc3RlcldpZHRoXHJcbn0gZnJvbSAnLi9yb3N0ZXJMYXlvdXQnO1xyXG5pbXBvcnQge1xyXG4gIHN0YXJ0QmF0dGxlU3RhcnRZLFxyXG4gIHN0YXJ0QmF0dGxlSGVpZ2h0LFxyXG4gIHN0YXJ0QmF0dGxlV2lkdGhcclxufSBmcm9tICcuL2JvdHRvbUxheW91dCc7XHJcbmltcG9ydCB7XHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuL3VwcGVyTGF5b3V0JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYXJteUxheW91dEhlaWdodCxcclxuICBhcm15TGF5b3V0V2lkdGgsXHJcbiAgaW5mb0xheW91dEhlaWdodCxcclxuICBpbmZvTGF5b3V0V2lkdGgsXHJcbiAgdW5pdFJvc3RlckhlaWdodCxcclxuICB1bml0Um9zdGVyV2lkdGgsXHJcbiAgc3RhcnRCYXR0bGVTdGFydFksXHJcbiAgc3RhcnRCYXR0bGVIZWlnaHQsXHJcbiAgc3RhcnRCYXR0bGVXaWR0aCxcclxuICB0aXRsZUhlaWdodFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuL2xheW91dCc7XHJcblxyXG5leHBvcnQge1xyXG4gIHRpdGxlSGVpZ2h0XHJcbn1cclxuIiwiZXhwb3J0IGxldCBob3ZlcmVkVW5pdDphbnkgPSBudWxsO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNoYW5nZUhvdmVyZWRVbml0ID0gKHVuaXQ6YW55KSA9PiB7XHJcbiAgaWYodW5pdCkge1xyXG4gICAgaG92ZXJlZFVuaXQgPSB1bml0O1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge2Rpc3BsYXlBcm15fSBmcm9tICcuL2Rpc3BsYXlBcm15JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGlzcGxheUFybXlcclxufVxyXG4iLCJpbXBvcnQgeyBtYWluTWVudUN0eCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHsgc2lkZSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudS9zaWRlcy9zaWRlJztcclxuaW1wb3J0IHtcclxuICBwbGF5ZXJBcm15LFxyXG4gIGNvbXB1dGVyQXJteVxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL3N0b3JlL3Jvc3Rlci9hcm15JztcclxuaW1wb3J0IHtcclxuICB1bml0Um9zdGVyV2lkdGgsXHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge1xyXG4gIGFybXlJbWdIZWlnaHQsXHJcbiAgYXJteUltZ1dpZHRoXHJcbn0gZnJvbSAnLi4vYXJteVNldHRpbmdzJztcclxuaW1wb3J0IHsgdW5pdEljb25JbWFnZXMgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zdG9yZS9pbWFnZXMvdW5pdEljb25JbWFnZXMnO1xyXG5cclxuZXhwb3J0IGxldCBlbXB0eUJveDphbnk7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheUFybXkgPSAoaTpudW1iZXIgPSAxKSA9PiB7XHJcbiAgbGV0IGFybXk6YW55W10gPSBbXTtcclxuICBpZihzaWRlID09PSAncGxheWVyJykge1xyXG4gICAgYXJteSA9IHBsYXllckFybXk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFybXkgPSBjb21wdXRlckFybXk7XHJcbiAgfVxyXG5cclxuICBpZihhcm15Lmxlbmd0aCA+PSAxICYmIGFybXkubGVuZ3RoID49IGkpIHtcclxuICAgIGxldCB1bml0ID0gYXJteVtpIC0gMV07XHJcbiAgICBsZXQgeCA9IHVuaXQuYXJteVBvc2l0aW9uLng7XHJcbiAgICBsZXQgeSA9IHVuaXQuYXJteVBvc2l0aW9uLnk7XHJcbiAgICBtYWluTWVudUN0eC5kcmF3SW1hZ2UodW5pdEljb25JbWFnZXNbdW5pdC5uYW1lXSwgeCwgeSwgYXJteUltZ1dpZHRoLCBhcm15SW1nSGVpZ2h0KTtcclxuICAgIGkrKztcclxuICAgIGRpc3BsYXlBcm15KGkpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyBkcmF3IGVtcHR5IGJveFxyXG4gICAgbGV0IHVuaXROdW1iZXIgPSBhcm15Lmxlbmd0aDtcclxuICAgIGxldCBtYXJnaW5XaWR0aCA9IGFybXlJbWdXaWR0aCArIDEwO1xyXG4gICAgbGV0IG1hcmdpbkhlaWdodCA9IGFybXlJbWdIZWlnaHQgKyAxNTtcclxuICAgIGxldCBkZWZhdWx0V2lkdGggPSB1bml0Um9zdGVyV2lkdGggKyAyMDtcclxuICAgIGxldCB4Om51bWJlcjtcclxuICAgIGxldCB5Om51bWJlcjtcclxuICAgIGlmKGFybXkubGVuZ3RoID09PSAwKSB7IC8vIGlmIG5vIHVuaXRzIGluIGFybXlcclxuICAgICAgeCA9IHVuaXRSb3N0ZXJXaWR0aCsyMDsgLy8geCBhbmQgeSBkZWZhdWx0XHJcbiAgICAgIHkgPSB0aXRsZUhlaWdodCs2MDtcclxuICAgIH0gZWxzZSB7IC8vIHRoZXJlIGFyZSB1bml0cyByZW1haW4gaW4gYXJteVxyXG4gICAgICBsZXQgcHJldlggPSBhcm15W2FybXkubGVuZ3RoIC0gMV0uYXJteVBvc2l0aW9uLng7IC8vIHggYW5kIHkgbGFzdCB1bml0J3NcclxuICAgICAgbGV0IHByZXZZID0gYXJteVthcm15Lmxlbmd0aCAtIDFdLmFybXlQb3NpdGlvbi55OyAvLyBhcm15IHBvc2l0aW9uIHggYW5kXHJcbiAgICAgIGlmKHVuaXROdW1iZXIgJSA1ID09PSAwKSB7XHJcbiAgICAgICAgeCA9IGRlZmF1bHRXaWR0aDtcclxuICAgICAgICB5ID0gcHJldlkgKyBtYXJnaW5IZWlnaHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgeCA9IHByZXZYICsgbWFyZ2luV2lkdGg7XHJcbiAgICAgICAgeSA9IHByZXZZO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoaSA8PSAxMCkge1xyXG4gICAgICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2ZmZic7XHJcbiAgICAgIG1haW5NZW51Q3R4LmZpbGxSZWN0KHgsIHksIGFybXlJbWdXaWR0aCwgYXJteUltZ0hlaWdodCk7XHJcbiAgICAgIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICcjMDAwJztcclxuICAgICAgbWFpbk1lbnVDdHguc3Ryb2tlUmVjdCh4LCB5LCBhcm15SW1nV2lkdGgsIGFybXlJbWdIZWlnaHQpO1xyXG5cclxuICAgICAgZW1wdHlCb3ggPSB7XHJcbiAgICAgICAgaSxcclxuICAgICAgICB4LFxyXG4gICAgICAgIHksXHJcbiAgICAgICAgZmlsbGVkOiBmYWxzZVxyXG4gICAgICB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZW1wdHlCb3ggPSB7XHJcbiAgICAgICAgaSxcclxuICAgICAgICB4LFxyXG4gICAgICAgIHksXHJcbiAgICAgICAgZmlsbGVkOiB0cnVlXHJcbiAgICAgIH07XHJcbiAgICB9ICAgXHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZHJhd1JlbW92ZUljb25cclxufSBmcm9tICcuL3JlbW92ZUljb24nO1xyXG5cclxuZXhwb3J0IHtcclxuICBkcmF3UmVtb3ZlSWNvblxyXG59XHJcbiIsImltcG9ydCB7c2lkZX0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL21haW5NZW51L3NpZGVzL3NpZGUnO1xyXG5pbXBvcnQge1xyXG4gIGNvbXB1dGVyQXJteSxcclxuICBwbGF5ZXJBcm15XHJcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3RvcmUvcm9zdGVyL2FybXknO1xyXG5pbXBvcnQge2FybXlJbWdXaWR0aH0gZnJvbSAnLi4vYXJteVNldHRpbmdzJztcclxuXHJcbmV4cG9ydCBjb25zdCBpc1VuaXRTaG91bGRCZVJlbW92ZWQgPSAobW91c2VYOm51bWJlciwgbW91c2VZOm51bWJlcikgPT4ge1xyXG4gIGxldCBhcm15OmFueVtdID0gW107XHJcbiAgaWYoc2lkZSA9PT0gJ3BsYXllcicpIHtcclxuICAgIGFybXkgPSBwbGF5ZXJBcm15O1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhcm15ID0gY29tcHV0ZXJBcm15O1xyXG4gIH1cclxuICBmb3IobGV0IHVuaXQgb2YgYXJteSkge1xyXG4gICAgbGV0IHgwID0gdW5pdC5hcm15UG9zaXRpb24ueCArIGFybXlJbWdXaWR0aCAtIDE1O1xyXG4gICAgbGV0IHgxID0gdW5pdC5hcm15UG9zaXRpb24ueCArIGFybXlJbWdXaWR0aCAtIDU7XHJcbiAgICBsZXQgeTAgPSB1bml0LmFybXlQb3NpdGlvbi55ICsgNDtcclxuICAgIGxldCB5MSA9IHVuaXQuYXJteVBvc2l0aW9uLnkgKyAxNTtcclxuICAgIGlmKG1vdXNlWCA+PSB4MCAmJiBtb3VzZVggPCB4MSAmJiBtb3VzZVkgPj0geTAgJiYgbW91c2VZIDwgeTEpIHtcclxuICAgICAgcmV0dXJuIHVuaXQ7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBudWxsO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZHJhd01vbmV5Qm94XHJcbn0gZnJvbSAnLi9kcmF3TW9uZXlCb3gnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkcmF3TW9uZXlCb3hcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNoYW5nZVRvdGFsR29sZCxcclxuICBmaWxsVG90YWxHb2xkLFxyXG4gIHNob3dUb3RhbEdvbGRcclxufSBmcm9tICcuL3RvdGFsR29sZCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGNoYW5nZVRvdGFsR29sZCxcclxuICBmaWxsVG90YWxHb2xkLFxyXG4gIHNob3dUb3RhbEdvbGRcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRpc3BsYXlDaG9zZW5Vbml0c1xyXG59IGZyb20gJy4vYXJteUxheW91dCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGRpc3BsYXlDaG9zZW5Vbml0c1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZHJhd0JvdHRvbUxheW91dFxyXG59IGZyb20gJy4vZHJhd2xheW91dCc7XHJcbmltcG9ydCB7XHJcbiAgZmlsbExheW91dFxyXG59IGZyb20gJy4vZmlsbExheW91dCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGRyYXdCb3R0b21MYXlvdXQsXHJcbiAgZmlsbExheW91dFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgc3RhcnRCYXR0bGVIZWlnaHQsXHJcbiAgc3RhcnRCYXR0bGVTdGFydFksXHJcbiAgc3RhcnRCYXR0bGVXaWR0aFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcbmltcG9ydCB7XHJcbiAgbWFpbk1lbnVDdHhcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcblxyXG5leHBvcnQgY29uc3QgZmlsbExheW91dCA9ICgpID0+IHtcclxuICBtYWluTWVudUN0eC5jbGVhclJlY3QoMCwgc3RhcnRCYXR0bGVTdGFydFksIHN0YXJ0QmF0dGxlV2lkdGgsIHN0YXJ0QmF0dGxlSGVpZ2h0KTtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnIzJjMmYzMyc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFJlY3QoMCwgc3RhcnRCYXR0bGVTdGFydFksIHN0YXJ0QmF0dGxlV2lkdGgsIHN0YXJ0QmF0dGxlV2lkdGgpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYmF0dGxlU2V0dGluZ3NYLFxyXG4gIGJhdHRsZVNldHRpbmdzWSxcclxuICBoZWlnaHQsXHJcbiAgd2lkdGhcclxufSBmcm9tICcuLi8uLi9pbmZvU2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IG9uQ2hvb3NlQmF0dGxlU2V0dGluZ3MgPSAobW91c2VYOm51bWJlciwgbW91c2VZOm51bWJlcikgPT4ge1xyXG4gIGxldCB4MCA9IGJhdHRsZVNldHRpbmdzWDtcclxuICBsZXQgeDEgPSBiYXR0bGVTZXR0aW5nc1ggKyB3aWR0aDtcclxuICBsZXQgeTAgPSBiYXR0bGVTZXR0aW5nc1k7XHJcbiAgbGV0IHkxID0gYmF0dGxlU2V0dGluZ3NZICsgaGVpZ2h0O1xyXG4gIGlmKG1vdXNlWCA+PSB4MCAmJiBtb3VzZVggPCB4MSAmJiBtb3VzZVkgPj0geTAgJiYgbW91c2VZIDwgeTEpIHtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBoZWlnaHQsXHJcbiAgdW5pdEluZm9YLFxyXG4gIHVuaXRJbmZvWSxcclxuICB3aWR0aFxyXG59IGZyb20gJy4uLy4uL2luZm9TZXR0aW5ncyc7XHJcblxyXG5leHBvcnQgY29uc3Qgb25DaG9vc2VVbml0SW5mbyA9IChtb3VzZVg6bnVtYmVyLCBtb3VzZVk6bnVtYmVyKSA9PiB7XHJcbiAgbGV0IHgwID0gdW5pdEluZm9YO1xyXG4gIGxldCB4MSA9IHVuaXRJbmZvWCArIHdpZHRoO1xyXG4gIGxldCB5MCA9IHVuaXRJbmZvWTtcclxuICBsZXQgeTEgPSB1bml0SW5mb1kgKyBoZWlnaHQ7XHJcbiAgaWYobW91c2VYID49IHgwICYmIG1vdXNlWCA8IHgxICYmIG1vdXNlWSA+PSB5MCAmJiBtb3VzZVkgPCB5MSkge1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRpc3BsYXlJbmZvXHJcbn0gZnJvbSAnLi9kaXNwbGF5SW5mbyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGRpc3BsYXlJbmZvXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBiYXR0bGVTZXR0aW5nU3dpdGNoZXJcclxufSBmcm9tICcuL2JhdHRsZVNldHRpbmdTd2l0Y2hlcic7XHJcbmltcG9ydCB7XHJcbiAgc2hvd1N3aXRoZXJcclxufSBmcm9tICcuL3Nob3dTd2l0Y2hlcic7XHJcbmltcG9ydCB7XHJcbiAgdW5pdEluZm9Td2l0Y2hlclxyXG59IGZyb20gJy4vdW5pdEluZm9Td2l0Y2hlcic7XHJcblxyXG5leHBvcnQge1xyXG4gIGJhdHRsZVNldHRpbmdTd2l0Y2hlcixcclxuICBzaG93U3dpdGhlcixcclxuICB1bml0SW5mb1N3aXRjaGVyXHJcbn1cclxuIiwiaW1wb3J0IHttYWluTWVudUN0eH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQge1xyXG4gIGJhdHRsZVNldHRpbmdzWCxcclxuICBiYXR0bGVTZXR0aW5nc1ksXHJcbiAgaGVpZ2h0LFxyXG4gIHdpZHRoXHJcbn0gZnJvbSAnLi4vLi4vaW5mb1NldHRpbmdzJztcclxuaW1wb3J0IHtzaG93QmF0dGxlU2V0dGluZ3N9IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudS9zaG93L3Nob3dJbmZvJztcclxuXHJcbmV4cG9ydCBjb25zdCBiYXR0bGVTZXR0aW5nU3dpdGNoZXIgPSAoKSA9PiB7XHJcbiAgaWYoc2hvd0JhdHRsZVNldHRpbmdzKSB7XHJcbiAgICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2ZmZic7XHJcbiAgfSBlbHNlIHtcclxuICAgIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICcjY2RkMWQ2JztcclxuICB9XHJcbiAgbWFpbk1lbnVDdHguZmlsbFJlY3QoYmF0dGxlU2V0dGluZ3NYLCBiYXR0bGVTZXR0aW5nc1ksIHdpZHRoLCBoZWlnaHQpO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICcjMDAwJztcclxuICBtYWluTWVudUN0eC5zdHJva2VSZWN0KGJhdHRsZVNldHRpbmdzWCwgYmF0dGxlU2V0dGluZ3NZLCB3aWR0aCwgaGVpZ2h0KTtcclxuICAvLyB0ZXh0XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICcyNHB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFRleHQoJ0JhdHRsZSBTZXR0aW5ncycsIGJhdHRsZVNldHRpbmdzWCArIDUsIGJhdHRsZVNldHRpbmdzWSArIDIwKTtcclxufVxyXG4iLCJpbXBvcnQge21haW5NZW51Q3R4fSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7XHJcbiAgaGVpZ2h0LFxyXG4gIHVuaXRJbmZvWCxcclxuICB1bml0SW5mb1ksXHJcbiAgd2lkdGhcclxufSBmcm9tICcuLi8uLi9pbmZvU2V0dGluZ3MnO1xyXG5pbXBvcnQge1xyXG4gIHNob3dVbml0SW5mb1xyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudS9zaG93L3Nob3dJbmZvJztcclxuXHJcbmV4cG9ydCBjb25zdCB1bml0SW5mb1N3aXRjaGVyID0gKCkgPT4ge1xyXG4gIGlmKHNob3dVbml0SW5mbykge1xyXG4gICAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gJyNmZmYnO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2NkZDFkNic7XHJcbiAgfVxyXG4gIG1haW5NZW51Q3R4LmZpbGxSZWN0KHVuaXRJbmZvWCwgdW5pdEluZm9ZLCB3aWR0aCwgaGVpZ2h0KTtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnIzAwMCc7XHJcbiAgbWFpbk1lbnVDdHguc3Ryb2tlUmVjdCh1bml0SW5mb1gsIHVuaXRJbmZvWSwgd2lkdGgsIGhlaWdodCk7XHJcbiAgLy8gdGV4dFxyXG4gIG1haW5NZW51Q3R4LmZvbnQgPSAnMjRweCBzZXJpZic7XHJcbiAgbWFpbk1lbnVDdHgudGV4dEFsaWduID0gJ2xlZnQnO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxUZXh0KCdVbml0IEluZm8nLCB1bml0SW5mb1ggKyAzNSwgdW5pdEluZm9ZICsgMjApO1xyXG59XHJcbiIsImltcG9ydCB7IGxvYWRpbmdDdHggfSBmcm9tIFwiLi4vLi4vY29uZmlnL2NvbnRleHQvY29udGV4dFwiO1xyXG5pbXBvcnQgeyBsb2FkaW5nQ2FudmFzIH0gZnJvbSBcIi4uLy4uL2NvbmZpZy9jYW52YXMvbG9hZGluZ1wiO1xyXG5pbXBvcnQgeyBNQVBfV0lEVEgsIENBTlZBU19IRUlHSFQgfSBmcm9tIFwiLi4vLi4vY29uZmlnXCI7XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0xvYWRpbmdDYW52YXMgPSAoKSA9PiB7XHJcbiAgICBsb2FkaW5nQ2FudmFzLnN0eWxlLnpJbmRleCA9ICc3JztcclxuICAgIGxvYWRpbmdDdHguZmlsbFN0eWxlID0gJyNjY2MnO1xyXG4gICAgbG9hZGluZ0N0eC5maWxsUmVjdCgwLCAwLCBNQVBfV0lEVEgsIENBTlZBU19IRUlHSFQpO1xyXG4gICAgbG9hZGluZ0N0eC5mb250ID0gXCI0OHB4IHNlcmlmXCI7XHJcbiAgICBsb2FkaW5nQ3R4LmZpbGxTdHlsZSA9IFwiIzAwMFwiO1xyXG4gICAgbGV0IHggPSAoTUFQX1dJRFRIIC8gMikgLSAxMDA7XHJcbiAgICBsZXQgeSA9IChDQU5WQVNfSEVJR0hUIC8gMikgLSA1MDtcclxuICAgIGxvYWRpbmdDdHguZmlsbFRleHQoXCJMb2FkaW5nLi4uXCIsIHgsIHkpO1xyXG59IiwiaW1wb3J0IHtcclxuICBkZWxldGVOb2RlRnJvbUNvbXB1dGVyTm9kZXMsXHJcbiAgZGVsZXRlTm9kZUZyb21QbGF5ZXJOb2RlcyxcclxufSBmcm9tICcuL25vZGVzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGVsZXRlTm9kZUZyb21Db21wdXRlck5vZGVzLFxyXG4gIGRlbGV0ZU5vZGVGcm9tUGxheWVyTm9kZXNcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGdyaWRTaXplLFxyXG4gIE1BUF9IRUlHSFQsXHJcbiAgTUFQX1dJRFRIXHJcbn0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHtcclxuICBkZWxldGVPYmplY3RGcm9tQXJyYXksXHJcbiAgZ2V0Tm9kZUZyb21NYXBcclxufSBmcm9tICcuLi8uLi8uLi91dGlscyc7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gJy4uLy4uLy4uL21hcC9ub2Rlcy9NYXBOb2RlJztcclxuXHJcbmV4cG9ydCBsZXQgY29tcHV0ZXJVbml0c05vZGVzOiBNYXBOb2RlW10gPSBbXTtcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplQ29tcHV0ZXJVbml0c05vZGVzID0gKCkgPT4ge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgIGNvbnN0IGNvbXB1dGVyWDAgPSBNQVBfV0lEVEggLSAoZ3JpZFNpemUgKiAyKTtcclxuICAgIGNvbnN0IGNvbXB1dGVyWDEgPSBNQVBfV0lEVEg7XHJcbiAgICBjb25zdCBjb21wdXRlclkwID0gMDtcclxuICAgIGNvbnN0IGNvbXB1dGVyWTEgPSBNQVBfSEVJR0hUO1xyXG5cclxuICAgIGZvcihsZXQgeCA9IGNvbXB1dGVyWDA7IHggPD0gY29tcHV0ZXJYMTsgeCArPSBncmlkU2l6ZSkge1xyXG4gICAgICBmb3IobGV0IHkgPSBjb21wdXRlclkwOyB5IDw9IGNvbXB1dGVyWTE7IHkrPSBncmlkU2l6ZSkge1xyXG4gICAgICAgIGxldCBub2RlID0gZ2V0Tm9kZUZyb21NYXAoeCwgeSk7XHJcbiAgICAgICAgaWYobm9kZSkge1xyXG4gICAgICAgICAgY29tcHV0ZXJVbml0c05vZGVzLnB1c2gobm9kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXNvbHZlKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkZWxldGVOb2RlRnJvbUNvbXB1dGVyTm9kZXMgPSAobm9kZTogTWFwTm9kZSkgPT4ge1xyXG4gIGlmKG5vZGUpIHtcclxuICAgIGNvbXB1dGVyVW5pdHNOb2RlcyA9IGRlbGV0ZU9iamVjdEZyb21BcnJheShub2RlLCBjb21wdXRlclVuaXRzTm9kZXMpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGdyaWRTaXplLFxyXG4gIE1BUF9IRUlHSFQsXHJcbn0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHtcclxuICBkZWxldGVPYmplY3RGcm9tQXJyYXksXHJcbiAgZ2V0Tm9kZUZyb21NYXBcclxufSBmcm9tICcuLi8uLi8uLi91dGlscyc7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gJy4uLy4uLy4uL21hcC9ub2Rlcy9NYXBOb2RlJztcclxuXHJcbmV4cG9ydCBsZXQgcGxheWVyVW5pdHNOb2RlczogTWFwTm9kZVtdID0gW107XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZVBsYXllclVuaXRzTm9kZXMgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgY29uc3QgcGxheWVyWDAgPSAwO1xyXG4gICAgY29uc3QgcGxheWVyWDEgPSBncmlkU2l6ZSAqIDI7XHJcbiAgICBjb25zdCBwbGF5ZXJZMCA9IDA7XHJcbiAgICBjb25zdCBwbGF5ZXJZMSA9IE1BUF9IRUlHSFQ7XHJcbiAgICBmb3IobGV0IHggPSBwbGF5ZXJYMDsgeCA8PSBwbGF5ZXJYMTsgeCArPSBncmlkU2l6ZSkge1xyXG4gICAgICBmb3IobGV0IHkgPSBwbGF5ZXJZMDsgeSA8PSBwbGF5ZXJZMTsgeSs9IGdyaWRTaXplKSB7XHJcbiAgICAgICAgbGV0IG5vZGUgPSBnZXROb2RlRnJvbU1hcCh4LCB5KTtcclxuICAgICAgICBpZihub2RlKSB7XHJcbiAgICAgICAgICBwbGF5ZXJVbml0c05vZGVzLnB1c2gobm9kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXNvbHZlKCk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkZWxldGVOb2RlRnJvbVBsYXllck5vZGVzID0gKG5vZGU6IE1hcE5vZGUpID0+IHtcclxuICBpZihub2RlKSB7XHJcbiAgICBwbGF5ZXJVbml0c05vZGVzID0gZGVsZXRlT2JqZWN0RnJvbUFycmF5KG5vZGUsIHBsYXllclVuaXRzTm9kZXMpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge2xhdW5jaEdhbWV9IGZyb20gJy4vbGF1bmNoJztcclxuXHJcbmxhdW5jaEdhbWUoKTtcclxuIiwiaW1wb3J0IHtsYXVuY2hCYXR0bGV9IGZyb20gJy4vbGF1bmNoQmF0dGxlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgbGF1bmNoQmF0dGxlXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBNQVBfV0lEVEgsXHJcbiAgQ0FOVkFTX0hFSUdIVFxyXG59IGZyb20gJy4uJztcclxuXHJcbmV4cG9ydCBjb25zdCBhdXhpbGlhcnlDYW52YXM6YW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2F1eGlsaWFyeScpO1xyXG5cclxuaWYoYXV4aWxpYXJ5Q2FudmFzKSB7XHJcbiAgYXV4aWxpYXJ5Q2FudmFzLndpZHRoID0gTUFQX1dJRFRIO1xyXG4gIGF1eGlsaWFyeUNhbnZhcy5oZWlnaHQgPSBDQU5WQVNfSEVJR0hUO1xyXG59XHJcbiIsImV4cG9ydCBjb25zdCBNQVBfV0lEVEg6IG51bWJlciA9IDE1MjA7XHJcbmV4cG9ydCBjb25zdCBNQVBfSEVJR0hUOiBudW1iZXIgPSA2MDA7XHJcbmV4cG9ydCBjb25zdCBDQU5WQVNfSEVJR0hUOiBudW1iZXIgPSA3MjA7XHJcbiIsImV4cG9ydCBjb25zdCBncmlkU2l6ZTpudW1iZXIgPSA0MDtcclxuIiwiaW1wb3J0IHtcclxuICBtYWluTWVudU1vZGUsXHJcbiAgc2V0QmF0dGxlTW9kZSxcclxuICBzZXRNYWluTWVudU1vZGVcclxufSBmcm9tICcuL2dsb2JhbENvbmZpZyc7XHJcblxyXG5leHBvcnQge1xyXG4gIG1haW5NZW51TW9kZSxcclxuICBzZXRCYXR0bGVNb2RlLFxyXG4gIHNldE1haW5NZW51TW9kZVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgTUFQX0hFSUdIVCxcclxuICBNQVBfV0lEVEhcclxufSBmcm9tICcuLic7XHJcblxyXG5leHBvcnQgY29uc3QgYmFja2dyb3VuZENhbnZhczphbnkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFja2dyb3VuZCcpO1xyXG5cclxuaWYoYmFja2dyb3VuZENhbnZhcykge1xyXG4gIGJhY2tncm91bmRDYW52YXMud2lkdGggPSBNQVBfV0lEVEg7XHJcbiAgYmFja2dyb3VuZENhbnZhcy5oZWlnaHQgPSBNQVBfSEVJR0hUO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgQ0FOVkFTX0hFSUdIVCxcclxuICBNQVBfV0lEVEhcclxufSBmcm9tICcuLic7XHJcblxyXG5leHBvcnQgY29uc3QgY2FudmFzOmFueSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKTtcclxuXHJcbmlmKGNhbnZhcykge1xyXG4gIGNhbnZhcy53aWR0aCA9IE1BUF9XSURUSDtcclxuICBjYW52YXMuaGVpZ2h0ID0gQ0FOVkFTX0hFSUdIVDtcclxuICBjYW52YXMuc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWRcIjtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIE1BUF9XSURUSCxcclxuICBNQVBfSEVJR0hUXHJcbn0gZnJvbSAnLi4nO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRlcnJhaW46YW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlcnJhaW4nKTtcclxuXHJcbmlmKHRlcnJhaW4pIHtcclxuICB0ZXJyYWluLndpZHRoID0gTUFQX1dJRFRIO1xyXG4gIHRlcnJhaW4uaGVpZ2h0ID0gTUFQX0hFSUdIVDtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIENBTlZBU19IRUlHSFQsXHJcbiAgTUFQX1dJRFRIXHJcbn0gZnJvbSAnLi4nO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYWdBbmREcm9wQ2FudmFzOmFueSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkcmFnQW5kRHJvcCcpO1xyXG5cclxuaWYoZHJhZ0FuZERyb3BDYW52YXMpIHtcclxuICBkcmFnQW5kRHJvcENhbnZhcy53aWR0aCA9IE1BUF9XSURUSDtcclxuICBkcmFnQW5kRHJvcENhbnZhcy5oZWlnaHQgPSBDQU5WQVNfSEVJR0hUO1xyXG59XHJcbiIsImltcG9ydCB7TUFQX1dJRFRILCBDQU5WQVNfSEVJR0hUfSBmcm9tICcuLic7XHJcblxyXG5leHBvcnQgY29uc3QgbWFpbk1lbnU6YW55ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW5NZW51Jyk7XHJcblxyXG5pZihtYWluTWVudSkge1xyXG4gIG1haW5NZW51LndpZHRoID0gTUFQX1dJRFRIO1xyXG4gIG1haW5NZW51LmhlaWdodCA9IENBTlZBU19IRUlHSFQ7XHJcbiAgbWFpbk1lbnUuc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWRcIjtcclxufVxyXG4iLCJpbXBvcnQge2xvYWRJbWFnZX0gZnJvbSAnLi9sb2FkSW1hZ2UnO1xyXG5cclxuZXhwb3J0IHtcclxuICBsb2FkSW1hZ2VcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGFkZE5vZGVJbnRvQXJyYXlcclxufSBmcm9tICcuL3RvQXJyYXknO1xyXG5cclxuZXhwb3J0IHtcclxuICBhZGROb2RlSW50b0FycmF5XHJcbn1cclxuIiwiaW1wb3J0IHtpc09iamVjdEluQXJyYXl9IGZyb20gJy4uLy4uL29iamVjdCc7XHJcblxyXG5leHBvcnQgY29uc3QgYWRkTm9kZUludG9BcnJheSA9IChub2RlOmFueSwgYXJyOmFueVtdKSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRBcnIgPSBPYmplY3QuYXNzaWduKFtdLCBhcnIpO1xyXG4gIGlmKCFpc09iamVjdEluQXJyYXkobm9kZSwgYXJyKSkge1xyXG4gICAgdXBkYXRlZEFyci5wdXNoKG5vZGUpO1xyXG4gIH1cclxuICByZXR1cm4gdXBkYXRlZEFycjtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRlbGV0ZU9iamVjdEZyb21BcnJheSxcclxuICBpc09iamVjdEluQXJyYXksXHJcbiAgaXNPYmplY3RFbXB0eVxyXG59IGZyb20gJy4vb2JqVXRpbHMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkZWxldGVPYmplY3RGcm9tQXJyYXksXHJcbiAgaXNPYmplY3RJbkFycmF5LFxyXG4gIGlzT2JqZWN0RW1wdHlcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5HcmlkcyxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Ob2Rlc0luR3JpZHNcclxufSBmcm9tICcuL2Rpc3RhbmNlSW5Hcmlkcyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5HcmlkcyxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Ob2Rlc0luR3JpZHNcclxufVxyXG4iLCJpbXBvcnQge2dyaWRTaXplfSBmcm9tICcuLi8uLi8uLi9jb25maWcvbWFwJztcclxuXHJcbmV4cG9ydCBjb25zdCBnZXREaXN0YW5jZUJldHdlZW5Vbml0QW5kTm9kZUluR3JpZHMgPSAodW5pdDphbnksIG5vZGU6YW55KTpudW1iZXIgPT4ge1xyXG4gIGxldCBub2RlWDpudW1iZXIgPSBub2RlLng7XHJcbiAgbGV0IG5vZGVZOm51bWJlciA9IG5vZGUueTtcclxuICBsZXQgdW5pdFg6bnVtYmVyID0gdW5pdC5jdXJyZW50Tm9kZS54O1xyXG4gIGxldCB1bml0WTpudW1iZXIgPSB1bml0LmN1cnJlbnROb2RlLnk7XHJcbiAgbGV0IGRpc3RhbmNlWDpudW1iZXIgPSAoTWF0aC5hYnModW5pdFggLSBub2RlWCkpIC8gZ3JpZFNpemU7XHJcbiAgbGV0IGRpc3RhbmNlWTpudW1iZXIgPSAoTWF0aC5hYnModW5pdFkgLSBub2RlWSkpIC8gZ3JpZFNpemU7XHJcbiAgbGV0IGRpc3RhbmNlOm51bWJlciA9IGRpc3RhbmNlWCArIGRpc3RhbmNlWTtcclxuICByZXR1cm4gZGlzdGFuY2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXREaXN0YW5jZUJldHdlZW5Ud29Ob2Rlc0luR3JpZHMgPSAobm9kZTE6YW55LCBub2RlMjphbnkpOm51bWJlciA9PiB7XHJcbiAgbGV0IG5vZGUxWDpudW1iZXIgPSBub2RlMS54O1xyXG4gIGxldCBub2RlMVk6bnVtYmVyID0gbm9kZTEueTtcclxuICBsZXQgbm9kZTJYOm51bWJlciA9IG5vZGUyLng7XHJcbiAgbGV0IG5vZGUyWTpudW1iZXIgPSBub2RlMi55O1xyXG4gIGxldCBkaXN0YW5jZVg6bnVtYmVyID0gKE1hdGguYWJzKG5vZGUxWCAtIG5vZGUyWCkpIC8gZ3JpZFNpemU7XHJcbiAgbGV0IGRpc3RhbmNlWTpudW1iZXIgPSAoTWF0aC5hYnMobm9kZTFZIC0gbm9kZTJZKSkgLyBncmlkU2l6ZTtcclxuICBsZXQgZGlzdGFuY2U6bnVtYmVyID0gZGlzdGFuY2VYICsgZGlzdGFuY2VZO1xyXG4gIHJldHVybiBkaXN0YW5jZTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGdldE5vZGVGcm9tQXJyYXlcclxufSBmcm9tICcuL2Zyb21BcnJheSc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0Q2xvc2VzdFRvRW5lbXlTaWRlTm9kZXMsXHJcbiAgZ2V0Q2xvc2VzdFRvRW5lbXlOb2Rlc1xyXG59IGZyb20gJy4vY2xvc2VzdFRvRW5lbXknO1xyXG5pbXBvcnQge1xyXG4gIGdldEZhcnRoZXN0Tm9kZUZyb21FbmVteSxcclxuICBnZXRGYXJ0aGVzdFhOb2Rlc1xyXG59IGZyb20gJy4vZmFydGhlc3QnO1xyXG5pbXBvcnQge1xyXG4gIGdldE5vZGVGcm9tTWFwXHJcbn0gZnJvbSAnLi9mcm9tTWFwJztcclxuaW1wb3J0IHtcclxuICBnZXRNaW5WYWx1ZUZyb21Ob2RlcyxcclxuICBnZXRNYXhWYWx1ZUZyb21Ob2Rlc1xyXG59IGZyb20gJy4vZnJvbU5vZGUnO1xyXG5cclxuZXhwb3J0IHtcclxuICBnZXRDbG9zZXN0VG9FbmVteVNpZGVOb2RlcyxcclxuICBnZXRDbG9zZXN0VG9FbmVteU5vZGVzLFxyXG4gIGdldE5vZGVGcm9tQXJyYXksXHJcbiAgZ2V0RmFydGhlc3ROb2RlRnJvbUVuZW15LFxyXG4gIGdldEZhcnRoZXN0WE5vZGVzLFxyXG4gIGdldE5vZGVGcm9tTWFwLFxyXG4gIGdldE1pblZhbHVlRnJvbU5vZGVzLFxyXG4gIGdldE1heFZhbHVlRnJvbU5vZGVzXHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IGdldE5vZGVGcm9tQXJyYXkgPSAob2JqZWN0OmFueSwgYXJyOmFueVtdKTphbnkgPT4ge1xyXG4gIGZvcihsZXQgbm9kZSBvZiBhcnIpIHtcclxuICAgIGlmKG5vZGUueCA9PT0gb2JqZWN0LnggJiYgbm9kZS55ICYmIG9iamVjdC55KSB7XHJcbiAgICAgIHJldHVybiBub2RlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGdldE1pblZhbHVlRnJvbU5vZGVzXHJcbn0gZnJvbSAnLi4vLi4nO1xyXG5pbXBvcnQge2dldENsb3Nlc3ROb2RlVG9Vbml0fSBmcm9tICcuLi8uLi91bml0L2FjdGlvbnMnO1xyXG5pbXBvcnQge2hpZGluZ0VuZW1pZXN9IGZyb20gJy4uLy4uLy4uL3N0b3JlL0FJL2VuZW1pZXMvaGlkaW5nRW5lbWllcyc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Q2xvc2VzdFRvRW5lbXlTaWRlTm9kZXMgPSAobm9kZXM6YW55KTphbnlbXSA9PiB7XHJcbiAgbGV0IGNsb3Nlc3ROb2RlczphbnlbXSA9IFtdO1xyXG4gIGxldCBtaW5WYWx1ZSA9IGdldE1pblZhbHVlRnJvbU5vZGVzKCd4Jywgbm9kZXMpO1xyXG4gIGZvcihsZXQgbm9kZSBvZiBub2Rlcykge1xyXG4gICAgaWYobm9kZS54ID09PSBtaW5WYWx1ZSkgeyAvLyBtaW4geCBpcyBjbG9zZXIgdG8gZW5lbXkocGxheWVyKSBzaWRlXHJcbiAgICAgIGNsb3Nlc3ROb2Rlcy5wdXNoKG5vZGUpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gY2xvc2VzdE5vZGVzO1xyXG59XHJcblxyXG4vKlxyXG4gIGdldCBjbG9zZXN0IG5vZGUgdG8gZW5lbXkgc2lkZSBvclxyXG4gIGhpZGVkIGVuZW1pZXMsIHRoZXNlIG5vZGVzIGFyZVxyXG4gIHByaW9yaXRpemUgZm9yIGV4cGxvcmF0aW9uXHJcbiovXHJcbmV4cG9ydCBjb25zdCBnZXRDbG9zZXN0VG9FbmVteU5vZGVzID0gKG5vZGVzOmFueVtdKTphbnlbXSA9PiB7XHJcbiAgbGV0IGNsb3Nlc3ROb2RlczphbnlbXSA9IFtdO1xyXG4gIGlmKGhpZGluZ0VuZW1pZXMubGVuZ3RoID09PSAwKSB7IC8vIG5vIHVuaXRzIGFyZSBzcG90dGVkXHJcbiAgICBjbG9zZXN0Tm9kZXMgPSBnZXRDbG9zZXN0VG9FbmVteVNpZGVOb2Rlcyhub2Rlcyk7IC8vIGdldCBub2RlcyB0aGF0IGNsb3NlIHRvIGVuZW15IHNpZGVcclxuICB9IGVsc2Uge1xyXG4gICAgZm9yKGxldCBoaWRpbmdFbmVteSBvZiBoaWRpbmdFbmVtaWVzKSB7IC8vIHRoZXJlIGFyZSBoaWRlZCBlbmVteVxyXG4gICAgICBsZXQgY2xvc2VzdE5vZGUgPSBnZXRDbG9zZXN0Tm9kZVRvVW5pdChoaWRpbmdFbmVteSwgbm9kZXMpO1xyXG4gICAgICBjbG9zZXN0Tm9kZXMucHVzaChjbG9zZXN0Tm9kZSk7IC8vIGFkZCBjbG9zZXN0Tm9kZSBpbnRvIG5vZGVzIGFycmF5XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBjbG9zZXN0Tm9kZXM7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBjb21wdXRlclVuaXRzLFxyXG4gIHBsYXllclVuaXRzLFxyXG4gIHVuaXRzXHJcbn0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0cyc7XHJcblxyXG5pbXBvcnQge2dyaWRTaXplfSBmcm9tICcuLi8uLi8uLi9jb25maWcvbWFwJztcclxuaW1wb3J0IHtcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMsXHJcbiAgZGVsZXRlVW5pdEZyb21BcnJheVxyXG59IGZyb20gJy4uL2dlbmVyYWwnO1xyXG5pbXBvcnQge2dldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5Hcmlkc30gZnJvbSAnLi4vLi4vbm9kZSc7XHJcbmltcG9ydCBVbml0IGZyb20gJy4uLy4uLy4uL3VuaXQvdHlwZXMvVW5pdCc7XHJcblxyXG5cclxuLypcclxuICBnZXQgY2xvc2VzdE5vZGUgZnJvbSBub2RlcyBhcnJheSB0byBzcGVjaWZpYyB1bml0XHJcbiovXHJcbmV4cG9ydCBjb25zdCBnZXRDbG9zZXN0Tm9kZVRvVW5pdCA9ICh1bml0OlVuaXQsIG5vZGVzOmFueSk6YW55ID0+IHtcclxuICBsZXQgY2xvc2VzdE5vZGU6YW55ID0gbm9kZXNbMF07XHJcbiAgZm9yKGxldCBpID0gMTsgaSA8IG5vZGVzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBsZXQgY2xvc2VzdE5vZGVEaXN0YW5jZSA9IGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5Hcmlkcyh1bml0LCBjbG9zZXN0Tm9kZSk7XHJcbiAgICBsZXQgbm9kZURpc3RhbmNlID0gZ2V0RGlzdGFuY2VCZXR3ZWVuVW5pdEFuZE5vZGVJbkdyaWRzKHVuaXQsIG5vZGVzW2ldKTtcclxuICAgIGlmKG5vZGVEaXN0YW5jZSA8IGNsb3Nlc3ROb2RlRGlzdGFuY2UpIHtcclxuICAgICAgY2xvc2VzdE5vZGUgPSBub2Rlc1tpXTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIGNsb3Nlc3ROb2RlO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QmVzdFVuaXRzQnlQcm9wZXJ0eSA9ICh1bml0czpVbml0W10sIHByb3BlcnR5OnN0cmluZyk6VW5pdFtdID0+IHtcclxuICBsZXQgdXBkYXRlZFVuaXRzOmFueVtdID0gT2JqZWN0LmFzc2lnbihbXSwgdW5pdHMpO1xyXG4gIGxldCBiZXN0VW5pdHM6VW5pdFtdID0gW107XHJcbiAgbGV0IGJlc3RVbml0OmFueSA9IHVwZGF0ZWRVbml0c1swXTtcclxuICAvLyBnZXQgYmVzdCB1bml0XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IHVwZGF0ZWRVbml0cy5sZW5ndGg7ICsraSkge1xyXG4gICAgaWYoYmVzdFVuaXRbcHJvcGVydHldIDwgdXBkYXRlZFVuaXRzW2ldW3Byb3BlcnR5XSkge1xyXG4gICAgICBiZXN0VW5pdCA9IHVwZGF0ZWRVbml0c1tpXTtcclxuICAgIH1cclxuICB9XHJcbiAgLy8gZmluZCBhbGwgYmVzdCB1bml0c1xyXG4gIGZvcihsZXQgdW5pdCBvZiB1cGRhdGVkVW5pdHMpIHtcclxuICAgICAgaWYodW5pdFtwcm9wZXJ0eV0gPT09IGJlc3RVbml0W3Byb3BlcnR5XSkge1xyXG4gICAgICAgIGJlc3RVbml0cy5wdXNoKHVuaXQpO1xyXG4gICAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBiZXN0VW5pdHM7XHJcbn1cclxuXHJcbi8qXHJcbiAgcmV0dXJuIFVuaXRzIHRoYXQgYXJlIGNsb3Nlc3QgdG8gdGhlIG5vZGUgY2VudGVyXHJcbiovXHJcbmV4cG9ydCBjb25zdCBmaW5kQ2xvc2VzdFVuaXRzVG9UaGVOb2RlQ2VudGVyID0gKG5vZGU6YW55LCB1bml0czpVbml0W10pOlVuaXRbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRVbml0czpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCB1bml0cyk7XHJcbiAgLy8gY2FsY3VsYXRlIHRoZSBjZW50ZXIgb2YgdGhlIG5vZGVcclxuICBjb25zdCBjZW50ZXJYOm51bWJlciA9IG5vZGUueCArIChncmlkU2l6ZSAqIDAuNSk7XHJcbiAgY29uc3QgY2VudGVyWTpudW1iZXIgPSBub2RlLnkgKyAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gIC8vIGZpbmQgY2xvc2VzdCB1bml0c1xyXG4gIGxldCBjbG9zZXN0VW5pdHM6VW5pdFtdID0gW107XHJcbiAgbGV0IGNsb3Nlc3REaXN0YW5jZTpudW1iZXI7XHJcbiAgbGV0IGNsb3Nlc3RVbml0OlVuaXQgPSB1cGRhdGVkVW5pdHNbMF07XHJcbiAgaWYodXBkYXRlZFVuaXRzLmxlbmd0aCA+IDEpIHsgLy8gbW9yZSB0aGFuIDEgdW5pdFxyXG4gICAgZm9yKGxldCBpID0gMTsgaSA8IHVwZGF0ZWRVbml0cy5sZW5ndGg7ICsraSkge1xyXG4gICAgICBjb25zdCBjbG9zZXN0VW5pdFg6bnVtYmVyID0gY2xvc2VzdFVuaXQuY2VudGVyWDtcclxuICAgICAgY29uc3QgY2xvc2VzdFVuaXRZOm51bWJlciA9IGNsb3Nlc3RVbml0LmNlbnRlclk7XHJcbiAgICAgIGNvbnN0IGN1cnJlbnRVbml0WDpudW1iZXIgPSB1cGRhdGVkVW5pdHNbaV0uY2VudGVyWDtcclxuICAgICAgY29uc3QgY3VycmVudFVuaXRZOm51bWJlciA9IHVwZGF0ZWRVbml0c1tpXS5jZW50ZXJZO1xyXG5cclxuICAgICAgLy8gZmluZCBkaWZmZXJlbmNlIGluIFggYW5kIFlcclxuICAgICAgY29uc3QgY2xvc2VzdFVuaXREWDpudW1iZXIgPSBNYXRoLmFicyhjbG9zZXN0VW5pdFggLSBjZW50ZXJYKTtcclxuICAgICAgY29uc3QgY2xvc2VzdFVuaXREWTpudW1iZXIgPSBNYXRoLmFicyhjbG9zZXN0VW5pdFkgLSBjZW50ZXJZKTtcclxuICAgICAgY29uc3QgY3VycmVudFVuaXREWDpudW1iZXIgPSBNYXRoLmFicyhjdXJyZW50VW5pdFggLSBjZW50ZXJYKTtcclxuICAgICAgY29uc3QgY3VycmVudFVuaXREWTpudW1iZXIgPSBNYXRoLmFicyhjdXJyZW50VW5pdFkgLSBjZW50ZXJZKTtcclxuXHJcbiAgICAgIC8vIGZpbmQgZGlzdGFuY2VcclxuICAgICAgY29uc3QgY2xvc2VzdFVuaXREaXN0Om51bWJlciA9IE1hdGguc3FydChNYXRoLnBvdyhjbG9zZXN0VW5pdERYLCAyKSArIE1hdGgucG93KGNsb3Nlc3RVbml0RFksIDIpKTtcclxuICAgICAgY29uc3QgY3VycmVudFVuaXREaXN0Om51bWJlciA9IE1hdGguc3FydChNYXRoLnBvdyhjdXJyZW50VW5pdERYLCAyKSArIE1hdGgucG93KGN1cnJlbnRVbml0RFksIDIpKTtcclxuICAgICAgY2xvc2VzdERpc3RhbmNlID0gY2xvc2VzdFVuaXREaXN0O1xyXG4gICAgICAvLyBjb21wYXJlIGRpc3RhbmNlXHJcbiAgICAgIGlmKGN1cnJlbnRVbml0RGlzdCA8IGNsb3Nlc3RVbml0RGlzdCkge1xyXG4gICAgICAgIC8vIG5vdyBjdXJyZW50IHVuaXQgaGFzIGJlY29tZSBjbG9zZXN0IHVuaXRcclxuICAgICAgICBjbG9zZXN0VW5pdCA9IHVwZGF0ZWRVbml0c1tpXTtcclxuICAgICAgICBjbG9zZXN0RGlzdGFuY2UgPSBjdXJyZW50VW5pdERpc3Q7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIG5vdyBhZGQgYWxsIHVuaXRzIHdpdGggdGhlIGNsb3Nlc3REaXN0YW5jZSB0byBjbG9zZXN0VW5pdHNcclxuICBmb3IobGV0IHVuaXQgb2YgdXBkYXRlZFVuaXRzKSB7XHJcbiAgICBjb25zdCBjdXJyZW50VW5pdFg6bnVtYmVyID0gdW5pdC5jZW50ZXJYO1xyXG4gICAgY29uc3QgY3VycmVudFVuaXRZOm51bWJlciA9IHVuaXQuY2VudGVyWTtcclxuXHJcbiAgICAvLyBmaW5kIGRpZmZlcmVuY2UgaW4gWCBhbmQgWVxyXG4gICAgY29uc3QgY3VycmVudFVuaXREWDpudW1iZXIgPSBNYXRoLmFicyhjdXJyZW50VW5pdFggLSBjZW50ZXJYKTtcclxuICAgIGNvbnN0IGN1cnJlbnRVbml0RFk6bnVtYmVyID0gTWF0aC5hYnMoY3VycmVudFVuaXRZIC0gY2VudGVyWSk7XHJcblxyXG4gICAgLy8gZmluZCBkaXN0YW5jZVxyXG4gICAgY29uc3QgY3VycmVudFVuaXREaXN0Om51bWJlciA9IE1hdGguc3FydChNYXRoLnBvdyhjdXJyZW50VW5pdERYLCAyKSArIE1hdGgucG93KGN1cnJlbnRVbml0RFksIDIpKTtcclxuICAgIGlmKGN1cnJlbnRVbml0RGlzdCA9PT0gY2xvc2VzdERpc3RhbmNlKSB7XHJcbiAgICAgIGNsb3Nlc3RVbml0cy5wdXNoKHVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIGNsb3Nlc3RVbml0cztcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGdldE1pblZhbHVlRnJvbU5vZGVzLFxyXG4gIGdldE1heFZhbHVlRnJvbU5vZGVzLFxyXG4gIGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5Hcmlkc1xyXG59IGZyb20gJy4uLy4uJztcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRGYXJ0aGVzdE5vZGVGcm9tRW5lbXkgPSAoZW5lbXk6YW55LCBub2RlczphbnlbXSk6YW55ID0+IHtcclxuICBsZXQgZmFydGhlc3ROb2RlOmFueSA9IG5vZGVzWzBdO1xyXG4gIGZvcihsZXQgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7ICsraSkge1xyXG4gICAgbGV0IGZhcnRoZXN0Tm9kZURpc3RhbmNlID0gZ2V0RGlzdGFuY2VCZXR3ZWVuVW5pdEFuZE5vZGVJbkdyaWRzKGVuZW15LCBmYXJ0aGVzdE5vZGUpO1xyXG4gICAgbGV0IG5vZGVEaXN0YW5jZSA9IGdldERpc3RhbmNlQmV0d2VlblVuaXRBbmROb2RlSW5HcmlkcyhlbmVteSwgbm9kZXNbaV0pO1xyXG4gICAgaWYobm9kZURpc3RhbmNlID4gZmFydGhlc3ROb2RlRGlzdGFuY2UpIHtcclxuICAgICAgZmFydGhlc3ROb2RlID0gbm9kZXNbaV07XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBmYXJ0aGVzdE5vZGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRGYXJ0aGVzdFhOb2RlcyA9IChub2RlczphbnlbXSk6YW55W10gPT4ge1xyXG4gIGxldCBmYXJ0aGVzdE5vZGVzOmFueVtdID0gW107XHJcbiAgbGV0IG1pblZhbHVlID0gZ2V0TWluVmFsdWVGcm9tTm9kZXMoJ3gnLCBub2Rlcyk7XHJcbiAgbGV0IG1heFZhbHVlID0gZ2V0TWF4VmFsdWVGcm9tTm9kZXMoJ3gnLCBub2Rlcyk7XHJcbiAgZm9yKGxldCBub2RlIG9mIG5vZGVzKSB7XHJcbiAgICBpZihub2RlLnggPT09IG1pblZhbHVlIHx8IG5vZGUueCA9PT0gbWF4VmFsdWUpIHtcclxuICAgICAgZmFydGhlc3ROb2Rlcy5wdXNoKG5vZGUpO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gZmFydGhlc3ROb2RlcztcclxufVxyXG4iLCJpbXBvcnQge2NsZWFyTWFwfSBmcm9tICcuL2NsZWFyTWFwJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgY2xlYXJNYXBcclxufVxyXG4iLCJpbXBvcnQge2N0eH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQge1xyXG4gIE1BUF9XSURUSCxcclxuICBDQU5WQVNfSEVJR0hUXHJcbn0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhck1hcCA9ICgpID0+IHtcclxuICBjdHguY2xlYXJSZWN0KDAsIDAsIE1BUF9XSURUSCwgQ0FOVkFTX0hFSUdIVCk7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBkcmF3R3JpZFxyXG59IGZyb20gJy4vZHJhd0dyaWQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkcmF3R3JpZFxyXG59XHJcbiIsImltcG9ydCB7Y2FudmFzfSBmcm9tICcuLi8uLi9jb25maWcvY2FudmFzJztcclxuaW1wb3J0IHtjdHh9IGZyb20gJy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtcclxuICBNQVBfV0lEVEgsXHJcbiAgTUFQX0hFSUdIVCxcclxuICBncmlkU2l6ZVxyXG59IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0dyaWQgPSAoKSA9PiB7XHJcbiAgZm9yKGxldCB5ID0gMDsgeSA8PSBNQVBfSEVJR0hUOyB5Kz0gZ3JpZFNpemUpIHtcclxuICAgIGZvcihsZXQgeCA9IDA7IHggPD0gTUFQX1dJRFRIOyB4Kz0gZ3JpZFNpemUpIHtcclxuICAgICAgY3R4LnN0cm9rZVJlY3QoeCwgeSwgZ3JpZFNpemUsIGdyaWRTaXplKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBhZGROZWlnaGJvcnMsXHJcbiAgbmVpZ2hib3JzXHJcbn0gZnJvbSAnLi9hZGROZWlnaGJvcnMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBhZGROZWlnaGJvcnMsXHJcbiAgbmVpZ2hib3JzXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBNQVBfSEVJR0hULFxyXG4gIGdyaWRTaXplLFxyXG4gIE1BUF9XSURUSFxyXG59IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gJy4uL25vZGVzL01hcE5vZGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IG5laWdoYm9ycyA9IChtYXA6IE1hcE5vZGVbXSwgbm9kZTogTWFwTm9kZSk6IE1hcE5vZGVbXSA9PiB7XHJcbiAgbGV0IGRpcnMgPSBbXHJcbiAgICB7eDogLWdyaWRTaXplLCB5OiAtZ3JpZFNpemV9LFxyXG4gICAge3g6IDAsIHk6IC1ncmlkU2l6ZSwgZGlzdGFuY2U6IDEwfSxcclxuICAgIHt4OiBncmlkU2l6ZSwgeTogLWdyaWRTaXplfSxcclxuICAgIHt4OiAtZ3JpZFNpemUsIHk6IDB9LFxyXG4gICAge3g6IGdyaWRTaXplLCB5OiAwfSxcclxuICAgIHt4OiAtZ3JpZFNpemUsIHk6IGdyaWRTaXplfSxcclxuICAgIHt4OiAwLCB5OiBncmlkU2l6ZX0sXHJcbiAgICB7eDogZ3JpZFNpemUsIHk6IGdyaWRTaXplfVxyXG4gIF07XHJcbiAgbGV0IG5vZGVOZWlnaGJvcnM6IE1hcE5vZGVbXSA9IFtdO1xyXG4gIGZvcihsZXQgZGlyIG9mIGRpcnMpIHtcclxuICAgIGxldCBuZWlnaGJvciA9IHtcclxuICAgICAgeDogbm9kZS54ICsgZGlyLngsXHJcbiAgICAgIHk6IG5vZGUueSArIGRpci55XHJcbiAgICB9XHJcbiAgICBpZihuZWlnaGJvci54ID49IDAgJiYgbmVpZ2hib3IueCA8PSBNQVBfV0lEVEggJiYgbmVpZ2hib3IueSA+PSAwICYmIG5laWdoYm9yLnkgPD0gTUFQX0hFSUdIVCkge1xyXG4gICAgICBsZXQgZm91bmROb2RlOiBNYXBOb2RlO1xyXG4gICAgICBmb3IobGV0IG5vZGUgb2YgbWFwKSB7XHJcbiAgICAgICAgaWYobmVpZ2hib3IueCA9PT0gbm9kZS54ICYmIG5laWdoYm9yLnkgPT09IG5vZGUueSkge1xyXG4gICAgICAgICAgZm91bmROb2RlID0gbm9kZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYoZm91bmROb2RlKSB7XHJcbiAgICAgICAgbm9kZU5laWdoYm9ycy5wdXNoKGZvdW5kTm9kZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG5vZGVOZWlnaGJvcnM7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBhZGROZWlnaGJvcnMgPSAobWFwOmFueVtdKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgZm9yKGxldCBub2RlIG9mIG1hcCkge1xyXG4gICAgICBsZXQgbiA9IG5laWdoYm9ycyhtYXAsIG5vZGUpO1xyXG4gICAgICBub2RlLm5laWdoYm9ycyA9IG47XHJcbiAgICB9XHJcbiAgICByZXNvbHZlKCk7XHJcbiAgfSk7XHJcbiAgXHJcbn1cclxuIiwiaW1wb3J0IHtjcmVhdGVOb2Rlc30gZnJvbSAnLi9jcmVhdGVOb2Rlcyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGNyZWF0ZU5vZGVzXHJcbn1cclxuIiwiaW1wb3J0IHsgTUFQX1dJRFRILCBNQVBfSEVJR0hULCBncmlkU2l6ZSB9IGZyb20gXCIuLi8uLi9jb25maWdcIjtcclxuXHJcbmNsYXNzIE1hcE5vZGUge1xyXG4gICAgaWQ6IG51bWJlcjtcclxuICAgIHg6IG51bWJlcjtcclxuICAgIHk6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpZDogbnVtYmVyLCB4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgICAgIGlmKHggJSBncmlkU2l6ZSAhPT0gMCB8fCB5ICUgZ3JpZFNpemUgIT09IDApIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm9kZSBjb29yZGluYXRlcyBkbyBub3QgY29ycmVzcG9uZHMgdG8gbWFwIGdyaWQgc2l6ZVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoeCA+PSAwICYmIHggPD0gTUFQX1dJRFRIICYmIHkgPj0gMCAmJiB5IDw9IE1BUF9IRUlHSFQpIHtcclxuICAgICAgICAgICAgdGhpcy5pZCA9IGlkO1xyXG4gICAgICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgICAgICB0aGlzLnkgPSB5O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vZGUgaXMgb3V0IG9mIGJvdW5kXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWFwTm9kZTsiLCJpbXBvcnQge1xyXG4gIGNyZWF0ZU9uZU9ic3RhY2xlXHJcbn0gZnJvbSAnLi9jcmVhdGVPYnN0YWNsZSc7XHJcblxyXG5pbXBvcnQge1xyXG4gIGNyZWF0ZU9ic3RhY2xlc1xyXG59IGZyb20gJy4vY3JlYXRlT2JzdGFjbGVzJztcclxuXHJcbmltcG9ydCB7XHJcbiAgY3JlYXRlVW5pdE9ic3RhY2xlXHJcbn0gZnJvbSAnLi91bml0T2JzdGFjbGUnO1xyXG5cclxuZXhwb3J0IHtcclxuICBjcmVhdGVPbmVPYnN0YWNsZSxcclxuICBjcmVhdGVPYnN0YWNsZXMsXHJcbiAgY3JlYXRlVW5pdE9ic3RhY2xlXHJcbn1cclxuIiwiaW1wb3J0IHsgZ3JpZFNpemUgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5pbXBvcnQge1xyXG4gIGRlbGV0ZU9iamVjdEZyb21BcnJheSxcclxuICBkcmF3T2JzdGFjbGVcclxufSBmcm9tICcuLi8uLi91dGlscyc7XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlT25lT2JzdGFjbGUgPSAobWFwOmFueVtdLCBwb3NpdGlvblg6bnVtYmVyLCBwb3NpdGlvblk6bnVtYmVyLCB0eXBlOnN0cmluZz0nZm9yZXN0JykgPT4ge1xyXG4gIGxldCBub2RlID0ge1xyXG4gICAgeDogcG9zaXRpb25YLFxyXG4gICAgeTogcG9zaXRpb25ZXHJcbiAgfTtcclxuICBpZih0eXBlID09PSAnZm9yZXN0JykgZHJhd09ic3RhY2xlKG5vZGUueCwgbm9kZS55LCBncmlkU2l6ZSwgZ3JpZFNpemUsICcuL3NyYy9pbWcvdGVycmFpbi90cmVlcy5wbmcnKTtcclxuICBlbHNlIGlmKHR5cGUgPT09ICdtb3VudGFpbicpIGRyYXdPYnN0YWNsZShub2RlLngsIG5vZGUueSwgZ3JpZFNpemUsIGdyaWRTaXplLCcuL3NyYy9pbWcvdGVycmFpbi9tb3VudGFpbi5wbmcnKTtcclxuICBlbHNlIGlmKHR5cGUgPT09ICdyaXZlcicpIGRyYXdPYnN0YWNsZShub2RlLngsIG5vZGUueSwgZ3JpZFNpemUsIGdyaWRTaXplLCcuL3NyYy9pbWcvdGVycmFpbi9yaXZlci5qcGcnKTtcclxuICByZXR1cm4gZGVsZXRlT2JqZWN0RnJvbUFycmF5KG5vZGUsIG1hcClcclxufVxyXG4iLCJpbXBvcnQge2luaXRpYWxNYXB9IGZyb20gJy4uL2NyZWF0ZU1hcC9pbml0aWFsTWFwJztcclxuaW1wb3J0IHsgZ3JpZFNpemUgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5pbXBvcnQge1xyXG4gIGRlbGV0ZU9iamVjdEZyb21BcnJheSxcclxuICBkcmF3T2JzdGFjbGVcclxufSBmcm9tICcuLi8uLi91dGlscyc7XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlT2JzdGFjbGVzID0gKHN0YXJ0WDpudW1iZXIsIGZpbmlzaFg6bnVtYmVyLCBzdGFydFk6bnVtYmVyLCBmaW5pc2hZOm51bWJlciwgdHlwZTpzdHJpbmc9J2ZvcmVzdCcpID0+IHtcclxuICBsZXQgbmV3TWFwOmFueVtdID0gaW5pdGlhbE1hcDtcclxuICBmb3IobGV0IHggPSBzdGFydFg7IHggPD0gZmluaXNoWDsgeCArPSBncmlkU2l6ZSkge1xyXG4gICAgZm9yKGxldCB5ID0gc3RhcnRZOyB5IDw9IGZpbmlzaFk7IHkgKz0gZ3JpZFNpemUpIHtcclxuICAgICAgbGV0IG5vZGUgPSB7XHJcbiAgICAgICAgeCxcclxuICAgICAgICB5XHJcbiAgICAgIH1cclxuICAgICAgbmV3TWFwID0gZGVsZXRlT2JqZWN0RnJvbUFycmF5KG5vZGUsIG5ld01hcCk7XHJcbiAgICAgIGxldCBzcmM6c3RyaW5nO1xyXG4gICAgICBpZih0eXBlID09PSAnZm9yZXN0Jykgc3JjPScuL3NyYy9pbWcvdGVycmFpbi90cmVlcy5wbmcnO1xyXG4gICAgICBlbHNlIGlmKHR5cGUgPT09ICdtb3VudGFpbicpIHNyYz0nL3NyYy9pbWcvdGVycmFpbi9tb3VudGFpbi5wbmcnO1xyXG4gICAgICBlbHNlIGlmKHR5cGUgPT09ICdyaXZlcicpIHNyYz0nLi9zcmMvaW1nL3RlcnJhaW4vcml2ZXIuanBnJztcclxuICAgICAgZHJhd09ic3RhY2xlKG5vZGUueCwgbm9kZS55LCBncmlkU2l6ZSwgZ3JpZFNpemUsIHNyYyk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBuZXdNYXA7XHJcbn1cclxuIiwiaW1wb3J0IHtkZWxldGVPYmplY3RGcm9tQXJyYXl9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVVbml0T2JzdGFjbGUgPSAobWFwOmFueVtdLCBwb3NpdGlvblg6bnVtYmVyLCBwb3NpdGlvblk6bnVtYmVyKSA9PiB7XHJcbiAgbGV0IG5vZGUgPSB7XHJcbiAgICB4OiBwb3NpdGlvblgsXHJcbiAgICB5OiBwb3NpdGlvbllcclxuICB9O1xyXG4gIHJldHVybiBkZWxldGVPYmplY3RGcm9tQXJyYXkobm9kZSwgbWFwKVxyXG59XHJcbiIsImltcG9ydCB7IGdyaWRTaXplIH0gZnJvbSBcIi4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBzZWFyY2hNYXAgfSBmcm9tIFwiLi4vLi4vbWFwL2NyZWF0ZU1hcC9pbml0aWFsTWFwXCI7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gXCIuLi8uLi9tYXAvbm9kZXMvTWFwTm9kZVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZpbmRYSW5TZWFyY2hNYXAgPSAoXHJcbiAgICBsZWZ0OiBudW1iZXIsXHJcbiAgICByaWdodDogbnVtYmVyLFxyXG4gICAgc2VhcmNoQ29vcmRpbmF0ZTogbnVtYmVyLFxyXG4pOiBNYXBOb2RlW10gPT4ge1xyXG4gICAgaWYocmlnaHQgPj0gbGVmdCkge1xyXG4gICAgICAgIGxldCBtZWRpdW0gPSBNYXRoLmZsb29yKGxlZnQgKyAocmlnaHQgLSBsZWZ0KSAvIDIpO1xyXG4gICAgICAgIGxldCBjb29yZGluYXRlID0gbWVkaXVtICogZ3JpZFNpemU7XHJcbiAgICAgICAgaWYoc2VhcmNoQ29vcmRpbmF0ZSA+PSBjb29yZGluYXRlICYmIHNlYXJjaENvb3JkaW5hdGUgPCBjb29yZGluYXRlICsgZ3JpZFNpemUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNlYXJjaE1hcFtjb29yZGluYXRlXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihzZWFyY2hDb29yZGluYXRlID09PSBjb29yZGluYXRlICsgZ3JpZFNpemUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNlYXJjaE1hcFtjb29yZGluYXRlICsgZ3JpZFNpemVdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvb3JkaW5hdGUgPiBzZWFyY2hDb29yZGluYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmaW5kWEluU2VhcmNoTWFwKGxlZnQsIG1lZGl1bSAtIDEsIHNlYXJjaENvb3JkaW5hdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvb3JkaW5hdGUgPCBzZWFyY2hDb29yZGluYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmaW5kWEluU2VhcmNoTWFwKG1lZGl1bSArIDEsIHJpZ2h0LCBzZWFyY2hDb29yZGluYXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb29yZGluYXRlWUJpbmFyeVNlYXJjaCA9IChcclxuICAgIGxlZnQ6IG51bWJlcixcclxuICAgIHJpZ2h0OiBudW1iZXIsXHJcbiAgICBzZWFyY2hDb29yZGluYXRlOiBudW1iZXIsXHJcbiAgICBtYXA6IE1hcE5vZGVbXSk6IE1hcE5vZGUgPT4ge1xyXG4gICAgaWYocmlnaHQgPj0gbGVmdCkge1xyXG4gICAgICAgIGxldCBtZWRpdW0gPSBNYXRoLmZsb29yKGxlZnQgKyAocmlnaHQgLSBsZWZ0KSAvIDIpO1xyXG4gICAgICAgIGxldCBub2RlOiBNYXBOb2RlID0gbWFwW21lZGl1bV07XHJcbiAgICAgICAgaWYoIW5vZGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKHNlYXJjaENvb3JkaW5hdGUgPj0gbm9kZS55ICYmIHNlYXJjaENvb3JkaW5hdGUgPCBub2RlLnkgKyBncmlkU2l6ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbWFwW21lZGl1bV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoc2VhcmNoQ29vcmRpbmF0ZSA9PT0gbm9kZS55ICsgZ3JpZFNpemUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG1hcFttZWRpdW0gKyAxXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihub2RlLnkgPiBzZWFyY2hDb29yZGluYXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjb29yZGluYXRlWUJpbmFyeVNlYXJjaChsZWZ0LCBtZWRpdW0gLSAxLCBzZWFyY2hDb29yZGluYXRlLCBtYXApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKG5vZGUueSA8IHNlYXJjaENvb3JkaW5hdGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGNvb3JkaW5hdGVZQmluYXJ5U2VhcmNoKG1lZGl1bSArIDEsIHJpZ2h0LCBzZWFyY2hDb29yZGluYXRlLCBtYXApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi8qXHJcbiAgR2V0IG1pbiB2YWx1ZSBvZiB0aGUgbm9kZSBmcm9tIHRoZSBhcnJheVxyXG4qL1xyXG5leHBvcnQgY29uc3QgZ2V0TWluVmFsdWVGcm9tTm9kZXMgPSAoc2VhcmNoVmFsdWU6YW55LCBub2RlczphbnlbXSk6YW55ID0+IHtcclxuICBsZXQgbWluID0gbm9kZXNbMF07XHJcbiAgZm9yKGxldCBpID0gMTsgaSA8IG5vZGVzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBpZihtaW5bc2VhcmNoVmFsdWVdID4gbm9kZXNbaV1bc2VhcmNoVmFsdWVdKSB7XHJcbiAgICAgIG1pbiA9IG5vZGVzW2ldO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gbWluW3NlYXJjaFZhbHVlXTtcclxufVxyXG5cclxuLypcclxuICBHZXQgbWluIHZhbHVlIG9mIHRoZSBub2RlIGZyb20gdGhlIGFycmF5XHJcbiovXHJcbmV4cG9ydCBjb25zdCBnZXRNYXhWYWx1ZUZyb21Ob2RlcyA9IChzZWFyY2hWYWx1ZTphbnksbm9kZXM6YW55W10pOmFueSA9PiB7XHJcbiAgbGV0IG1heCA9IG5vZGVzWzBdO1xyXG4gIGZvcihsZXQgaSA9IDE7IGkgPCBub2Rlcy5sZW5ndGg7ICsraSkge1xyXG4gICAgaWYobWF4W3NlYXJjaFZhbHVlXSA8IG5vZGVzW2ldW3NlYXJjaFZhbHVlXSkge1xyXG4gICAgICBtYXggPSBub2Rlc1tpXTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIG1heFtzZWFyY2hWYWx1ZV07XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBnZXRSYW5kb21Ob2RlXHJcbn0gZnJvbSAnLi9yYW5kb20nO1xyXG5cclxuZXhwb3J0IHtcclxuICBnZXRSYW5kb21Ob2RlXHJcbn1cclxuIiwiaW1wb3J0IHtzaHVmZmxlTm9kZXN9IGZyb20gJy4uL3NodWZmbGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFJhbmRvbU5vZGUgPSAobm9kZXM6YW55W10pOmFueSA9PiB7XHJcblx0bGV0IHNvcnRlZE5vZGVzOmFueVtdID0gc2h1ZmZsZU5vZGVzKG5vZGVzKTtcclxuXHRyZXR1cm4gc29ydGVkTm9kZXNbMF07XHJcbn1cclxuIiwiY29uc3Qgc3dhcCA9IChhcnI6YW55W10sIGE6bnVtYmVyLCBiOm51bWJlcikgPT4ge1xyXG5cdGxldCB0ZW1wID0gYXJyW2FdO1xyXG5cdGFyclthXSA9IGFycltiXTtcclxuXHRhcnJbYl0gPSB0ZW1wO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgYXNzaWduUmFuZG9tVmFsdWUgPSAobm9kZXM6YW55W10pOmFueVtdID0+IHtcclxuXHRmb3IobGV0IG5vZGUgb2Ygbm9kZXMpIHtcclxuXHRcdGxldCByYW5kb21WYWx1ZSA9IE1hdGgucmFuZG9tKCk7XHJcblx0XHRub2RlLnJhbmRvbVZhbHVlID0gcmFuZG9tVmFsdWU7XHJcblx0fVxyXG5cdHJldHVybiBub2RlcztcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNodWZmbGVOb2RlcyA9IChub2RlczphbnlbXSk6YW55W10gPT4ge1xyXG5cdGxldCB1cGRhdGVkTm9kZXM6YW55W10gPSBPYmplY3QuYXNzaWduKFtdLCBub2Rlcyk7XHJcblx0bGV0IHJhbmRvbVZhbHVlTm9kZXM6YW55W10gPSBhc3NpZ25SYW5kb21WYWx1ZSh1cGRhdGVkTm9kZXMpO1xyXG5cdGZvcihsZXQgaSA9IDA7IGkgPCByYW5kb21WYWx1ZU5vZGVzLmxlbmd0aDsgKytpKSB7XHJcblx0XHRsZXQgbWluID0gaTtcclxuXHRcdGZvcihsZXQgaiA9IGkgKyAxOyBqIDwgcmFuZG9tVmFsdWVOb2Rlcy5sZW5ndGg7ICsraikge1xyXG5cdFx0XHRpZihyYW5kb21WYWx1ZU5vZGVzW2pdLnJhbmRvbVZhbHVlID09PSByYW5kb21WYWx1ZU5vZGVzW21pbl0ucmFuZG9tVmFsdWUpIHtcclxuXHRcdFx0XHRcdG1pbiA9IGo7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYocmFuZG9tVmFsdWVOb2Rlc1tqXS5yYW5kb21WYWx1ZSA8IHJhbmRvbVZhbHVlTm9kZXNbbWluXS5yYW5kb21WYWx1ZSkge1xyXG5cdFx0XHRcdG1pbiA9IGo7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGlmKG1pbiAhPT0gaSkge1xyXG5cdFx0XHRzd2FwKHJhbmRvbVZhbHVlTm9kZXMsIG1pbiwgaSk7XHJcblx0XHR9XHJcblx0fVxyXG5cdGxldCBzaHVmZmxlZE5vZGVzOmFueVtdID0gW107XHJcblx0Zm9yKGxldCBub2RlIG9mIHJhbmRvbVZhbHVlTm9kZXMpIHtcclxuXHRcdGRlbGV0ZSBub2RlLnJhbmRvbVZhbHVlO1xyXG5cdFx0c2h1ZmZsZWROb2Rlcy5wdXNoKG5vZGUpO1xyXG5cdH1cclxuXHRyZXR1cm4gc2h1ZmZsZWROb2RlcztcclxufTtcclxuIiwiaW1wb3J0IHtnZXRTdXJyb3VuZGVkQmxvY2tlZE5vZGVzfSBmcm9tICcuL2dldFN1cnJvdW5kZWRCbG9ja2VkTm9kZXMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBnZXRTdXJyb3VuZGVkQmxvY2tlZE5vZGVzXHJcbn1cclxuIiwiaW1wb3J0IHtnZXRTdXJyb3VuZGVkTm9kZXN9IGZyb20gJy4uLy4uL3N1cnJvdW5kZWQnO1xyXG5pbXBvcnQge1xyXG4gIHBsYXllclVuaXRzLFxyXG4gIGNvbXB1dGVyVW5pdHNcclxufSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHtcclxuICBhZGROb2RlSW50b0FycmF5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJyYXlcclxufSBmcm9tICcuLi8uLic7XHJcbmltcG9ydCBVbml0IGZyb20gJy4uLy4uLy4uL3VuaXQvdHlwZXMvVW5pdCc7XHJcbi8qXHJcbiBnZXQgY2xvc2VzdCB0byB1bml0IG5vZGVzIHdoZXJlIGFsbGllZFVuaXRzIGFyZSBsb2NhdGVkXHJcbiBvciBtb3ZpbmcgdG9cclxuKi9cclxuZXhwb3J0IGNvbnN0IGdldFN1cnJvdW5kZWRCbG9ja2VkTm9kZXMgPSAodW5pdDpVbml0KSA9PiB7XHJcbiAgbGV0IHN1cnJvdW5kZWROb2RlcyA9IGdldFN1cnJvdW5kZWROb2Rlcyh1bml0LCAxKTtcclxuICBsZXQgc3Vycm91bmRlZEJsb2NrZWROb2RlczphbnlbXSA9IFtdO1xyXG4gIGxldCBhbGxpZWRVbml0czpVbml0W107XHJcbiAgaWYodW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInKSB7XHJcbiAgICBhbGxpZWRVbml0cyA9IHBsYXllclVuaXRzO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhbGxpZWRVbml0cyA9IGNvbXB1dGVyVW5pdHM7XHJcbiAgfVxyXG4gIGxldCB1cGRhdGVkVW5pdHM6VW5pdFtdID0gZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCBhbGxpZWRVbml0cyk7XHJcbiAgZm9yKGxldCBub2RlIG9mIHN1cnJvdW5kZWROb2Rlcykge1xyXG4gICAgZm9yKGxldCBhbGxpZWRVbml0IG9mIHVwZGF0ZWRVbml0cykge1xyXG4gICAgICBpZihhbGxpZWRVbml0LmN1cnJlbnROb2RlLnggPT09IG5vZGUueCAmJiBhbGxpZWRVbml0LmN1cnJlbnROb2RlLnkgPT09IG5vZGUueSkge1xyXG4gICAgICAgICAgc3Vycm91bmRlZEJsb2NrZWROb2RlcyA9IGFkZE5vZGVJbnRvQXJyYXkobm9kZSwgc3Vycm91bmRlZEJsb2NrZWROb2Rlcyk7XHJcbiAgICAgIH1cclxuICAgICAgaWYoYWxsaWVkVW5pdC5uZXh0Tm9kZS54ID09PSBub2RlLnggJiYgYWxsaWVkVW5pdC5uZXh0Tm9kZS55ID09PSBub2RlLnkpIHtcclxuICAgICAgICAgIHN1cnJvdW5kZWRCbG9ja2VkTm9kZXMgPSBhZGROb2RlSW50b0FycmF5KG5vZGUsIHN1cnJvdW5kZWRCbG9ja2VkTm9kZXMpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBzdXJyb3VuZGVkQmxvY2tlZE5vZGVzO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgcGxheWVyVW5pdHMsXHJcbiAgY29tcHV0ZXJVbml0c1xyXG59IGZyb20gJy4uLy4uL3N0b3JlL3VuaXQvdW5pdHMnO1xyXG5pbXBvcnQge2dldFN1cnJvdW5kZWROb2Rlc30gZnJvbSAnLi9nZXRTdXJyb3VuZGVkTm9kZXMnO1xyXG5pbXBvcnQge2RlbGV0ZVVuaXRGcm9tQXJyYXl9IGZyb20gJy4uL3VuaXQvZ2VuZXJhbCc7XHJcbmltcG9ydCBVbml0IGZyb20gJy4uLy4uL3VuaXQvdHlwZXMvVW5pdCc7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0U3Vycm91bmRlZEVuZW1pZXMgPSAodW5pdDpVbml0LCByYW5nZTpudW1iZXIgPSAxKTpVbml0W10gPT4ge1xyXG4gIGxldCBzdXJyb3VuZGVkRW5lbWllczpVbml0W10gPSBbXTtcclxuICBsZXQgZW5lbWllczpVbml0W10gPSBbXTtcclxuICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIHBsYXllclVuaXRzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gIH1cclxuXHJcbiAgbGV0IG5vZGVzID0gZ2V0U3Vycm91bmRlZE5vZGVzKHVuaXQsIHJhbmdlKTtcclxuICBmb3IobGV0IG5vZGUgb2Ygbm9kZXMpIHtcclxuICAgIGZvcihsZXQgZW5lbXkgb2YgZW5lbWllcykge1xyXG4gICAgICBpZihub2RlLnggPT09IGVuZW15LnggJiYgbm9kZS55ID09PSBlbmVteS55KSB7XHJcbiAgICAgICAgc3Vycm91bmRlZEVuZW1pZXMucHVzaChlbmVteSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHN1cnJvdW5kZWRFbmVtaWVzO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgY29tcHV0ZXJVbml0cyxcclxuICBwbGF5ZXJVbml0c1xyXG59IGZyb20gJy4uLy4uL3N0b3JlL3VuaXQvdW5pdHMnO1xyXG5pbXBvcnQge2dldFN1cnJvdW5kZWROb2Rlc30gZnJvbSAnLi9nZXRTdXJyb3VuZGVkTm9kZXMnO1xyXG5pbXBvcnQge2dldE5vZGVGcm9tTWFwfSBmcm9tICcuLi9ub2RlL2dldC9mcm9tTWFwJztcclxuaW1wb3J0IHtkZWxldGVVbml0RnJvbUFycmF5fSBmcm9tICcuLi91bml0L2dlbmVyYWwnO1xyXG5pbXBvcnQgVW5pdCBmcm9tICcuLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFN1cnJvdW5kZWRBbGxpZXMgPSAodW5pdDpVbml0KTpVbml0W10gPT4ge1xyXG4gIGxldCBzdXJyb3VuZGVkQWxsaWVzOlVuaXRbXSA9IFtdO1xyXG4gIGxldCBhbGxpZXM6VW5pdFtdID0gW107XHJcbiAgbGV0IHVwZGF0ZWRBbGxpZXM6VW5pdFtdID0gW107XHJcbiAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGFsbGllcyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBhbGxpZXMgPSBPYmplY3QuYXNzaWduKFtdLCBwbGF5ZXJVbml0cyk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVkQWxsaWVzID0gZGVsZXRlVW5pdEZyb21BcnJheSh1bml0LCBhbGxpZXMpO1xyXG5cclxuICBsZXQgbm9kZXMgPSBnZXRTdXJyb3VuZGVkTm9kZXModW5pdCwgMyk7XHJcbiAgZm9yKGxldCBub2RlIG9mIG5vZGVzKSB7XHJcbiAgICBmb3IobGV0IGFsbHkgb2YgdXBkYXRlZEFsbGllcykge1xyXG4gICAgICBsZXQgYWxseU5vZGUgPSBnZXROb2RlRnJvbU1hcChhbGx5LngsIGFsbHkueSk7XHJcbiAgICAgIGlmKG5vZGUueCA9PT0gYWxseU5vZGUueCAmJiBub2RlLnkgPT09IGFsbHlOb2RlLnkpIHtcclxuICAgICAgICBzdXJyb3VuZGVkQWxsaWVzLnB1c2goYWxseSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHN1cnJvdW5kZWRBbGxpZXM7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBnZXRVbml0c01pblByb3BlcnR5LFxyXG4gIGdldFVuaXRzTWF4UHJvcGVydHlcclxufSBmcm9tICcuL3Byb3BlcnR5JztcclxuaW1wb3J0IHtcclxuICBhbm90aGVyVW5pdElzT25UaGVXYXlcclxufSBmcm9tICcuL3VuaXRQb3NpdGlvbic7XHJcbmltcG9ydCB7XHJcbiAgYWRkVW5pdEludG9BcnJheSxcclxuICBkZWxldGVVbml0RnJvbUFycmF5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJteSxcclxuICBnZXREaXN0YW5jZUJldHdlZW5Ud29Vbml0c0luR3JpZHMsXHJcbiAgaXNVbml0SW5BcnJheVxyXG59IGZyb20gJy4vZ2VuZXJhbCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGFkZFVuaXRJbnRvQXJyYXksXHJcbiAgYW5vdGhlclVuaXRJc09uVGhlV2F5LFxyXG4gIGRlbGV0ZVVuaXRGcm9tQXJyYXksXHJcbiAgZGVsZXRlVW5pdEZyb21Bcm15LFxyXG4gIGdldERpc3RhbmNlQmV0d2VlblR3b1VuaXRzSW5HcmlkcyxcclxuICBnZXRVbml0c01pblByb3BlcnR5LFxyXG4gIGdldFVuaXRzTWF4UHJvcGVydHksXHJcbiAgaXNVbml0SW5BcnJheVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZ2V0VW5pdHNNaW5Qcm9wZXJ0eSxcclxuICBnZXRVbml0c01heFByb3BlcnR5XHJcbn0gZnJvbSAnLi9wcm9wZXJ0eSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGdldFVuaXRzTWluUHJvcGVydHksXHJcbiAgZ2V0VW5pdHNNYXhQcm9wZXJ0eVxyXG59XHJcbiIsIi8qXHJcbiAgZmluZCBwcm9wZXJ0eSB3aXRoIG1pbiB2YWx1ZSBhbW9uZyB1bml0c1xyXG4gIGUuZyB1bml0MS5zcGVlZCA9IDZcclxuICAgICAgdW5pdDIuc3BlZWQgPSAxOFxyXG4gICAgICByZXR1cm4gNlxyXG4qL1xyXG5leHBvcnQgY29uc3QgZ2V0VW5pdHNNaW5Qcm9wZXJ0eSA9IChwcm9wZXJ0eTphbnksIHVuaXRzOmFueVtdKTpudW1iZXIgPT4ge1xyXG4gIGlmKHVuaXRzLmxlbmd0aCA+IDApIHtcclxuICAgIGxldCBtaW5Qcm9wZXJ0eTpudW1iZXIgPSB1bml0c1swXVtwcm9wZXJ0eV07XHJcbiAgICBmb3IobGV0IGkgPSAxOyBpIDwgdW5pdHMubGVuZ3RoOyArK2kpIHtcclxuICAgICAgaWYobWluUHJvcGVydHkgPiB1bml0c1tpXVtwcm9wZXJ0eV0pIHtcclxuICAgICAgICBtaW5Qcm9wZXJ0eSA9IHVuaXRzW2ldW3Byb3BlcnR5XTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG1pblByb3BlcnR5O1xyXG4gIH1cclxufVxyXG5cclxuLypcclxuICBmaW5kIHByb3BlcnR5IHdpdGggbWF4IHZhbHVlIGFtb25nIHVuaXRzXHJcbiAgZS5nIHVuaXQxLnNwZWVkID0gMTdcclxuICAgICAgdW5pdDIuc3BlZWQgPSAxMFxyXG4gICAgICByZXR1cm4gMTdcclxuKi9cclxuZXhwb3J0IGNvbnN0IGdldFVuaXRzTWF4UHJvcGVydHkgPSAocHJvcGVydHk6YW55LCB1bml0czphbnlbXSk6bnVtYmVyID0+IHtcclxuICBpZih1bml0cy5sZW5ndGggPiAwKSB7XHJcbiAgICBsZXQgbWF4UHJvcGVydHk6bnVtYmVyID0gdW5pdHNbMF1bcHJvcGVydHldO1xyXG4gICAgZm9yKGxldCBpID0gMTsgaSA8IHVuaXRzLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgIGlmKG1heFByb3BlcnR5IDwgdW5pdHNbaV1bcHJvcGVydHldKSB7XHJcbiAgICAgICAgbWF4UHJvcGVydHkgPSB1bml0c1tpXVtwcm9wZXJ0eV07XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBtYXhQcm9wZXJ0eTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHthbm90aGVyVW5pdElzT25UaGVXYXl9IGZyb20gJy4vcG9zaXRpb24nO1xyXG5pbXBvcnQge2dldFVuaXRzT25UaGVOb2RlfSBmcm9tICcuL2dldFVuaXRzT25UaGVOb2RlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYW5vdGhlclVuaXRJc09uVGhlV2F5LFxyXG4gIGdldFVuaXRzT25UaGVOb2RlXHJcbn1cclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuaW1wb3J0IHtkZWxldGVVbml0RnJvbUFycmF5fSBmcm9tICcuLi9nZW5lcmFsJztcclxuaW1wb3J0IHsgdW5pdHMgfSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuXHJcbmV4cG9ydCBjb25zdCBhbm90aGVyVW5pdElzT25UaGVXYXkgPSAoY3VycmVudFVuaXQ6IFVuaXQpOiBib29sZWFuID0+IHtcclxuICBsZXQgdXBkYXRlZFVuaXRzOiBVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCB1bml0cyk7XHJcbiAgbGV0IG90aGVyVW5pdHM6IFVuaXRbXSA9IGRlbGV0ZVVuaXRGcm9tQXJyYXkoY3VycmVudFVuaXQsIHVwZGF0ZWRVbml0cyk7XHJcbiAgbGV0IGN1cnJlbnRVbml0TmV4dE5vZGUgPSBjdXJyZW50VW5pdC5uZXh0Tm9kZTtcclxuXHJcbiAgZm9yKGxldCBvdGhlclVuaXQgb2Ygb3RoZXJVbml0cykge1xyXG4gICAgaWYoY3VycmVudFVuaXROZXh0Tm9kZS54ID09PSBvdGhlclVuaXQuY3VycmVudE5vZGUueCAmJiBjdXJyZW50VW5pdE5leHROb2RlLnkgPT09IG90aGVyVW5pdC5jdXJyZW50Tm9kZS55KSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZihjdXJyZW50VW5pdE5leHROb2RlLnggPT09IG90aGVyVW5pdC5uZXh0Tm9kZS54ICYmIGN1cnJlbnRVbml0TmV4dE5vZGUueSA9PT0gb3RoZXJVbml0Lm5leHROb2RlLnkpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZmFsc2U7XHJcbn1cclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vLi4vdW5pdC90eXBlcy9Vbml0JztcclxuaW1wb3J0IHtkZWxldGVVbml0RnJvbUFycmF5fSBmcm9tICcuLi9nZW5lcmFsJztcclxuXHJcblxyXG4vKlxyXG4gIHJldHVybiBhbGwgdW5pdHMgdGhhdCBpcyBsb2NhdGVkXHJcbiAgb3IgbW92aW5nIHRvIHRoZSBwYXJ0aWN1bGFyIG5vZGVcclxuKi9cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRVbml0c09uVGhlTm9kZSA9IChub2RlOmFueSwgdW5pdHM6VW5pdFtdLCBjdXJyZW50VW5pdDpVbml0ID0gbnVsbCk6VW5pdFtdID0+IHtcclxuICBsZXQgdXBkYXRlZFVuaXRzOlVuaXRbXSA9IE9iamVjdC5hc3NpZ24oW10sIHVuaXRzKTtcclxuICBsZXQgb3RoZXJVbml0czpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCB1bml0cyk7XHJcbiAgaWYoY3VycmVudFVuaXQpIHtcclxuICAgIG90aGVyVW5pdHMgPSBkZWxldGVVbml0RnJvbUFycmF5KGN1cnJlbnRVbml0LCB1bml0cyk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBub2RlWDpudW1iZXIgPSBub2RlLng7XHJcbiAgY29uc3Qgbm9kZVk6bnVtYmVyID0gbm9kZS55O1xyXG4gIGxldCB1bml0c09uVGhlTm9kZTpVbml0W10gPSBbXTtcclxuXHJcbiAgZm9yKGxldCBvdGhlclVuaXQgb2Ygb3RoZXJVbml0cykge1xyXG4gICAgY29uc3Qgb3RoZXJVbml0Q3VycmVudE5vZGVYOm51bWJlciA9IG90aGVyVW5pdC5jdXJyZW50Tm9kZS54O1xyXG4gICAgY29uc3Qgb3RoZXJVbml0Q3VycmVudE5vZGVZOm51bWJlciA9IG90aGVyVW5pdC5jdXJyZW50Tm9kZS55O1xyXG4gICAgY29uc3Qgb3RoZXJVbml0TmV4dE5vZGVYOm51bWJlciA9IG90aGVyVW5pdC5uZXh0Tm9kZS54O1xyXG4gICAgY29uc3Qgb3RoZXJVbml0TmV4dE5vZGVZOm51bWJlciA9IG90aGVyVW5pdC5uZXh0Tm9kZS55O1xyXG4gICAgLy8gb3RoZXIgdW5pdCBpcyBjdXJyZW50bHkgaXMgb24gdGhhdCBub2RlXHJcbiAgICBpZihvdGhlclVuaXRDdXJyZW50Tm9kZVggPT09IG5vZGVYICYmIG90aGVyVW5pdEN1cnJlbnROb2RlWSA9PT0gbm9kZVkpIHtcclxuICAgICAgdW5pdHNPblRoZU5vZGUucHVzaChvdGhlclVuaXQpO1xyXG4gICAgfVxyXG4gICAgLy8gb3RoZXIgdW5pdCBpcyB1cCB0byBtb3ZlIHRvIHRoYXQgbm9kZVxyXG4gICAgZWxzZSBpZihvdGhlclVuaXROZXh0Tm9kZVggPT09IG5vZGVYICYmIG90aGVyVW5pdE5leHROb2RlWSA9PT0gbm9kZVkpIHtcclxuICAgICAgdW5pdHNPblRoZU5vZGUucHVzaChvdGhlclVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHVuaXRzT25UaGVOb2RlO1xyXG59XHJcbiIsImltcG9ydCB7ZHJhd0JhY2tncm91bmR9IGZyb20gJy4vZHJhd0JhY2tncm91bmQnO1xyXG5pbXBvcnQge2RyYXdPYnN0YWNsZX0gZnJvbSAnLi9kcmF3T2JzdGFjbGUnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkcmF3QmFja2dyb3VuZCxcclxuICBkcmF3T2JzdGFjbGVcclxufVxyXG4iLCJpbXBvcnQge2JhY2tncm91bmRDdHh9IGZyb20gJy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtsb2FkSW1hZ2V9IGZyb20gJy4uJztcclxuaW1wb3J0IHtNQVBfV0lEVEgsIE1BUF9IRUlHSFR9IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0JhY2tncm91bmQgPSAoc3JjOnN0cmluZykgPT4ge1xyXG4gIGxvYWRJbWFnZShzcmMsIChlcnI6YW55LCBpbWc6YW55KSA9PiB7XHJcbiAgICBiYWNrZ3JvdW5kQ3R4LmRyYXdJbWFnZShpbWcsIDAsIDAsIE1BUF9XSURUSCwgTUFQX0hFSUdIVCk7XHJcbiAgfSk7XHJcbn1cclxuIiwiaW1wb3J0IHt0ZXJyYWluQ3R4fSBmcm9tICcuLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7bG9hZEltYWdlfSBmcm9tICcuLic7XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd09ic3RhY2xlID0gKHg6bnVtYmVyLCB5Om51bWJlciwgd2lkdGg6bnVtYmVyLCBoZWlnaHQ6bnVtYmVyLCBzcmM6c3RyaW5nKSA9PiB7XHJcbiAgbG9hZEltYWdlKHNyYywgKGVycjphbnksIGltZzphbnkpID0+IHtcclxuICAgIHRlcnJhaW5DdHguZHJhd0ltYWdlKGltZywgeCwgeSwgd2lkdGgsIGhlaWdodCk7XHJcbiAgfSk7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBBcmNoZXJzLFxyXG4gIEhlYXZ5SW5mYW50cnksXHJcbiAgSGVhdnlDYXZhbHJ5LFxyXG4gIEhvcGxpdGVzLFxyXG4gIExpZ2h0SW5mYW50cnksXHJcbiAgTGlnaHRDYXZhbHJ5LFxyXG4gIE1pbGl0aWEsXHJcbiAgUGVsdGFzdHMsXHJcbiAgUGlrZW1lbixcclxuICBTY291dHNcclxufSAgZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQgeyB1bml0SWQgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRJZCc7XHJcblxyXG5leHBvcnQgY29uc3QgY2hvb3NlVW5pdFR5cGUgPSAodHlwZTpzdHJpbmcsIHg6bnVtYmVyLCB5Om51bWJlciwgY29udHJvbEJ5OnN0cmluZykgPT4ge1xyXG4gIGlmKHR5cGUgPT09ICdhcmNoZXJzJyB8fCB0eXBlID09PSAnQXJjaGVycycpIHtcclxuICAgIHJldHVybiBuZXcgQXJjaGVycyh1bml0SWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgfVxyXG4gIGVsc2UgaWYodHlwZSA9PT0gJ2hlYXZ5Q2F2YWxyeScgfHwgdHlwZSA9PT0gJ0hlYXZ5Q2F2YWxyeScpIHtcclxuICAgIHJldHVybiBuZXcgSGVhdnlDYXZhbHJ5KHVuaXRJZCwgeCwgeSwgY29udHJvbEJ5KTtcclxuICB9XHJcbiAgZWxzZSBpZih0eXBlID09PSAnaGVhdnlJbmZhbnRyeScgfHwgdHlwZSA9PT0gJ0hlYXZ5SW5mYW50cnknKSB7XHJcbiAgICByZXR1cm4gbmV3IEhlYXZ5SW5mYW50cnkodW5pdElkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gIH1cclxuICBlbHNlIGlmKHR5cGUgPT09ICdob3BsaXRlcycgfHwgdHlwZSA9PT0gJ0hvcGxpdGVzJykge1xyXG4gICAgcmV0dXJuIG5ldyBIb3BsaXRlcyh1bml0SWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgfVxyXG4gIGVsc2UgaWYodHlwZSA9PT0gJ2xpZ2h0Q2F2YWxyeScgfHwgdHlwZSA9PT0gJ0xpZ2h0Q2F2YWxyeScpIHtcclxuICAgIHJldHVybiBuZXcgTGlnaHRDYXZhbHJ5KHVuaXRJZCwgeCwgeSwgY29udHJvbEJ5KTtcclxuICB9XHJcbiAgZWxzZSBpZih0eXBlID09PSAnbGlnaHRJbmZhbnRyeScgfHwgdHlwZSA9PT0gJ0xpZ2h0SW5mYW50cnknKSB7XHJcbiAgICByZXR1cm4gbmV3IExpZ2h0SW5mYW50cnkodW5pdElkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gIH1cclxuICBlbHNlIGlmKHR5cGUgPT09ICdtaWxpdGlhJyB8fCB0eXBlID09PSAnTWlsaXRpYScpIHtcclxuICAgIHJldHVybiBuZXcgTWlsaXRpYSh1bml0SWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgfVxyXG4gIGVsc2UgaWYodHlwZSA9PT0gJ3BlbHRhc3RzJyB8fCB0eXBlID09PSAnUGVsdGFzdHMnKSB7XHJcbiAgICByZXR1cm4gbmV3IFBlbHRhc3RzKHVuaXRJZCwgeCwgeSwgY29udHJvbEJ5KTtcclxuICB9XHJcbiAgZWxzZSBpZih0eXBlID09PSAncGlrZW1lbicgfHwgdHlwZSA9PT0gJ1Bpa2VtZW4nKSB7XHJcbiAgICByZXR1cm4gbmV3IFBpa2VtZW4odW5pdElkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gIH1cclxuICBlbHNlIGlmKHR5cGUgPT09ICdzY291dHMnIHx8IHR5cGUgPT09ICdTY291dHMnKSB7XHJcbiAgICByZXR1cm4gbmV3IFNjb3V0cyh1bml0SWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgfSBcclxuICBlbHNlIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGV4aXN0aW5nIHVuaXQgdHlwZSBcIiArIHR5cGUpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuL1VuaXQnO1xyXG5cclxuY2xhc3MgQXJjaGVycyBleHRlbmRzIFVuaXQge1xyXG4gIC8vIGdlbmVyYWxcclxuICBkZXNjcmlwdGlvbjogc3RyaW5nID0gJ0hpZ2ggcmFuZ2Ugc2tpcm1pc2hlcnMgYXJtZWQgd2l0aCBib3dzJztcclxuICBjb3N0OiBudW1iZXIgPSA1MDtcclxuICBhZHZhbnRhZ2VPdmVyOiBzdHJpbmdbXSA9IFtcclxuICAgICdQaWtlbWVuJywgJ0hvcGxpdGVzJ1xyXG4gIF07XHJcbiAgdnVsbmVyYWJsZUFnYWluc3Q6IHN0cmluZ1tdID0gW1xyXG4gICAgJ0xpZ2h0Q2F2YWxyeScsICdIZWF2eUNhdmFscnknXHJcbiAgXTtcclxuICAvLyBDaGFyYWN0ZXJpc3RpY3NcclxuICBuYW1lOiBzdHJpbmcgPSAnQXJjaGVycyc7XHJcbiAgdHlwZTogc3RyaW5nID0gJ3NraXJtaXNoZXJzJztcclxuICBpbWdTcmM6c3RyaW5nID0gJy4vc3JjL2ltZy91bml0cy9waWtlbWVuLmpwZyc7XHJcbiAgaGVhbHRoOiBudW1iZXIgPSAyNTtcclxuICBzcGVlZDogbnVtYmVyID0gMjU7XHJcbiAgYXJtb3VyOiBudW1iZXIgPSAyO1xyXG4gIHJhbmdlOiBudW1iZXIgPSA4O1xyXG4gIG1vYmlsaXR5OiBudW1iZXIgPSA0O1xyXG4gIG1lbGVlRGFtYWdlOiBudW1iZXIgPSA3O1xyXG4gIG1pc3NpbGVEYW1hZ2U6IG51bWJlciA9IDc7XHJcbiAgc2hvdHNSZW1haW5lZDpudW1iZXIgPSAxMDtcclxuICBjaGFyZ2U6IG51bWJlciA9IDE7XHJcbiAgZGlzY2lwbGluZTogbnVtYmVyID0gNDA7XHJcbiAgd2VpZ2h0OiBudW1iZXIgPSAyMDtcclxuICBpbml0aWFsSGVhbHRoOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGlkOm51bWJlciwgeDpudW1iZXIsIHk6bnVtYmVyLCBjb250cm9sQnk6c3RyaW5nPSdwbGF5ZXInKSB7XHJcbiAgICBzdXBlcihpZCwgeCwgeSwgY29udHJvbEJ5KTtcclxuICAgIHRoaXMuaW5pdGlhbEhlYWx0aCA9IHRoaXMuaGVhbHRoO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQXJjaGVycztcclxuIiwiaW1wb3J0IHtcclxuICByYWRpdXNcclxufSBmcm9tICcuL3VuaXRDb25maWcnO1xyXG5cclxuZXhwb3J0IHtcclxuICByYWRpdXNcclxufVxyXG4iLCJleHBvcnQgY29uc3QgcmFkaXVzOm51bWJlciA9IDEzO1xyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuL1VuaXQnO1xyXG5cclxuY2xhc3MgSGVhdnlDYXZhbHJ5IGV4dGVuZHMgVW5pdCB7XHJcbiAgLy8gZ2VuZXJhbFxyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmcgPSBgaGVhdnkgYW5kIGNhdmFscnkgYWltZWQgdG8gYnJlYWsgdGhyb3VnaCBlbmVteSdzIGxpbmVzYDtcclxuICBjb3N0OiBudW1iZXIgPSAxNTA7XHJcbiAgYWR2YW50YWdlT3Zlcjogc3RyaW5nW10gPSBbXHJcbiAgICAnQXJjaGVycycsICdQZWx0YXN0cydcclxuICBdO1xyXG4gIHZ1bG5lcmFibGVBZ2FpbnN0OiBzdHJpbmdbXSA9IFtcclxuICAgICdQaWtlbWVuJywgJ0hvcGxpdGVzJ1xyXG4gIF07XHJcbiAgLy8gQ2hhcmFjdGVyaXN0aWNzXHJcbiAgbmFtZTogc3RyaW5nID0gJ0hlYXZ5Q2F2YWxyeSc7XHJcbiAgdHlwZTogc3RyaW5nID0gJ2NhdmFscnknO1xyXG4gIGltZ1NyYzpzdHJpbmcgPSAnLi9zcmMvaW1nL3VuaXRzL3Bpa2VtZW4uanBnJztcclxuICBoZWFsdGg6IG51bWJlciA9IDE1MDtcclxuICBzcGVlZDogbnVtYmVyID0gMzU7XHJcbiAgYXJtb3VyOiBudW1iZXIgPSA4O1xyXG4gIHJhbmdlOiBudW1iZXIgPSAwO1xyXG4gIG1vYmlsaXR5OiBudW1iZXIgPSA1O1xyXG4gIG1lbGVlRGFtYWdlOiBudW1iZXIgPSAxMjtcclxuICBtaXNzaWxlRGFtYWdlOiBudW1iZXIgPSAwO1xyXG4gIGNoYXJnZTogbnVtYmVyID0gODtcclxuICBkaXNjaXBsaW5lOiBudW1iZXIgPSA3MDtcclxuICBpbml0aWFsV2VpZ2h0OiBudW1iZXIgPSAxMDA7XHJcbiAgd2VpZ2h0OiBudW1iZXIgPSB0aGlzLmluaXRpYWxXZWlnaHQ7XHJcbiAgaW5pdGlhbEhlYWx0aDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihpZDpudW1iZXIsIHg6bnVtYmVyLCB5Om51bWJlciwgY29udHJvbEJ5OnN0cmluZz0ncGxheWVyJykge1xyXG4gICAgc3VwZXIoaWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgICB0aGlzLmluaXRpYWxIZWFsdGggPSB0aGlzLmhlYWx0aDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEhlYXZ5Q2F2YWxyeTtcclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi9Vbml0JztcclxuXHJcbmNsYXNzIEhlYXZ5SW5mYW50cnkgZXh0ZW5kcyBVbml0IHtcclxuICAvLyBnZW5lcmFsXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZyA9ICdIZWF2aWx5IGFybWVkIGluZmFudHJ5IHRyYWluZWQgdG8gbW91bnQgZnJvbnRhbCBhc3NhdWx0cyc7XHJcbiAgY29zdDogbnVtYmVyID0gNzA7XHJcbiAgYWR2YW50YWdlT3Zlcjogc3RyaW5nW10gPSBbXHJcbiAgICAnTGlnaHRJbmZhbnRyeScsICdNaWxpdGlhJ1xyXG4gIF07XHJcbiAgdnVsbmVyYWJsZUFnYWluc3Q6IHN0cmluZ1tdID0gW107XHJcbiAgLy8gQ2hhcmFjdGVyaXN0aWNzXHJcbiAgbmFtZTogc3RyaW5nID0gJ0hlYXZ5SW5mYW50cnknO1xyXG4gIHR5cGU6IHN0cmluZyA9ICdpbmZhbnRyeSc7XHJcbiAgaW1nU3JjOnN0cmluZyA9ICcuL3NyYy9pbWcvdW5pdHMvcGlrZW1lbi5qcGcnO1xyXG4gIGhlYWx0aDogbnVtYmVyID0gMTcwO1xyXG4gIHNwZWVkOiBudW1iZXIgPSAxODtcclxuICBhcm1vdXI6IG51bWJlciA9IDg7XHJcbiAgcmFuZ2U6IG51bWJlciA9IDA7XHJcbiAgbW9iaWxpdHk6IG51bWJlciA9IDM7XHJcbiAgbWVsZWVEYW1hZ2U6IG51bWJlciA9IDEyO1xyXG4gIG1pc3NpbGVEYW1hZ2U6IG51bWJlciA9IDA7XHJcbiAgY2hhcmdlOiBudW1iZXIgPSA0O1xyXG4gIGRpc2NpcGxpbmU6IG51bWJlciA9IDcwO1xyXG4gIGluaXRpYWxXZWlnaHQ6IG51bWJlciA9IDYwO1xyXG4gIHdlaWdodDogbnVtYmVyID0gdGhpcy5pbml0aWFsV2VpZ2h0O1xyXG4gIGluaXRpYWxIZWFsdGg6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoaWQ6bnVtYmVyLCB4Om51bWJlciwgeTpudW1iZXIsIGNvbnRyb2xCeTpzdHJpbmc9J3BsYXllcicpIHtcclxuICAgIHN1cGVyKGlkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gICAgdGhpcy5pbml0aWFsSGVhbHRoID0gdGhpcy5oZWFsdGg7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZWF2eUluZmFudHJ5O1xyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuL1VuaXQnO1xyXG5cclxuY2xhc3MgSG9wbGl0ZXMgZXh0ZW5kcyBVbml0IHtcclxuICAvLyBnZW5lcmFsXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZyA9ICdJbmZhbnRyeSBhcm1lZCB3aXRoIHNwZWFycyBhbmQgc2hpZWxkcyc7XHJcbiAgY29zdDogbnVtYmVyID0gODA7XHJcbiAgYWR2YW50YWdlT3Zlcjogc3RyaW5nW10gPSBbXHJcbiAgICAnTGlnaHRDYXZhbHJ5JywgJ0hlYXZ5Q2F2YWxyeSdcclxuICBdO1xyXG4gIHZ1bG5lcmFibGVBZ2FpbnN0OiBzdHJpbmdbXSA9IFtcclxuICAgICdBcmNoZXJzJywgJ1BlbHRhc3RzJ1xyXG4gIF07XHJcbiAgLy8gQ2hhcmFjdGVyaXN0aWNzXHJcbiAgbmFtZTogc3RyaW5nID0gJ0hvcGxpdGVzJztcclxuICB0eXBlOiBzdHJpbmcgPSAnc3BlYXJtZW4nO1xyXG4gIGltZ1NyYzpzdHJpbmcgPSAnLi9zcmMvaW1nL3VuaXRzL2hvcGxpdGVzLmpwZyc7XHJcbiAgaGVhbHRoOiBudW1iZXIgPSAxOTA7XHJcbiAgc3BlZWQ6IG51bWJlciA9IDEyO1xyXG4gIGFybW91cjogbnVtYmVyID0gNztcclxuICByYW5nZTogbnVtYmVyID0gMDtcclxuICBtb2JpbGl0eTogbnVtYmVyID0gMTtcclxuICBtZWxlZURhbWFnZTogbnVtYmVyID0gMTY7XHJcbiAgbWlzc2lsZURhbWFnZTogbnVtYmVyID0gMDtcclxuICBjaGFyZ2U6IG51bWJlciA9IDE7XHJcbiAgZGlzY2lwbGluZTogbnVtYmVyID0gOTA7XHJcbiAgaW5pdGlhbFdlaWdodDogbnVtYmVyID0gNzA7XHJcbiAgd2VpZ2h0ID0gdGhpcy5pbml0aWFsV2VpZ2h0O1xyXG4gIGluaXRpYWxIZWFsdGg6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoaWQ6bnVtYmVyLCB4Om51bWJlciwgeTpudW1iZXIsIGNvbnRyb2xCeTpzdHJpbmc9J3BsYXllcicpIHtcclxuICAgIHN1cGVyKGlkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gICAgdGhpcy5pbml0aWFsSGVhbHRoID0gdGhpcy5oZWFsdGg7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIb3BsaXRlcztcclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi9Vbml0JztcclxuXHJcbmNsYXNzIExpZ2h0Q2F2YWxyeSBleHRlbmRzIFVuaXQge1xyXG4gIC8vIGdlbmVyYWxcclxuICBkZXNjcmlwdGlvbjogc3RyaW5nID0gJ0xpZ2h0IGFuZCBmYXN0IGNhdmFscnknO1xyXG4gIGNvc3Q6IG51bWJlciA9IDkwO1xyXG4gIGFkdmFudGFnZU92ZXI6IHN0cmluZ1tdID0gW1xyXG4gICAgJ0FyY2hlcnMnLCAnUGVsdGFzdHMnXHJcbiAgXTtcclxuICB2dWxuZXJhYmxlQWdhaW5zdDogc3RyaW5nW10gPSBbXHJcbiAgICAnSG9wbGl0ZXMnLCAnUGlrZW1lbidcclxuICBdO1xyXG4gIC8vIENoYXJhY3RlcmlzdGljc1xyXG4gIG5hbWU6IHN0cmluZyA9ICdMaWdodENhdmFscnknO1xyXG4gIHR5cGU6IHN0cmluZyA9ICdjYXZhbHJ5JztcclxuICBpbWdTcmM6c3RyaW5nID0gJy4vc3JjL2ltZy91bml0cy9saWdodENhdmFscnkucG5nJztcclxuICBoZWFsdGg6IG51bWJlciA9IDgwO1xyXG4gIHNwZWVkOiBudW1iZXIgPSA0MDtcclxuICBhcm1vdXI6IG51bWJlciA9IDI7XHJcbiAgcmFuZ2U6IG51bWJlciA9IDA7XHJcbiAgbW9iaWxpdHk6IG51bWJlciA9IDc7XHJcbiAgbWVsZWVEYW1hZ2U6IG51bWJlciA9IDg7XHJcbiAgbWlzc2lsZURhbWFnZTogbnVtYmVyID0gMDtcclxuICBjaGFyZ2U6IG51bWJlciA9IDY7XHJcbiAgZGlzY2lwbGluZTogbnVtYmVyID0gNDA7XHJcbiAgaW5pdGlhbFdlaWdodDogbnVtYmVyID0gODA7XHJcbiAgd2VpZ2h0OiBudW1iZXIgPSB0aGlzLmluaXRpYWxXZWlnaHQ7XHJcbiAgaW5pdGlhbEhlYWx0aDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihpZDpudW1iZXIsIHg6bnVtYmVyLCB5Om51bWJlciwgY29udHJvbEJ5OnN0cmluZz0ncGxheWVyJykge1xyXG4gICAgc3VwZXIoaWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgICB0aGlzLmluaXRpYWxIZWFsdGggPSB0aGlzLmhlYWx0aDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IExpZ2h0Q2F2YWxyeTtcclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi9Vbml0JztcclxuXHJcbmNsYXNzIExpZ2h0SW5mYW50cnkgZXh0ZW5kcyBVbml0IHtcclxuICAvLyBnZW5lcmFsXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZyA9ICdGcm9udGxpbmUgc29sZGllcnMgdHJhaW5lZCBmb3IgaGFuZC10by1oYW5kIGNvbWJhdCB3aXRoIHRoZWlyIGVuZW1pZXMnO1xyXG4gIGNvc3Q6IG51bWJlciA9IDMwO1xyXG4gIGFkdmFudGFnZU92ZXI6IHN0cmluZ1tdID0gW107XHJcbiAgdnVsbmVyYWJsZUFnYWluc3Q6IHN0cmluZ1tdID0gW107XHJcbiAgLy8gQ2hhcmFjdGVyaXN0aWNzXHJcbiAgbmFtZTogc3RyaW5nID0gJ0xpZ2h0SW5mYW50cnknO1xyXG4gIHR5cGU6IHN0cmluZyA9ICdpbmZhbnRyeSc7XHJcbiAgaW1nU3JjOnN0cmluZyA9ICcuL3NyYy9pbWcvdW5pdHMvcGlrZW1lbi5qcGcnO1xyXG4gIGhlYWx0aDogbnVtYmVyID0gODA7XHJcbiAgc3BlZWQ6IG51bWJlciA9IDIyO1xyXG4gIGFybW91cjogbnVtYmVyID0gMjtcclxuICByYW5nZTogbnVtYmVyID0gMDtcclxuICBtb2JpbGl0eTogbnVtYmVyID0gNTtcclxuICBtZWxlZURhbWFnZTogbnVtYmVyID0gODtcclxuICBtaXNzaWxlRGFtYWdlOiBudW1iZXIgPSAwO1xyXG4gIGNoYXJnZTogbnVtYmVyID0gMjtcclxuICBkaXNjaXBsaW5lOiBudW1iZXIgPSAzMDtcclxuICBpbml0aWFsV2VpZ2h0OiBudW1iZXIgPSA0MDtcclxuICB3ZWlnaHQ6IG51bWJlciA9IHRoaXMuaW5pdGlhbFdlaWdodDtcclxuICBpbml0aWFsSGVhbHRoOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGlkOm51bWJlciwgeDpudW1iZXIsIHk6bnVtYmVyLCBjb250cm9sQnk6c3RyaW5nPSdwbGF5ZXInKSB7XHJcbiAgICBzdXBlcihpZCwgeCwgeSwgY29udHJvbEJ5KTtcclxuICAgIHRoaXMuaW5pdGlhbEhlYWx0aCA9IHRoaXMuaGVhbHRoO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTGlnaHRJbmZhbnRyeTtcclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi9Vbml0JztcclxuXHJcbmNsYXNzIE1pbGl0aWEgZXh0ZW5kcyBVbml0IHtcclxuICAvLyBnZW5lcmFsXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZyA9IGBBIG1pbGl0YXJ5IGZvcmNlIHRoYXQgaXMgcmFpc2VkIGZyb20gdGhlIGNpdmlsIHBvcHVsYXRpb24gdG8gc3VwcGxlbWVudCBhIHJlZ3VsYXIgYXJteSBpbiBhbiBlbWVyZ2VuY3kuYDtcclxuICBjb3N0OiBudW1iZXIgPSAyMDtcclxuICBhZHZhbnRhZ2VPdmVyOiBzdHJpbmdbXSA9IFtdO1xyXG4gIHZ1bG5lcmFibGVBZ2FpbnN0OiBzdHJpbmdbXSA9IFtdO1xyXG4gIC8vIENoYXJhY3RlcmlzdGljc1xyXG4gIG5hbWU6IHN0cmluZyA9ICdNaWxpdGlhJztcclxuICB0eXBlOiBzdHJpbmcgPSAnaW5mYW50cnknO1xyXG4gIGltZ1NyYzpzdHJpbmcgPSAnLi9zcmMvaW1nL3VuaXRzL3Bpa2VtZW4uanBnJztcclxuICBoZWFsdGg6IG51bWJlciA9IDEyMDtcclxuICBzcGVlZDogbnVtYmVyID0gMjU7XHJcbiAgYXJtb3VyOiBudW1iZXIgPSAxO1xyXG4gIHJhbmdlOiBudW1iZXIgPSAwO1xyXG4gIG1vYmlsaXR5OiBudW1iZXIgPSAzO1xyXG4gIG1lbGVlRGFtYWdlOiBudW1iZXIgPSA3O1xyXG4gIG1pc3NpbGVEYW1hZ2U6IG51bWJlciA9IDA7XHJcbiAgY2hhcmdlOiBudW1iZXIgPSAxO1xyXG4gIGRpc2NpcGxpbmU6IG51bWJlciA9IDEwO1xyXG4gIGluaXRpYWxXZWlnaHQ6IG51bWJlciA9IDMwO1xyXG4gIHdlaWdodDogbnVtYmVyID0gdGhpcy5pbml0aWFsV2VpZ2h0O1xyXG4gIGluaXRpYWxIZWFsdGg6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoaWQ6bnVtYmVyLCB4Om51bWJlciwgeTpudW1iZXIsIGNvbnRyb2xCeTpzdHJpbmc9J3BsYXllcicpIHtcclxuICAgIHN1cGVyKGlkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gICAgdGhpcy5pbml0aWFsSGVhbHRoID0gdGhpcy5oZWFsdGg7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNaWxpdGlhO1xyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuL1VuaXQnO1xyXG5cclxuY2xhc3MgUGVsdGFzdHMgZXh0ZW5kcyBVbml0IHtcclxuICAvLyBnZW5lcmFsXHJcbiAgZGVzY3JpcHRpb246IHN0cmluZyA9ICdMb3cgcmFuZ2Ugc2tpcm1pc2hlcnMgYXJtZWQgd2l0aCBqYXZlbGlucyc7XHJcbiAgY29zdDogbnVtYmVyID0gNTA7XHJcbiAgYWR2YW50YWdlT3Zlcjogc3RyaW5nW10gPSBbXHJcbiAgICAnSG9wbGl0ZXMnLCAnUGlrZW1lbidcclxuICBdO1xyXG4gIHZ1bG5lcmFibGVBZ2FpbnN0OiBzdHJpbmdbXSA9IFtcclxuICAgICdMaWdodENhdmFscnknLCAnSGVhdnlDYXZhbHJ5J1xyXG4gIF07XHJcbiAgLy8gQ2hhcmFjdGVyaXN0aWNzXHJcbiAgbmFtZTogc3RyaW5nID0gJ1BlbHRhc3RzJztcclxuICB0eXBlOiBzdHJpbmcgPSAnc2tpcm1pc2hlcnMnO1xyXG4gIGltZ1NyYzpzdHJpbmcgPSAnLi9zcmMvaW1nL3VuaXRzL3Bpa2VtZW4uanBnJztcclxuICBoZWFsdGg6IG51bWJlciA9IDUwO1xyXG4gIHNwZWVkOiBudW1iZXIgPSAyMjtcclxuICBhcm1vdXI6IG51bWJlciA9IDQ7XHJcbiAgcmFuZ2U6IG51bWJlciA9IDM7XHJcbiAgYW1tdW5pdGlvbjpudW1iZXIgPSAgMTA7XHJcbiAgbW9iaWxpdHk6IG51bWJlciA9IDY7XHJcbiAgbWVsZWVEYW1hZ2U6IG51bWJlciA9IDQ7XHJcbiAgbWlzc2lsZURhbWFnZTogbnVtYmVyID0gMTI7XHJcbiAgc2hvdHNSZW1haW5lZDpudW1iZXIgPSA1O1xyXG4gIGNoYXJnZTogbnVtYmVyID0gMTtcclxuICBkaXNjaXBsaW5lOiBudW1iZXIgPSA1MDtcclxuICBpbml0aWFsV2VpZ2h0OiBudW1iZXIgPSAyNTtcclxuICB3ZWlnaHQ6IG51bWJlciA9IHRoaXMuaW5pdGlhbFdlaWdodDtcclxuICBpbml0aWFsSGVhbHRoOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGlkOm51bWJlciwgeDpudW1iZXIsIHk6bnVtYmVyLCBjb250cm9sQnk6c3RyaW5nPSdwbGF5ZXInKSB7XHJcbiAgICBzdXBlcihpZCwgeCwgeSwgY29udHJvbEJ5KTtcclxuICAgIHRoaXMuaW5pdGlhbEhlYWx0aCA9IHRoaXMuaGVhbHRoO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUGVsdGFzdHM7XHJcbiIsImltcG9ydCBVbml0IGZyb20gJy4vVW5pdCc7XHJcblxyXG5jbGFzcyBQaWtlbWVuIGV4dGVuZHMgVW5pdCB7XHJcbiAgLy8gZ2VuZXJhbFxyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmcgPSAnSW5mYW50cnkgYXJtZWQgd2l0aCBsb25nIHNwZWFycyc7XHJcbiAgY29zdDogbnVtYmVyID0gODA7XHJcbiAgYWR2YW50YWdlT3Zlcjogc3RyaW5nW10gPSBbXHJcbiAgICAnSGVhdnlDYXZhbHJ5JywgJ0xpZ2h0Q2F2YWxyeSdcclxuICBdO1xyXG4gIHZ1bG5lcmFibGVBZ2FpbnN0OiBzdHJpbmdbXSA9IFtcclxuICAgICdBcmNoZXJzJywgJ1BlbHRhc3RzJ1xyXG4gIF07XHJcbiAgLy8gQ2hhcmFjdGVyaXN0aWNzXHJcbiAgbmFtZTogc3RyaW5nID0gJ1Bpa2VtZW4nO1xyXG4gIHR5cGU6IHN0cmluZyA9ICdzcGVhcm1lbic7XHJcbiAgaW1nU3JjOnN0cmluZyA9ICcuL3NyYy9pbWcvdW5pdHMvcGlrZW1lbi5qcGcnO1xyXG4gIGhlYWx0aDogbnVtYmVyID0gMTIwO1xyXG4gIHNwZWVkOiBudW1iZXIgPSAxMDtcclxuICBhcm1vdXI6IG51bWJlciA9IDQ7XHJcbiAgcmFuZ2U6IG51bWJlciA9IDA7XHJcbiAgbW9iaWxpdHk6IG51bWJlciA9IDE7XHJcbiAgbWVsZWVEYW1hZ2U6IG51bWJlciA9IDI0O1xyXG4gIG1pc3NpbGVEYW1hZ2U6IG51bWJlciA9IDA7XHJcbiAgY2hhcmdlOiBudW1iZXIgPSAxO1xyXG4gIGRpc2NpcGxpbmU6IG51bWJlciA9IDgwO1xyXG4gIGluaXRpYWxXZWlnaHQ6IG51bWJlciA9IDkwO1xyXG4gIHdlaWdodDogbnVtYmVyID0gdGhpcy5pbml0aWFsV2VpZ2h0O1xyXG4gIGluaXRpYWxIZWFsdGg6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoaWQ6bnVtYmVyLCB4Om51bWJlciwgeTpudW1iZXIsIGNvbnRyb2xCeTpzdHJpbmc9J3BsYXllcicpIHtcclxuICAgIHN1cGVyKGlkLCB4LCB5LCBjb250cm9sQnkpO1xyXG4gICAgdGhpcy5pbml0aWFsSGVhbHRoID0gdGhpcy5oZWFsdGg7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQaWtlbWVuO1xyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuL1VuaXQnO1xyXG5cclxuY2xhc3MgU2NvdXRzIGV4dGVuZHMgVW5pdCB7XHJcbiAgLy8gZ2VuZXJhbFxyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmcgPSBgc21hbGwgYW5kIG1vYmlsZSBiYW5kIHRoYXQgaW50ZWRlZCB0byBkZXNjb3ZlciB0aGUgbWFwYDtcclxuICBjb3N0OiBudW1iZXIgPSAyMDtcclxuICBhZHZhbnRhZ2VPdmVyOiBzdHJpbmdbXSA9IFtdO1xyXG4gIHZ1bG5lcmFibGVBZ2FpbnN0OiBzdHJpbmdbXSA9IFtdO1xyXG4gIC8vIENoYXJhY3RlcmlzdGljc1xyXG4gIG5hbWU6IHN0cmluZyA9ICdTY291dHMnO1xyXG4gIHR5cGU6IHN0cmluZyA9ICdzY291dHMnO1xyXG4gIGltZ1NyYzpzdHJpbmcgPSAnLi9zcmMvaW1nL3VuaXRzL3Bpa2VtZW4uanBnJztcclxuICBoZWFsdGg6IG51bWJlciA9IDYwO1xyXG4gIHNwZWVkOiBudW1iZXIgPSAyNztcclxuICBhcm1vdXI6IG51bWJlciA9IDE7XHJcbiAgcmFuZ2U6IG51bWJlciA9IDA7XHJcbiAgbW9iaWxpdHk6IG51bWJlciA9IDk7XHJcbiAgbWVsZWVEYW1hZ2U6IG51bWJlciA9IDc7XHJcbiAgbWlzc2lsZURhbWFnZTogbnVtYmVyID0gMDtcclxuICBjaGFyZ2U6IG51bWJlciA9IDE7XHJcbiAgZGlzY2lwbGluZTogbnVtYmVyID0gMTA7XHJcbiAgaW5pdGlhbFdlaWdodDogbnVtYmVyID0gMjA7XHJcbiAgd2VpZ2h0OiBudW1iZXIgPSB0aGlzLmluaXRpYWxXZWlnaHQ7XHJcbiAgaW5pdGlhbEhlYWx0aDogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihpZDpudW1iZXIsIHg6bnVtYmVyLCB5Om51bWJlciwgY29udHJvbEJ5OnN0cmluZz0ncGxheWVyJykge1xyXG4gICAgc3VwZXIoaWQsIHgsIHksIGNvbnRyb2xCeSk7XHJcbiAgICB0aGlzLmluaXRpYWxIZWFsdGggPSB0aGlzLmhlYWx0aDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNjb3V0cztcclxuIiwiaW1wb3J0IHtncmlkU2l6ZSwgQ0FOVkFTX0hFSUdIVH0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHthc3NpZ25DdXJyZW50bHlDaG9zZW5Vbml0fSBmcm9tICcuLi8uLi9zdG9yZS91bml0L2N1cnJlbnRseUNob3NlblVuaXQnO1xyXG5pbXBvcnQgVW5pdCBmcm9tICcuLi90eXBlcy9Vbml0JztcclxuaW1wb3J0IHsgcGxheWVyVW5pdHMgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHsgVU5JVF9MRUZUX1BBTkVMX1dJRFRILCBVTklUX0lDT05fV0lEVEgsIFVOSVRfUEFORUxfSEVJR0hULCBVTklUX0lDT05fSEVJR0hUIH0gZnJvbSAnLi4vLi4vVUkvYmF0dGxlVUkvdW5pdFBhbmVsL3NldHRpbmdzJztcclxuXHJcblxyXG5leHBvcnQgY29uc3Qgb25DaG9vc2VVbml0ID0gKHVuaXRzOlVuaXRbXSwgbW91c2VYOm51bWJlciwgbW91c2VZOm51bWJlcikgPT4ge1xyXG4gIGxldCBmb3VuZFVuaXQgPSBudWxsO1xyXG4gIGZvcihsZXQgdW5pdCBvZiB1bml0cykge1xyXG4gICAgbGV0IGJvdHRvbVJpZ2h0WCA9IHVuaXQueCArIGdyaWRTaXplO1xyXG4gICAgbGV0IGJvdHRvbVJpZ2h0WSA9IHVuaXQueSArIGdyaWRTaXplO1xyXG4gICAgaWYobW91c2VYID49IHVuaXQueCAmJiBtb3VzZVggPCBib3R0b21SaWdodFggJiYgbW91c2VZID49IHVuaXQueSAmJiBtb3VzZVkgPCBib3R0b21SaWdodFkpIHtcclxuICAgICAgY29uc29sZS5sb2coJ3VuaXQnLCB1bml0Lm5hbWUsICcgd2FzIGNob3NlbicpO1xyXG4gICAgICB1bml0LmlzQ3VycmVudGx5Q2hvc2VuID0gdHJ1ZTtcclxuICAgICAgZm91bmRVbml0ID0gdW5pdDtcclxuICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBsZXQgc3RhcnRYID0gVU5JVF9MRUZUX1BBTkVMX1dJRFRIO1xyXG4gIGxldCB5MCA9IENBTlZBU19IRUlHSFQgLSBVTklUX1BBTkVMX0hFSUdIVDtcclxuICBsZXQgeTEgPSB5MCArIFVOSVRfSUNPTl9IRUlHSFQ7XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IHBsYXllclVuaXRzLmxlbmd0aDsgKytpKSB7XHJcbiAgICBsZXQgeDAgPSBzdGFydFggKyAoVU5JVF9JQ09OX1dJRFRIICogKGkgKyAxKSk7XHJcbiAgICBsZXQgeDEgPSB4MCArIFVOSVRfSUNPTl9XSURUSDtcclxuICAgIGlmKG1vdXNlWCA+PSB4MCAmJiBtb3VzZVggPCB4MSAmJiBtb3VzZVkgPj0geTAgJiYgbW91c2VZIDwgeTEpIHtcclxuICAgICAgbGV0IHVuaXQgPSBwbGF5ZXJVbml0c1tpXTtcclxuICAgICAgdW5pdC5pc0N1cnJlbnRseUNob3NlbiA9IHRydWU7XHJcbiAgICAgIGZvdW5kVW5pdCA9IHVuaXQ7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gIH1cclxuICBhc3NpZ25DdXJyZW50bHlDaG9zZW5Vbml0KGZvdW5kVW5pdCk7XHJcbn1cclxuIiwiaW1wb3J0IHtjcmVhdGVVbml0fSBmcm9tICcuL2NyZWF0ZVVuaXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBjcmVhdGVVbml0XHJcbn1cclxuIiwiaW1wb3J0IHthcm1vdXJQZW5ldHJhdGlvbn0gZnJvbSAnLi9hcm1vdXInO1xyXG5pbXBvcnQge2NoZWNrQXR0YWNrU2lkZX0gZnJvbSAnLi9hdHRhY2tTaWRlJztcclxuaW1wb3J0IHtcclxuICBjaGFyZ2UsXHJcbiAgY2FsY3VsYXRlQ2hhcmdlXHJcbn0gZnJvbSAnLi9jaGFyZ2UnO1xyXG5pbXBvcnQge1xyXG4gIGNhbGN1bGF0ZURhbWFnZSxcclxuICBjYWxjdWxhdGVEYW1hZ2VCYXNlT25FbmVteVBvc2l0aW9uLFxyXG4gIGNhbGN1bGF0ZURhbWFnZVdoZW5JdHNMZXNzVGhhbk9uZVxyXG59IGZyb20gJy4vZGFtYWdlJztcclxuaW1wb3J0IHtcclxuICByZW1vdmVVbml0RnJvbUVuZW1pZXNGaWdodEFnYWluc3QsXHJcbiAgZmluZFVuaXRJbkZpZ2h0QWdhaW5zdFxyXG59IGZyb20gJy4vZmlnaHRBZ2FpbnN0JztcclxuaW1wb3J0IHtcclxuICBpc1VuaXRGaWdodGluZyxcclxuICBjaGVja0hlYWx0aCxcclxuICBtZWxlZUF0dGFjayxcclxuICBtZWxlZUNvbWJhdFxyXG59IGZyb20gJy4vbWVsZWUnO1xyXG5cclxuaW1wb3J0IHtcclxuXHJcbn0gZnJvbSAnLi9taXNzaWxlJztcclxuXHJcbmltcG9ydCB7XHJcbiAgcmVmcmVzaG1lbnRcclxufSBmcm9tICcuL3JlZnJlc2htZW50JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYXJtb3VyUGVuZXRyYXRpb24sXHJcbiAgY2hlY2tBdHRhY2tTaWRlLFxyXG4gIGNoYXJnZSxcclxuICBjYWxjdWxhdGVDaGFyZ2UsXHJcbiAgY2FsY3VsYXRlRGFtYWdlLFxyXG4gIGNhbGN1bGF0ZURhbWFnZUJhc2VPbkVuZW15UG9zaXRpb24sXHJcbiAgY2FsY3VsYXRlRGFtYWdlV2hlbkl0c0xlc3NUaGFuT25lLFxyXG4gIHJlbW92ZVVuaXRGcm9tRW5lbWllc0ZpZ2h0QWdhaW5zdCxcclxuICBmaW5kVW5pdEluRmlnaHRBZ2FpbnN0LFxyXG4gIGlzVW5pdEZpZ2h0aW5nLFxyXG4gIGNoZWNrSGVhbHRoLFxyXG4gIG1lbGVlQXR0YWNrLFxyXG4gIG1lbGVlQ29tYmF0LFxyXG4gIHJlZnJlc2htZW50XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IGFybW91clBlbmV0cmF0aW9uID0gKGRhbWFnZTpudW1iZXIsIGFybW91cjpudW1iZXIpID0+IHtcclxuICBsZXQgcmFuZG9tID0gTWF0aC5yYW5kb20oKTtcclxuICBpZihkYW1hZ2UgPiBhcm1vdXIpIHtcclxuICAgIGlmKHJhbmRvbSA8IDAuMTApIHtcclxuICAgICAgcmV0dXJuIGRhbWFnZTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoZGFtYWdlIDwgMC4xKSB7XHJcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKGRhbWFnZSAtIChhcm1vdXIgLyAyKSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgcmV0dXJuIGRhbWFnZSAtIGFybW91cjtcclxuICAgIH1cclxuICB9XHJcbiAgZWxzZSBpZihkYW1hZ2UgPD0gYXJtb3VyKSB7XHJcbiAgICBpZihyYW5kb20gPCAwLjIpIHtcclxuICAgICAgcmV0dXJuIDE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtncmlkU2l6ZX0gZnJvbSAnLi4vLi4vLi4vY29uZmlnJztcclxuLypcclxuICBDaGVjayBpbiB3aGF0IHNpZGUgb2YgdGhlIGVuZW15IGF0dGFjayB3aWxsXHJcbiAgYmUgcG9pbnRlZChmcm9udCwgc2lkZSwgcmVhcilcclxuKi9cclxuZXhwb3J0IGNvbnN0IGNoZWNrQXR0YWNrU2lkZSA9ICh1bml0OmFueSwgZW5lbXk6YW55KSA9PiB7XHJcbiAgbGV0IGVuZW15Q3Vyck5vZGUgPSBlbmVteS5jdXJyZW50Tm9kZTtcclxuICBsZXQgdW5pdE5vZGUgPSB1bml0LmN1cnJlbnROb2RlO1xyXG4gIGlmKGVuZW15LmZpZ3RoQWdhaW5zdC5mcm9udC5pZCA9PT0gdW5pdC5pZCkge1xyXG4gICAgcmV0dXJuICdmcm9udCc7XHJcbiAgfVxyXG5cclxuICBlbHNlIGlmKCFlbmVteS5pc0ZpZ2h0aW5nICYmIGVuZW15LmlzTW92aW5nKSB7IC8vIGVuZW15IG5vdCBmaWdodGluZyBidXQgbW92aW5nXHJcbiAgICBsZXQgZW5lbXlOZXh0Tm9kZSA9IGVuZW15Lm5leHROb2RlO1xyXG4gICAgaWYoZW5lbXlOZXh0Tm9kZS54ID09PSB1bml0Tm9kZS54ICYmIGVuZW15TmV4dE5vZGUueSA9PT0gdW5pdE5vZGUueSkgeyAvLyBlbmVteSBpbiBmcm9tdCBvbiB1bml0XHJcbiAgICAgcmV0dXJuICdmcm9udCc7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKGVuZW15TmV4dE5vZGUueCAtIHVuaXROb2RlLnggPiBncmlkU2l6ZSB8fCBlbmVteU5leHROb2RlLnkgLSB1bml0Tm9kZS55ID4gZ3JpZFNpemUpIHsgLy8gZW5lbXkgaXMgZ29pbmcgdG8gdGhlIG90aGVyIHNpZGUgdGhhbiB1bml0XHJcbiAgICAgIHJldHVybiAnYmFjayc7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gJ3NpZGUnO1xyXG4gIH1cclxuXHJcbiAgZWxzZSBpZihlbmVteS5pc0ZpZ2h0aW5nKSB7IC8vIGVuZW15IGlzIGZpZ2h0aW5nXHJcbiAgICBsZXQgZnJvbnRVbml0Tm9kZSA9IGVuZW15LmZpZ3RoQWdhaW5zdC5mcm9udC5jdXJyZW50Tm9kZTtcclxuICAgIGlmKHVuaXROb2RlLnggPT09IGVuZW15Q3Vyck5vZGUueCAmJiB1bml0Tm9kZS54ID09PSBmcm9udFVuaXROb2RlLngpIHsgLy8gdW5pdHMgc3RhbmRpbmcgaW4gbGluZVxyXG4gICAgICByZXR1cm4gJ2JhY2snO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZih1bml0Tm9kZS55ID09PSBlbmVteUN1cnJOb2RlLnkgJiYgdW5pdE5vZGUueSA9PT0gZnJvbnRVbml0Tm9kZS55KSB7IC8vdW5pdHMgc3RhbmRpbmcgaW4gbGluZVxyXG4gICAgICByZXR1cm4gJ2JhY2snO1xyXG4gICAgfVxyXG4gICAgLy8gdW5pdCBpcyBzdGFuZGluZyBpbiBkaWFnb25hbCBsaW5lLCBzbyBwb3NpdGlvbiBpcyBiYWNrXHJcbiAgICBlbHNlIGlmKE1hdGguYWJzKGZyb250VW5pdE5vZGUueCAtIGVuZW15Q3Vyck5vZGUueCkgPT09IGdyaWRTaXplICYmIE1hdGguYWJzKGZyb250VW5pdE5vZGUueCAtIHVuaXROb2RlLngpID09PSBncmlkU2l6ZSAqIDIpIHtcclxuICAgICAgcmV0dXJuICdiYWNrJztcclxuICAgIH1cclxuICAgIGVsc2UgaWYoTWF0aC5hYnMoZnJvbnRVbml0Tm9kZS55IC0gZW5lbXlDdXJyTm9kZS55KSA9PT0gZ3JpZFNpemUgJiYgTWF0aC5hYnMoZnJvbnRVbml0Tm9kZS55IC0gdW5pdE5vZGUueSkgPT09IGdyaWRTaXplICogMikge1xyXG4gICAgICByZXR1cm4gJ2JhY2snO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHJldHVybiAnc2lkZSc7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgY2hhcmdlLFxyXG4gIGNhbGN1bGF0ZUNoYXJnZVxyXG59IGZyb20gJy4vY2hhcmdlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgY2hhcmdlLFxyXG4gIGNhbGN1bGF0ZUNoYXJnZVxyXG59XHJcbiIsImltcG9ydCB7Y2hlY2tBdHRhY2tTaWRlfSBmcm9tICcuLi9hdHRhY2tTaWRlJztcclxuaW1wb3J0IHtjYWxjdWxhdGVEYW1hZ2VXaGVuSXRzTGVzc1RoYW5PbmV9IGZyb20gJy4uL2RhbWFnZSc7XHJcbi8qXHJcbiAgU2luZ2xlIHRpbWUgYXR0YWNrLCB0aGF0IGZpcmVzIG9ubHkgd2hlbiBvbmUgdW5pdFxyXG4gIGhhcyBydXNoZWQgaW4gZnVsbCBzcGVlZCBpbnRvIGFub3RoZXJcclxuKi9cclxuZXhwb3J0IGNvbnN0IGNoYXJnZSA9IChhdHRhY2tVbml0OmFueSwgZGVmZW5kVW5pdDphbnkpID0+IHtcclxuICBsZXQgYXR0YWNrQW5nbGUgPSBjaGVja0F0dGFja1NpZGUoYXR0YWNrVW5pdCwgZGVmZW5kVW5pdCk7XHJcbiAgbGV0IGNoYXJnZSA9IGNhbGN1bGF0ZUNoYXJnZShhdHRhY2tVbml0LCBkZWZlbmRVbml0LCBhdHRhY2tBbmdsZSk7XHJcbiAgZGVmZW5kVW5pdC5oZWFsdGggPSBNYXRoLnJvdW5kKGRlZmVuZFVuaXQuaGVhbHRoIC0gY2hhcmdlKTtcclxufVxyXG5cclxuLypcclxuICBjYWxjdWxhdGUgY2hhcmdlIGJhc2VkIG9uIHBvc2l0aW9uXHJcbiAgb2YgdGhlIGVuZW15XHJcbiovXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVDaGFyZ2UgPSAodW5pdDphbnksIGVuZW15OmFueSwgY2hhcmdlUG9zaXRpb246c3RyaW5nKSA9PiB7XHJcbiAgaWYoY2hhcmdlUG9zaXRpb24gPT09ICdmcm9udCcpIHtcclxuICAgIGxldCBpbml0aWFsQ2hhcmdlID0gdW5pdC5jaGFyZ2UgLSBlbmVteS5hcm1vdXI7XHJcbiAgICBpZihpbml0aWFsQ2hhcmdlIDwgMSkge1xyXG4gICAgICByZXR1cm4gY2FsY3VsYXRlRGFtYWdlV2hlbkl0c0xlc3NUaGFuT25lKGluaXRpYWxDaGFyZ2UpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGluaXRpYWxDaGFyZ2U7XHJcbiAgfVxyXG4gIGVsc2UgaWYoY2hhcmdlUG9zaXRpb24gPT09ICdzaWRlJykge1xyXG4gICAgbGV0IGluaXRpYWxDaGFyZ2UgPSAodW5pdC5jaGFyZ2UgKiAxLjUpIC0gZW5lbXkuYXJtb3VyO1xyXG4gICAgaWYoaW5pdGlhbENoYXJnZSA8IDEpIHtcclxuICAgICAgcmV0dXJuIGNhbGN1bGF0ZURhbWFnZVdoZW5JdHNMZXNzVGhhbk9uZShpbml0aWFsQ2hhcmdlKTtcclxuICAgIH1cclxuICAgIHJldHVybiBpbml0aWFsQ2hhcmdlO1xyXG4gIH1cclxuICBlbHNlIGlmKGNoYXJnZVBvc2l0aW9uID09PSAnYmFjaycpIHtcclxuICAgIHJldHVybiB1bml0LmNoYXJnZTsgLy8gYmFjayBvZiB0aGUgdW5pdCBjaGFyZ2UgY2FsY3VsYXRlZCB3aXRob3V0IGVuZW15J3MgYXJtb3VyXHJcbiAgfVxyXG59XHJcbiIsIi8vIGNhbGN1bGF0ZSB1bml0IG1lbGVlIGRhbWFnZSBieSB1bml0J3MgaGVhbHRoIGFuZCBjb25kaXRpb25cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZURhbWFnZSA9IChhdHRhY2tVbml0OmFueSwgZGFtYWdlOm51bWJlcikgPT4ge1xyXG4gIGxldCBoZWFsdGggPSBhdHRhY2tVbml0LmhlYWx0aDtcclxuICBsZXQgY29uZGl0aW9uID0gYXR0YWNrVW5pdC5jb25kaXRpb247XHJcbiAgaWYoaGVhbHRoID49IDgwICYmIGNvbmRpdGlvbiA+PSA4MCkge1xyXG4gICAgcmV0dXJuIGRhbWFnZTtcclxuICB9XHJcbiAgZWxzZSBpZigoaGVhbHRoID49IDgwICYmIGNvbmRpdGlvbiA+PSA1MCkgfHwgKGNvbmRpdGlvbiA+PSA4MCAmJiBoZWFsdGggPj0gNTApKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZCgwLjkgKiBkYW1hZ2UpOyAvLyA5MCUgb2YgZGFtYWdlXHJcbiAgfVxyXG4gIGVsc2UgaWYoaGVhbHRoID49IDUwICYmIGNvbmRpdGlvbiA+PSA1MCkge1xyXG4gICAgcmV0dXJuIE1hdGgucm91bmQoMC44ICogZGFtYWdlKTtcclxuICB9XHJcbiAgZWxzZSBpZihoZWFsdGggPj0gNTAgfHwgY29uZGl0aW9uID49IDUwKSB7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZCgwLjcgKiBkYW1hZ2UpO1xyXG4gIH1cclxuICBlbHNlIHtcclxuICAgIHJldHVybiBNYXRoLnJvdW5kKDAuNiAqIGRhbWFnZSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlRGFtYWdlQmFzZU9uRW5lbXlQb3NpdGlvbiA9IChkYW1hZ2U6bnVtYmVyLCBlbmVteVBvc2l0aW9uOnN0cmluZykgPT4ge1xyXG4gIGlmKGRhbWFnZSA8PSAxKSB7XHJcbiAgICByZXR1cm4gY2FsY3VsYXRlRGFtYWdlV2hlbkl0c0xlc3NUaGFuT25lKGRhbWFnZSk7XHJcbiAgfVxyXG4gIGlmKGVuZW15UG9zaXRpb24gPT09ICdmcm9udCcpIHsgLy8gZnJvbnQgZW5lbXkgZ2FpbiAxMDAlIGRhbWFnZVxyXG4gICAgcmV0dXJuIGRhbWFnZTtcclxuICB9XHJcbiAgZWxzZSBpZihlbmVteVBvc2l0aW9uID09PSAnZmxhbmsnKSB7IC8vIGZsYW5rIGVuZW15IGdhaW4gb25seSAzMCUgZGFtYWdlXHJcbiAgICBsZXQgaW5pdGlhbERhbWFnZSA9ICBNYXRoLnJvdW5kKGRhbWFnZSAqIDAuMyk7XHJcbiAgICBpZihpbml0aWFsRGFtYWdlIDw9IDEpIHtcclxuICAgICAgcmV0dXJuIGNhbGN1bGF0ZURhbWFnZVdoZW5JdHNMZXNzVGhhbk9uZShpbml0aWFsRGFtYWdlKTtcclxuICAgIH1cclxuICAgIHJldHVybiBpbml0aWFsRGFtYWdlO1xyXG4gIH1cclxuICBlbHNlIGlmKGVuZW15UG9zaXRpb24gPT09ICdyZWFyJykge1xyXG4gICAgbGV0IGluaXRpYWxEYW1hZ2UgPSAgTWF0aC5yb3VuZChkYW1hZ2UgKiAwLjEpOyAvLyBiYWNrIGVuZW15IGdhaW4gb25seSAxMCUgb2YgZGFtYWdlXHJcbiAgICBpZihpbml0aWFsRGFtYWdlIDw9IDEpIHtcclxuICAgICAgcmV0dXJuIGNhbGN1bGF0ZURhbWFnZVdoZW5JdHNMZXNzVGhhbk9uZShpbml0aWFsRGFtYWdlKTtcclxuICAgIH1cclxuICAgIHJldHVybiBpbml0aWFsRGFtYWdlO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZURhbWFnZVdoZW5JdHNMZXNzVGhhbk9uZSA9IChkYW1hZ2U6bnVtYmVyKSA9PiB7XHJcbiAgbGV0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCk7XHJcbiAgaWYocmFuZG9tID4gMC41KSB7XHJcbiAgICByZXR1cm4gMDtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIDE7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgdW5pdHMsXHJcbiAgcGxheWVyVW5pdHMsXHJcbiAgY29tcHV0ZXJVbml0cyxcclxufSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHtyZW1vdmVVbml0fSBmcm9tICcuLi8uLi9yZW1vdmUnO1xyXG5pbXBvcnQge2lzT2JqZWN0RW1wdHksIGRlbGV0ZU9iamVjdEZyb21BcnJheX0gZnJvbSAnLi4vLi4vLi4vdXRpbHMnO1xyXG5cclxuLypcclxuICBsb29wIHRocm91Z2ggYWxsIGVuZW1pZXMnIGZpZ3RoQWdhaW5zdCBhcnJheVxyXG4gIGlmIHVuaXQgaXMgZmluZGVkIHRoZXJlLCByZW1vdmUgaXQgZnJvbSB0aGVyZVxyXG4qL1xyXG5leHBvcnQgY29uc3QgcmVtb3ZlVW5pdEZyb21FbmVtaWVzRmlnaHRBZ2FpbnN0ID0gKHVuaXQ6YW55KSA9PiB7XHJcbiAgbGV0IGVuZW1pZXM6YW55W107XHJcbiAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGVuZW1pZXMgPSBwbGF5ZXJVbml0cztcclxuICB9IGVsc2Uge1xyXG4gICAgZW5lbWllcyA9IGNvbXB1dGVyVW5pdHM7XHJcbiAgfVxyXG4gIGlmKGVuZW1pZXMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IGVuZW15IG9mIGVuZW1pZXMpIHtcclxuICAgICAgZW5lbXkucmVtb3ZlRW5lbXlGcm9tRmlnaHRBZ2FpbnN0KHVuaXQpOyAvLyByZW1vdmUgdW5pdCBmcm9tIGVuZW15J3MgZmlndGhBZ2FpbnN0XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZmluZFVuaXRJbkZpZ2h0QWdhaW5zdCA9ICh1bml0OmFueSkgPT4ge1xyXG4gIGxldCBlbmVtaWVzOmFueVtdID0gW107XHJcbiAgbGV0IGZpbmRlZFVuaXRzOmFueVtdID0gW107XHJcbiAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHsgLy8gZW5lbWllcyBmb3IgY29tcHV0ZXIgYXJlIHBsYXllcnNVbml0c1xyXG4gICAgZW5lbWllcyA9IHBsYXllclVuaXRzO1xyXG4gIH1cclxuICBlbHNlIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykgeyAvLyBlbmVtaWVzIGZvciBwbGF5ZXIgYXJlIGNvbXB1dGVyc1VuaXRzXHJcbiAgICBlbmVtaWVzID0gY29tcHV0ZXJVbml0cztcclxuICB9XHJcbiAgZm9yKGxldCBlbmVteSBvZiBlbmVtaWVzKSB7XHJcbiAgICBsZXQgZmlndGhBZ2FpbnN0ID0gZW5lbXkuZmlndGhBZ2FpbnN0O1xyXG4gICAgaWYoZmlndGhBZ2FpbnN0LmZyb250LmlkID09PSB1bml0LmlkKSB7IC8vIHVuaXQgaXMgaW5zaWRlIGZyb250XHJcbiAgICAgIGZpbmRlZFVuaXRzLnB1c2goZW5lbXkpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZihmaWd0aEFnYWluc3QucmVhci5pZCA9PT0gdW5pdC5pZCkgeyAvLyB1bml0IGlzIGZpbmRlZCBhcyByZWFyIHVuaXRcclxuICAgICAgZmluZGVkVW5pdHMucHVzaChlbmVteSk7XHJcbiAgICB9XHJcbiAgICBmb3IobGV0IGZsYW5rVW5pdCBvZiBmaWd0aEFnYWluc3QuZmxhbmspIHtcclxuICAgICAgaWYoZmxhbmtVbml0LmlkID09PSB1bml0LmlkKSB7IC8vIHVuaXQgaXMgZmluZGVkIGFzIGZsYW5rIHVuaXRcclxuICAgICAgICBmaW5kZWRVbml0cy5wdXNoKGVuZW15KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gZmluZGVkVW5pdHM7XHJcbn1cclxuIiwiaW1wb3J0IHt1bml0c30gZnJvbSAnLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0cyc7XHJcbmltcG9ydCB7cmVtb3ZlVW5pdH0gZnJvbSAnLi4vLi4vcmVtb3ZlJztcclxuaW1wb3J0IHtcclxuICByZW1vdmVVbml0RnJvbVNwb3R0ZWRVbml0cyxcclxufSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3Nwb3R0ZWRVbml0cyc7XHJcbmltcG9ydCB7ZmluZFVuaXRJbkZpZ2h0QWdhaW5zdH0gZnJvbSAnLi4vZmlnaHRBZ2FpbnN0JztcclxuaW1wb3J0IHtpc1VuaXRGaWdodGluZ30gZnJvbSAnLi9jaGVja0ZpZ2h0aW5nJztcclxuaW1wb3J0IHtjdHh9IGZyb20gJy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtyZWZyZXNobWVudH0gZnJvbSAnLi4vcmVmcmVzaG1lbnQnO1xyXG5pbXBvcnQge2dyaWRTaXplfSBmcm9tICcuLi8uLi8uLi9jb25maWcnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNoZWNrSGVhbHRoID0gKCkgPT4ge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgIGZvcihsZXQgdW5pdCBvZiB1bml0cykge1xyXG4gICAgICBpZih1bml0LmhlYWx0aCA8PSAwKSB7IC8vIHVuaXQgaXMgZGVzdHJveWVkXHJcbiAgICAgICAgaWYodW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInKSB7IC8vIGlmIHVuaXQgaXMgZGVzdHJveWVkIHJlbW92ZSBpdCBmcm9tIHNwb3R0ZWRVbml0c1xyXG4gICAgICAgICAgcmVtb3ZlVW5pdEZyb21TcG90dGVkVW5pdHModW5pdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmKGZpbmRVbml0SW5GaWdodEFnYWluc3QodW5pdCkubGVuZ3RoID4gMCkgeyAvLyBpZiB1bml0IGlzIGZpZ3RoQWdhaW5zdCBzb21lIGVuZW1pZXNcclxuICAgICAgICAgIGZvcihsZXQgZW5lbXkgb2YgZmluZFVuaXRJbkZpZ2h0QWdhaW5zdCh1bml0KSkgeyAvLyBkZWxldGUgdGhpcyB1bml0IGZyb20gYWxsIGVuZW15J3MgZmlnaHRpbmdcclxuICAgICAgICAgICAgZW5lbXkucmVtb3ZlRW5lbXlGcm9tRmlnaHRBZ2FpbnN0KHVuaXQpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZW1vdmVVbml0KHVuaXQpO1xyXG4gICAgICAgIGN0eC5jbGVhclJlY3QodW5pdC54LCB1bml0LnksIGdyaWRTaXplLCBncmlkU2l6ZSk7IC8vIHJlbW92ZSB1bml0IGZyb20gdGhlIG1hcFxyXG4gICAgICB9IGVsc2UgeyAvLyB1bml0IHN0aWxsIGFsaXZlXHJcbiAgICAgICAgaXNVbml0RmlnaHRpbmcodW5pdCk7XHJcbiAgICAgICAgcmVmcmVzaG1lbnQodW5pdCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJlc29sdmUoKTtcclxuICB9KTtcclxufVxyXG4iLCJpbXBvcnQgeyByZW1vdmVGcm9tVW5pdHMgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHsgcmVtb3ZlVW5pdEZyb21WaXNpYmxlVW5pdHMgfSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3Zpc2libGVVbml0cyc7XHJcbmltcG9ydCB7IHJlbW92ZUZyb21SZXZlYWxlZFVuaXRzIH0gZnJvbSAnLi4vLi4vc3RvcmUvQUkvZW5lbWllcy9yZXZlYWxlZEVuZW1pZXMnO1xyXG5pbXBvcnQgVW5pdCBmcm9tICcuLi90eXBlcy9Vbml0JztcclxuaW1wb3J0IHsgY2xlYXJVbml0SW1hZ2UgfSBmcm9tICcuLi9kcmF3L2RyYXdVbml0JztcclxuaW1wb3J0IHsgcmVtb3ZlVW5pdEZyb21TcG90dGVkVW5pdHMgfSBmcm9tICcuLi8uLi9zdG9yZSc7XHJcblxyXG5leHBvcnQgY29uc3QgcmVtb3ZlVW5pdCA9ICh1bml0OiBVbml0KSA9PiB7XHJcbiAgaWYodW5pdCkge1xyXG4gICAgY2xlYXJVbml0SW1hZ2UodW5pdCk7XHJcbiAgICByZW1vdmVGcm9tVW5pdHModW5pdCk7XHJcbiAgICByZW1vdmVVbml0RnJvbVZpc2libGVVbml0cyh1bml0KTtcclxuICAgIHJlbW92ZVVuaXRGcm9tU3BvdHRlZFVuaXRzKHVuaXQpO1xyXG4gICAgaWYodW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInKSB7XHJcbiAgICAgIHJlbW92ZUZyb21SZXZlYWxlZFVuaXRzKHVuaXQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBhc3NpZ25DdXJyZW50bHlDaG9zZW5Vbml0IH0gZnJvbSAnLi9jdXJyZW50bHlDaG9zZW5Vbml0JztcclxuaW1wb3J0IHtcclxuICBhZGRVbml0VG9TcG90dGVkVW5pdHMsXHJcbiAgc3BvdHRlZFVuaXRzLFxyXG4gIHJlbW92ZVVuaXRGcm9tU3BvdHRlZFVuaXRzXHJcbn0gZnJvbSAnLi9zcG90dGVkVW5pdHMnO1xyXG5pbXBvcnQge1xyXG4gIGluY1VuaXRJZCxcclxuICB1bml0SWRcclxufSBmcm9tICcuL3VuaXRJZCc7XHJcbmltcG9ydCB7XHJcbiAgYWRkVW5pdEludG9WaXNpYmxlVW5pdHMsXHJcbiAgcmVtb3ZlVW5pdEZyb21WaXNpYmxlVW5pdHNcclxufSBmcm9tICcuL3Zpc2libGVVbml0cyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGFzc2lnbkN1cnJlbnRseUNob3NlblVuaXQsXHJcbiAgYWRkVW5pdFRvU3BvdHRlZFVuaXRzLFxyXG4gIHNwb3R0ZWRVbml0cyxcclxuICByZW1vdmVVbml0RnJvbVNwb3R0ZWRVbml0cyxcclxuICBpbmNVbml0SWQsXHJcbiAgdW5pdElkLFxyXG4gIGFkZFVuaXRJbnRvVmlzaWJsZVVuaXRzLFxyXG4gIHJlbW92ZVVuaXRGcm9tVmlzaWJsZVVuaXRzXHJcbn1cclxuIiwiLypcclxuICBJZiB1bml0IGlzIG5vdCBtb3ZpbmcgYW5kIG5vdCBmaWdodGluZ1xyXG4gIHNvIGluY3JlYXNlIHVuaXQncyBjb25kaXRpb25cclxuKi9cclxuZXhwb3J0IGNvbnN0IHJlZnJlc2htZW50ID0gKHVuaXQ6YW55KSA9PiB7XHJcbiAgaWYoIXVuaXQuaXNGaWdodGluZyAmJiAhdW5pdC5pc01vdmluZykge1xyXG4gICAgaWYodW5pdC5jb25kaXRpb24gPCAxMDApIHsgLy8gY29uZGl0aW9uIGNhbm5vdCBiZSBtb3JlIHRoYW4gMTAwXHJcbiAgICAgIHVuaXQuaW5jcmVhc2VDb25kaXRpb24oMSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IHJhbmRvbWl6ZU1lbGVlRGFtYWdlIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvcmFuZG9tL21lbGVlRGFtYWdlJztcclxuaW1wb3J0IHtcclxuICBjYWxjdWxhdGVEYW1hZ2UsXHJcbiAgY2FsY3VsYXRlRGFtYWdlQmFzZU9uRW5lbXlQb3NpdGlvblxyXG59IGZyb20gJy4uL2RhbWFnZSc7XHJcbmltcG9ydCB7IGFybW91clBlbmV0cmF0aW9uIH0gZnJvbSAnLi4vYXJtb3VyJztcclxuaW1wb3J0IHsgcmVtb3ZlVW5pdCB9IGZyb20gJy4uLy4uL3JlbW92ZSc7XHJcbmltcG9ydCB7IFVuaXQgfSBmcm9tICcuLi8uLi90eXBlcyc7XHJcbmltcG9ydCB7IGRyYXdVbml0SWNvbiB9IGZyb20gJy4uLy4uLy4uL1VJL2JhdHRsZVVJL3VuaXRQYW5lbC9pY29uL2RyYXdVbml0SWNvbic7XHJcbmltcG9ydCB7IGRpc3BsYXlVbml0SWNvbnMgfSBmcm9tICcuLi8uLi8uLi9VSS9iYXR0bGVVSS91bml0UGFuZWwvZGlzcGxheS9kaXNwbGF5VW5pdEljb25zJztcclxuXHJcbmV4cG9ydCBjb25zdCBtZWxlZUF0dGFjayA9IChhdHRhY2tVbml0OiBVbml0LCBkZWZlbmRVbml0OiBVbml0LCBlbmVteVBvc2l0aW9uOnN0cmluZz0nZnJvbnQnKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgbGV0IGluaXRpYWxEYW1hZ2UgPSByYW5kb21pemVNZWxlZURhbWFnZShhdHRhY2tVbml0Lm1lbGVlRGFtYWdlKTtcclxuICAgIGxldCBtZWxlZURhbWFnZSA9IGNhbGN1bGF0ZURhbWFnZShhdHRhY2tVbml0LCBpbml0aWFsRGFtYWdlKTtcclxuICAgIGlmKG1lbGVlRGFtYWdlIDwgMSkgbWVsZWVEYW1hZ2UgPSAxOyAvLyBkYW1hZ2UgY2Fubm90IGJlIGxlc3MgdGhhbiAxXHJcbiAgICBsZXQgZGFtYWdlID0gY2FsY3VsYXRlRGFtYWdlQmFzZU9uRW5lbXlQb3NpdGlvbihtZWxlZURhbWFnZSwgZW5lbXlQb3NpdGlvbik7XHJcbiAgICBsZXQgYXJtb3VyID0gZGVmZW5kVW5pdC5hcm1vdXI7XHJcbiAgICBpZihkZWZlbmRVbml0LmhlYWx0aCA8PSAwKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ2RlZmVuZFVuaXQgaXMgZGVzdHJveWVkJyk7XHJcbiAgICAgIGF0dGFja1VuaXQucmVtb3ZlRW5lbXlGcm9tRmlnaHRBZ2FpbnN0KGRlZmVuZFVuaXQpO1xyXG4gICAgICByZW1vdmVVbml0KGRlZmVuZFVuaXQpO1xyXG4gICAgICBkaXNwbGF5VW5pdEljb25zKCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGRlZmVuZFVuaXQuaGVhbHRoID0gTWF0aC5yb3VuZChkZWZlbmRVbml0LmhlYWx0aCAtIChhcm1vdXJQZW5ldHJhdGlvbihkYW1hZ2UsIGFybW91cikpKTtcclxuICAgIGF0dGFja1VuaXQuY29uZGl0aW9uIC09IDE7XHJcbiAgICBkcmF3VW5pdEljb24oZGVmZW5kVW5pdCk7XHJcbiAgICByZXNvbHZlKCk7XHJcbiAgfSk7XHJcbn1cclxuIiwiaW1wb3J0IHsgdW5pdHMgfSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHsgaXNPYmplY3RFbXB0eSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHsgbWVsZWVBdHRhY2sgfSBmcm9tICcuJztcclxuaW1wb3J0IHsgZHJhd1VuaXRJY29uIH0gZnJvbSAnLi4vLi4vLi4vVUkvYmF0dGxlVUkvdW5pdFBhbmVsL2ljb24vZHJhd1VuaXRJY29uJztcclxuXHJcbmV4cG9ydCBjb25zdCBtZWxlZUNvbWJhdCA9ICgpID0+IHtcclxuICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgIGlmKCFpc09iamVjdEVtcHR5KHVuaXQuZmlndGhBZ2FpbnN0LmZyb250KSkgeyAvLyB1bml0IGhhdmUgZnJvbnQgZW5lbXlcclxuICAgICAgaWYoIXVuaXQuZmlndGhBZ2FpbnN0LmZyb250LmlzRmlnaHRpbmcpIHsgLy8gdW5pdCBpcyBnZXR0aW5nIG91dCBvZiBjb21iYXRcclxuICAgICAgICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIG1lbGVlQXR0YWNrKHVuaXQsIHVuaXQuZmlndGhBZ2FpbnN0LmZyb250LCAnZnJvbnQnKTtcclxuICAgIH1cclxuICAgIGlmKCFpc09iamVjdEVtcHR5KHVuaXQuZmlndGhBZ2FpbnN0LnJlYXIpKSB7IC8vIHVuaXQgaGF2ZSByZWFyIGVuZW15XHJcbiAgICAgIGlmKCF1bml0LmZpZ3RoQWdhaW5zdC5yZWFyLmlzRmlnaHRpbmcpIHsgLy8gdW5pdCBpcyBnZXR0aW5nIG91dCBvZiBjb21iYXRcclxuICAgICAgICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIG1lbGVlQXR0YWNrKHVuaXQsIHVuaXQuZmlndGhBZ2FpbnN0LnJlYXIsICdyZWFyJyk7XHJcbiAgICB9XHJcbiAgICBpZih1bml0LmZpZ3RoQWdhaW5zdC5mbGFuay5sZW5ndGggPiAwKSB7IC8vIHVuaXQgaGF2ZSBmbG5rIGVuZW1pZXNcclxuICAgICAgZm9yKGxldCBlbmVteSBvZiB1bml0LmZpZ3RoQWdhaW5zdC5mbGFuaykge1xyXG4gICAgICAgIGlmKCFlbmVteS5pc0ZpZ2h0aW5nKSB7IC8vIHVuaXQgaXMgZ2V0dGluZyBvdXQgb2YgY29tYmF0XHJcbiAgICAgICAgICBkcmF3VW5pdEljb24odW5pdCk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1lbGVlQXR0YWNrKHVuaXQsIGVuZW15LCAnZmxhbmsnKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge2F0dGFja0VuZW15fSBmcm9tICcuL2F0dGFjayc7XHJcbmltcG9ydCB7bW92ZVRvfSBmcm9tICcuL21vdmVUbyc7XHJcbmltcG9ydCB7cHVyc3VlVW5pdH0gZnJvbSAnLi9wdXJzdWVVbml0JztcclxuaW1wb3J0IHt1cGRhdGVVbml0fSBmcm9tICcuL3VwZGF0ZVVuaXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBhdHRhY2tFbmVteSxcclxuICBtb3ZlVG8sXHJcbiAgcHVyc3VlVW5pdCxcclxuICB1cGRhdGVVbml0XHJcbn1cclxuIiwiaW1wb3J0IFVuaXQgZnJvbSAnLi4vLi4vdHlwZXMvVW5pdCc7XHJcbmltcG9ydCB7Z2V0Tm9kZUZyb21NYXB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL25vZGUvZ2V0L2Zyb21NYXAnO1xyXG5pbXBvcnQge2luaXRpYWxNYXB9IGZyb20gJy4uLy4uLy4uL21hcC9jcmVhdGVNYXAvaW5pdGlhbE1hcCc7XHJcbmltcG9ydCB7cHVyc3VlVW5pdH0gZnJvbSAnLi9wdXJzdWVVbml0JztcclxuaW1wb3J0IHthU3Rhcn0gZnJvbSAnLi4vLi4vLi4vcGF0aC9hU3Rhci9BU3Rhcic7XHJcblxyXG5leHBvcnQgY29uc3QgYXR0YWNrRW5lbXkgPSAodW5pdDpVbml0LCBlbmVteTpVbml0KTp2b2lkID0+IHtcclxuICBpZih1bml0LmlzTW92aW5nKSB7IC8vIGlmIHVuaXQncyBtb3ZpbmcgZG9uJ3QgZmlyZSBwdXJzdWUgZnVuY3Rpb25cclxuICAgIHVuaXQuc2V0VW5pdFRvUHVyc3VlKGVuZW15KTtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc3QgdW5pdFg6bnVtYmVyID0gdW5pdC54O1xyXG4gICAgY29uc3QgdW5pdFk6bnVtYmVyID0gdW5pdC55O1xyXG4gICAgY29uc3QgZW5lbXlYOm51bWJlciA9IGVuZW15Lng7XHJcbiAgICBjb25zdCBlbmVteVk6bnVtYmVyID0gZW5lbXkueTtcclxuICAgIHVuaXQuc2V0VW5pdFRvUHVyc3VlKGVuZW15KTtcclxuICAgIGxldCBzdGFydE5vZGUgPSBnZXROb2RlRnJvbU1hcCh1bml0WCwgdW5pdFkpO1xyXG4gICAgbGV0IGZpbmlzaE5vZGUgPSBnZXROb2RlRnJvbU1hcChlbmVteVgsIGVuZW15WSk7XHJcbiAgICBsZXQgcGF0aDphbnkgPSBhU3Rhcihpbml0aWFsTWFwLCBzdGFydE5vZGUsIGZpbmlzaE5vZGUpO1xyXG4gICAgcHVyc3VlVW5pdCh1bml0LCBlbmVteSwgZW5lbXlYLCBlbmVteVksIDAsIHBhdGgsIHRydWUpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY29uc3QgZmluZFBhdGhGcm9tT25lTm9kZVRvQW5vdGhlciA9IChzdGFydFg6bnVtYmVyLCBzdGFydFk6bnVtYmVyLCBmaW5pc2hYOm51bWJlciwgZmluaXNoWTpudW1iZXIpID0+IHtcclxuLy8gbmFpdmVMaW5lRHJhd2luZ0FsZ29yaXRobVxyXG4vLyBhbGdvcml0aG06XHJcbi8vICAgZHggPSB4MiAtIHgxXHJcbi8vICAgZHkgPSB5MiAtIHkxXHJcbi8vICAgZm9yIHggZnJvbSB4MSB0byB4MiB7XHJcbi8vICAgIHkgPSB5MSArIGR5ICogKHggLSB4MSkgLyBkeFxyXG4vLyAgICBwbG90KHgsIHkpXHJcbi8vIH1cclxuICBsZXQgZHggPSBmaW5pc2hYIC0gc3RhcnRYO1xyXG4gIGxldCBkeSA9IGZpbmlzaFkgLSBzdGFydFk7XHJcbiAgbGV0IHgxID0gc3RhcnRYO1xyXG4gIGxldCB4MiA9IGZpbmlzaFg7XHJcbiAgbGV0IHkxID0gc3RhcnRZO1xyXG4gIGxldCB5MiA9IGZpbmlzaFk7XHJcbiAgbGV0IHBhdGggPSBbXTtcclxuICBpZih4MSA9PT0geDIgJiYgeTEgPT09IHkyKSB7XHJcbiAgICBwYXRoLnB1c2goe3g6IHgxLCB5IDogeTF9KTtcclxuICAgIHJldHVybiBwYXRoO1xyXG4gIH1cclxuICBpZih4MSA8PSB4Mikge1xyXG4gICAgaWYoTWF0aC5hYnMoZHgpID49IE1hdGguYWJzKGR5KSkge1xyXG4gICAgICBpZih5MSA+IHkyKSB7XHJcbiAgICAgICAgZm9yKGxldCB4ID0geDE7IHggPD0geDI7ICsreCkge1xyXG4gICAgICAgICAgbGV0IHkgPSBNYXRoLnJvdW5kKHkxICsgZHkgKiAoeCAtIHgxKSAvIGR4KTtcclxuICAgICAgICAgIHBhdGgucHVzaCh7eCwgeX0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZih5MSA8PSB5Mikge1xyXG4gICAgICAgIGZvcihsZXQgeCA9IHgxOyB4IDw9IHgyOyArK3gpIHtcclxuICAgICAgICAgIGxldCB5ID0gTWF0aC5yb3VuZCh5MSArIGR5ICogKHggLSB4MSkgLyBkeCk7XHJcbiAgICAgICAgICBwYXRoLnB1c2goe3gsIHl9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKE1hdGguYWJzKGR4KSA8IE1hdGguYWJzKGR5KSkge1xyXG4gICAgICBpZih5MSA+IHkyKSB7XHJcbiAgICAgICAgZm9yKGxldCB5ID0geTE7IHkgPj0geTI7IC0teSkge1xyXG4gICAgICAgICAgbGV0IHggPSBNYXRoLnJvdW5kKHgxICsgZHggKiAoeSAtIHkxKSAvIGR5KTtcclxuICAgICAgICAgIHBhdGgucHVzaCh7eCwgeX0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZih5MSA8PSB5Mikge1xyXG4gICAgICAgIGZvcihsZXQgeSA9IHkxOyB5IDw9IHkyOyArK3kpIHtcclxuICAgICAgICAgIGxldCB4ID0gTWF0aC5yb3VuZCh4MSArIGR4ICogKHkgLSB5MSkgLyBkeSk7XHJcbiAgICAgICAgICBwYXRoLnB1c2goe3gsIHl9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgaWYoeDEgPiB4Mikge1xyXG4gICAgaWYoTWF0aC5hYnMoZHgpID49IE1hdGguYWJzKGR5KSkge1xyXG4gICAgICBpZih5MSA+IHkyKSB7XHJcbiAgICAgICAgZm9yKGxldCB4ID0geDE7IHggPj0geDI7IC0teCkge1xyXG4gICAgICAgICAgbGV0IHkgPSBNYXRoLnJvdW5kKHkxICsgZHkgKiAoeCAtIHgxKSAvIGR4KTtcclxuICAgICAgICAgIHBhdGgucHVzaCh7eCwgeX0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZih5MSA8PSB5Mikge1xyXG4gICAgICAgIGZvcihsZXQgeCA9IHgxOyB4ID49IHgyOyAtLXgpIHtcclxuICAgICAgICAgIGxldCB5ID0gTWF0aC5yb3VuZCh5MSArIGR5ICogKHggLSB4MSkgLyBkeCk7XHJcbiAgICAgICAgICBwYXRoLnB1c2goe3gsIHl9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGlmKE1hdGguYWJzKGR4KSA8IE1hdGguYWJzKGR5KSkge1xyXG4gICAgICBpZih5MSA+IHkyKSB7XHJcbiAgICAgICAgZm9yKGxldCB5ID0geTE7IHkgPj0geTI7IC0teSkge1xyXG4gICAgICAgICAgbGV0IHggPSBNYXRoLnJvdW5kKHgxICsgZHggKiAoeSAtIHkxKSAvIGR5KTtcclxuICAgICAgICAgIHBhdGgucHVzaCh7eCwgeX0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZih5MSA8PSB5Mikge1xyXG4gICAgICAgIGZvcihsZXQgeSA9IHkxOyB5IDw9IHkyOyArK3kpIHtcclxuICAgICAgICAgIGxldCB4ID0gTWF0aC5yb3VuZCh4MSArIGR4ICogKHkgLSB5MSkgLyBkeSk7XHJcbiAgICAgICAgICBwYXRoLnB1c2goe3gsIHl9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHBhdGg7XHJcbn1cclxuIiwiaW1wb3J0IHtpc09iamVjdEVtcHR5fSBmcm9tICcuLi8uLic7XHJcbmltcG9ydCBVbml0IGZyb20gJy4uLy4uLy4uL3VuaXQvdHlwZXMvVW5pdCc7XHJcbi8qXHJcbiAgQW5hbHl6ZSBjaGFuY2UgdG8gZ2V0IG91dCBmcm9tIHRoZSBjb21iYXRcclxuICBhbmQgcHJvdmlkZSBjb25jbHVzaW9uIGluIGJvb2xlYW4gZm9ybVxyXG4gIHVuaXQgaXMgb3V0IG9mIGNvbWJhdCBvdCBjb250aW51ZSBmaWdodGluZ1xyXG4qL1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUNoYW5jZVRvR2V0T3V0T2ZDb21iYXQgPSAodW5pdDpVbml0KTpudW1iZXIgPT4ge1xyXG4gIGxldCBjaGFuY2U6bnVtYmVyID0gMDtcclxuICBsZXQgbnVtYmVyT2ZFbmVteTpudW1iZXIgPSAwO1xyXG4gIGxldCB1bml0U3BlZWQ6bnVtYmVyID0gdW5pdC5zcGVlZDtcclxuICBsZXQgdW5pdE1vYmlsaXR5Om51bWJlciA9IHVuaXQubW9iaWxpdHk7XHJcbiAgbGV0IHRvdGFsRW5lbXlTcGVlZDpudW1iZXIgPSAwO1xyXG4gIGxldCB1bml0SGFzRW5lbXlJblRoZUJhY2s6Ym9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBpZighaXNPYmplY3RFbXB0eSh1bml0LmZpZ3RoQWdhaW5zdC5mcm9udCkpIHsgLy8gdW5pdCBpcyBmaWdodGluZyB3aXRoIGVuZW15IGluIGZyb250IG9mIGl0XHJcbiAgICBudW1iZXJPZkVuZW15Kys7IC8vIGluY3JlYXNlIG51bWJlciBvZiBlbmVteVxyXG4gICAgdG90YWxFbmVteVNwZWVkICs9IHVuaXQuZmlndGhBZ2FpbnN0LmZyb250LnNwZWVkOyAvLyBhZGQgZnJvbnQgZW5lbXkncyBzcGVlZCB0byB0aGUgdG90YWwgZW5lbXkgc3BlZWRcclxuICB9XHJcbiAgaWYoIWlzT2JqZWN0RW1wdHkodW5pdC5maWd0aEFnYWluc3QucmVhcikpIHsgLy8gdW5pdCBpcyBmaWdodGluZyB3aXRoIGVuZW15IGluIHRoZSBiYWNrXHJcbiAgICBudW1iZXJPZkVuZW15Kys7IC8vIGluY3JlYXNlIG51bWJlciBvZiBlbmVteVxyXG4gICAgdG90YWxFbmVteVNwZWVkICs9IHVuaXQuZmlndGhBZ2FpbnN0LnJlYXIuc3BlZWQ7IC8vIGFkZCByZWFyIGVuZW15J3Mgc3BlZWQgdG8gdGhlIHRvdGFsIGVuZW15IHNwZWVkXHJcbiAgICB1bml0SGFzRW5lbXlJblRoZUJhY2sgPSB0cnVlO1xyXG4gIH1cclxuICBpZih1bml0LmZpZ3RoQWdhaW5zdC5mbGFuay5sZW5ndGggPiAwKSB7XHJcbiAgICBmb3IobGV0IGVuZW15IG9mIHVuaXQuZmlndGhBZ2FpbnN0LmZsYW5rKSB7IC8vIGxvb3AgdGhyb3VnaCBhbGwgZmxhbmsgdW5pdHNcclxuICAgICAgbnVtYmVyT2ZFbmVteSsrO1xyXG4gICAgICB0b3RhbEVuZW15U3BlZWQgKz0gZW5lbXkuc3BlZWQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBldmVyeSBlbmVteSBkZXNjcmVhc2VzIGNoYW5jZSB0byByZXRyaWV0ZVxyXG4gIGlmKG51bWJlck9mRW5lbXkgPT09IDEpIHtcclxuICAgIGNoYW5jZSAtPSAwLjE7XHJcbiAgfVxyXG4gIGVsc2UgaWYobnVtYmVyT2ZFbmVteSA9PT0gMikge1xyXG4gICAgY2hhbmNlIC09IDAuMztcclxuICB9XHJcbiAgZWxzZSBpZihudW1iZXJPZkVuZW15ID4gMiAmJiBudW1iZXJPZkVuZW15IDw9IDQpIHtcclxuICAgIGNoYW5jZSAtPSAwLjQ7XHJcbiAgfVxyXG4gIGVsc2UgaWYobnVtYmVyT2ZFbmVteSA+IDQpIHtcclxuICAgIGNoYW5jZSAtPSAwLjU7XHJcbiAgfVxyXG5cclxuICAvLyBlbmVteSBoYXMgYmFja2VkIHVuaXRcclxuICBpZih1bml0SGFzRW5lbXlJblRoZUJhY2spIHtcclxuICAgIGNoYW5jZSAtPSAwLjU7XHJcbiAgfVxyXG5cclxuICAvLyBkZXNjcmVhc2UgY2hhbmNlIGJhc2VkIG9uIHVuaXQncyBjb25kaXRpb25cclxuICBpZih1bml0LmNvbmRpdGlvbiA+PSA1MCAmJiB1bml0LmNvbmRpdGlvbiA8IDgwKSB7XHJcbiAgICBjaGFuY2UgLT0gMC4xO1xyXG4gIH1cclxuICBlbHNlIGlmKHVuaXQuY29uZGl0aW9uID49IDI1ICYmIHVuaXQuY29uZGl0aW9uIDwgNTApIHtcclxuICAgIGNoYW5jZSAtPSAwLjI7XHJcbiAgfVxyXG4gIGVsc2UgaWYodW5pdC5jb25kaXRpb24gPCAyNSkge1xyXG4gICAgY2hhbmNlIC09IDAuNDtcclxuICB9XHJcblxyXG4gIC8vIGluY3JlYXNlIGNoYW5jZSBiYXNlZCBvbiBzcGVlZCBhZHZhbnRhZ2VcclxuICBpZih1bml0LnNwZWVkID49IHRvdGFsRW5lbXlTcGVlZCkgeyAvLyB1bml0IGhhcyBzcGVlZCBhZHZhbnRhZ2VcclxuICAgIGlmKCh1bml0LnNwZWVkIC8gdG90YWxFbmVteVNwZWVkKSA+PSAzKSB7XHJcbiAgICAgIGNoYW5jZSArPSAwLjg7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKCh1bml0LnNwZWVkIC8gdG90YWxFbmVteVNwZWVkKSA+IDIgJiYgKHVuaXQuc3BlZWQgLyB0b3RhbEVuZW15U3BlZWQpIDwgMykge1xyXG4gICAgICBjaGFuY2UgKz0gMC42O1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZigodW5pdC5zcGVlZCAvIHRvdGFsRW5lbXlTcGVlZCkgPj0gMSkge1xyXG4gICAgICBjaGFuY2UgKz0gMC40O1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIGNoYW5jZSArPSAwLjI7XHJcbiAgICB9XHJcbiAgfSBlbHNlIHsgLy8gdW5pdCBkb2Vzbid0IGhhdmUgc3BlZWQgYWR2YW50YWdlXHJcbiAgICBpZih0b3RhbEVuZW15U3BlZWQgLyB1bml0LnNwZWVkIDw9IDEuMjUpIHsgLy8gZW5lbWllcyBkb24ndCBoYXZlIHRvdGFsIHNwZWVkIGFkdmFudGFnZVxyXG4gICAgICBjaGFuY2UgKz0gMC4xO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9pbmNyZWFzZSBjaGFuY2UgYmFzZWQgb24gbW9iaWxpdHlcclxuICBpZih1bml0Lm1vYmlsaXR5ID49IDIgJiYgdW5pdC5tb2JpbGl0eSA8IDMpIHtcclxuICAgIGNoYW5jZSArPSAwLjE7XHJcbiAgfVxyXG4gIGVsc2UgaWYodW5pdE1vYmlsaXR5ID49IDMgJiYgdW5pdE1vYmlsaXR5IDwgNSkge1xyXG4gICAgY2hhbmNlICs9IDAuMztcclxuICB9XHJcbiAgZWxzZSBpZih1bml0TW9iaWxpdHkgPT09IDUpIHtcclxuICAgIGNoYW5jZSArPSAwLjU7XHJcbiAgfVxyXG4gIGVsc2UgaWYodW5pdE1vYmlsaXR5ID49IDUgJiYgdW5pdE1vYmlsaXR5IDwgNykge1xyXG4gICAgY2hhbmNlICs9IDAuNztcclxuICB9XHJcbiAgZWxzZSBpZih1bml0TW9iaWxpdHkgPj0gNyAmJiB1bml0TW9iaWxpdHkgPCA4KSB7XHJcbiAgICBjaGFuY2UgKz0gMC44O1xyXG4gIH1cclxuICBlbHNlIGlmKHVuaXRNb2JpbGl0eSA+PSA4KSB7XHJcbiAgICBjaGFuY2UgKz0gMC45O1xyXG4gIH1cclxuXHJcbiAgLy8gY2hhbmNlIGNhbm5vdCBiZSBsZXNzIHRoYXQgMCBhbmQgZ3JlYXRlciB0aGFuIDFcclxuICBpZihjaGFuY2UgPD0gMCkgY2hhbmNlID0gMC4xO1xyXG4gIGlmKGNoYW5jZSA+PSAxKSBjaGFuY2UgPSAwLjk7XHJcblxyXG4gIHJldHVybiBjaGFuY2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB1bml0Q2FuR2V0T3V0T2ZDb21iYXQgPSAodW5pdDpVbml0KTpib29sZWFuID0+IHtcclxuICBsZXQgY2hhbmNlOm51bWJlciA9IGNhbGN1bGF0ZUNoYW5jZVRvR2V0T3V0T2ZDb21iYXQodW5pdCk7XHJcbiAgbGV0IHJhbmRvbSA9IE1hdGgucmFuZG9tKCk7XHJcbiAgaWYocmFuZG9tID49IDAgJiYgcmFuZG9tIDw9IGNoYW5jZSkge1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG4gIHJldHVybiBmYWxzZTtcclxufVxyXG4iLCJpbXBvcnQge2RyYXdVbml0fSBmcm9tICcuLi8uLic7XHJcbmltcG9ydCB7Z3JpZFNpemV9IGZyb20gJy4uLy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7Y3R4fSBmcm9tICcuLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCBVbml0IGZyb20gJy4uLy4uL3R5cGVzL1VuaXQnO1xyXG5pbXBvcnQge3VwZGF0ZVVuaXR9IGZyb20gJy4vdXBkYXRlVW5pdCc7XHJcbmltcG9ydCB7cHVyc3VlVW5pdH0gZnJvbSAnLi9wdXJzdWVVbml0JztcclxuaW1wb3J0IHsgcGF0aEN0eCB9IGZyb20gJy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0L2NvbnRleHQnO1xyXG5pbXBvcnQgeyBkcmF3UGF0aCB9IGZyb20gJy4uLy4uLy4uL3BhdGgnO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBtYWtlTW92ZW1lbnRJblVwZGF0ZVVuaXQgPSAodW5pdDpVbml0LCBjdXJyZW50Tm9kZTphbnksIG5leHROb2RlOmFueSwgcGF0aDphbnlbXSwgYWxsUGF0aDphbnlbXSwgY3Vyclg6bnVtYmVyLCBjdXJyWTpudW1iZXIsIGk6bnVtYmVyLCBub2RlSTogbnVtYmVyKSA9PiB7XHJcbiAgLy8gdW5pdCBoYXMgcmVhY2hlZCBkZXN0aW5hdGlvbiBwb2ludFxyXG4gIGlmKHVuaXQueCA9PT0gbmV4dE5vZGUueCAmJiB1bml0LnkgPT09IG5leHROb2RlLnkpIHtcclxuICAgIG5vZGVJKys7XHJcbiAgICB1cGRhdGVVbml0KHVuaXQsIGFsbFBhdGgsIG5vZGVJLCBjdXJyWCwgY3VyclksIG51bGwsIGZhbHNlKTtcclxuICB9XHJcbiAgaWYoaSA+PSBwYXRoLmxlbmd0aCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvLyBkZWxldGUgcHJldmlvdXMgc3RhdGVcclxuICBsZXQgZGVsZXRlWCwgZGVsZXRlWTtcclxuICBpZihpID4gMCkge1xyXG4gICAgZGVsZXRlWCA9IHBhdGhbaSAtIDFdLnggLSAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gICAgZGVsZXRlWSA9IHBhdGhbaSAtIDFdLnkgLSAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBkZWxldGVYID0gcGF0aFtpXS54ICAtIChncmlkU2l6ZSAqIDAuNSk7XHJcbiAgICBkZWxldGVZID0gcGF0aFtpXS55IC0gKGdyaWRTaXplICogMC41KTtcclxuICB9XHJcbiAgXHJcbiAgbGV0IGNsZWFyWCA9IHVuaXQuY2VudGVyWCAtIHVuaXQucmFkaXVzO1xyXG4gIGxldCBjbGVhclkgPSAgdW5pdC5jZW50ZXJZIC0gdW5pdC5yYWRpdXM7XHJcbiAgbGV0IHVuaXREaWFtZXRlciA9IHVuaXQucmFkaXVzICogMjtcclxuICBjdHguY2xlYXJSZWN0KGNsZWFyWCwgY2xlYXJZLCB1bml0RGlhbWV0ZXIsIHVuaXREaWFtZXRlcik7XHJcbiAgbGV0IGNlbnRlclggPSBwYXRoW2ldLng7XHJcbiAgbGV0IGNlbnRlclkgPSBwYXRoW2ldLnk7XHJcblxyXG4gIC8vIHNldCB1bml0LnggYW5kIHVuaXQueVxyXG4gIHVuaXQuc2V0WChjZW50ZXJYIC0gKGdyaWRTaXplICogMC41KSk7XHJcbiAgdW5pdC5zZXRZKGNlbnRlclkgLSAoZ3JpZFNpemUgKiAwLjUpKTtcclxuXHJcbiAgXHJcbiAgZHJhd1VuaXQodW5pdCk7XHJcbiAgLy9kcmF3UGF0aCh1bml0LCBhbGxQYXRoLCBub2RlSSk7XHJcbiAgLy9wYXRoQ3R4LmNsZWFyUmVjdChkZWxldGVYLCBkZWxldGVZLCBncmlkU2l6ZSAvIDIsIGdyaWRTaXplIC8gMik7XHJcblxyXG4gIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgaSsrO1xyXG4gICAgbWFrZU1vdmVtZW50SW5VcGRhdGVVbml0KHVuaXQsIGN1cnJlbnROb2RlLCBuZXh0Tm9kZSwgcGF0aCwgYWxsUGF0aCwgY3VyclgsIGN1cnJZLCBpLCBub2RlSSk7XHJcbiAgfSwgTWF0aC5yb3VuZCgxMDAwIC8gdW5pdC5zcGVlZCkpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgbWFrZU1vdmVtZW50SW5QdXJzdWVVbml0ID0gKHVuaXQ6VW5pdCwgcHVyc3VlZFVuaXQ6YW55LCBjdXJyZW50Tm9kZTphbnksIG5leHROb2RlOmFueSwgcGF0aDphbnlbXSwgYWxsUGF0aDphbnlbXSwgY3Vyclg6bnVtYmVyLCBjdXJyWTpudW1iZXIsIGk6bnVtYmVyLCBub2RlSTogbnVtYmVyKSA9PiB7XHJcbiAgaWYodW5pdC54ID09PSBuZXh0Tm9kZS54ICYmIHVuaXQueSA9PT0gbmV4dE5vZGUueSkgeyAvLyB1bml0IHJlYWNoIGRlc3RpbmF0aW9uIHBvaW50XHJcbiAgICBub2RlSSsrO1xyXG4gICAgcHVyc3VlVW5pdCh1bml0LCBwdXJzdWVkVW5pdCwgY3VyclgsIGN1cnJZLCBub2RlSSwgYWxsUGF0aCwgZmFsc2UpO1xyXG4gIH1cclxuXHJcbiAgaWYoaSA+PSBwYXRoLmxlbmd0aCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gZGVsZXRlIHByZXZpb3VzIHN0YXRlXHJcbiAgIGxldCBkZWxldGVYLCBkZWxldGVZO1xyXG4gICBpZihpID4gMCkge1xyXG4gICAgIGRlbGV0ZVggPSBwYXRoW2kgLSAxXS54IC0gKGdyaWRTaXplICogMC41KTtcclxuICAgICBkZWxldGVZID0gcGF0aFtpIC0gMV0ueSAtIChncmlkU2l6ZSAqIDAuNSk7XHJcbiAgIH0gZWxzZSB7XHJcbiAgICAgZGVsZXRlWCA9IHBhdGhbaV0ueCAgLSAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gICAgIGRlbGV0ZVkgPSBwYXRoW2ldLnkgLSAoZ3JpZFNpemUgKiAwLjUpO1xyXG4gICB9XHJcbiAgIGxldCBjbGVhclggPSB1bml0LmNlbnRlclggLSB1bml0LnJhZGl1cztcclxuICAgbGV0IGNsZWFyWSA9ICB1bml0LmNlbnRlclkgLSB1bml0LnJhZGl1cztcclxuICAgbGV0IHVuaXREaWFtZXRlciA9IHVuaXQucmFkaXVzICogMjtcclxuICAgY3R4LmNsZWFyUmVjdChjbGVhclgsIGNsZWFyWSwgdW5pdERpYW1ldGVyLCB1bml0RGlhbWV0ZXIpO1xyXG4gICBcclxuICAgbGV0IGNlbnRlclggPSBwYXRoW2ldLng7XHJcbiAgIGxldCBjZW50ZXJZID0gcGF0aFtpXS55O1xyXG4gICB1bml0LnNldFgoY2VudGVyWCAtIChncmlkU2l6ZSAqIDAuNSkpO1xyXG4gICB1bml0LnNldFkoY2VudGVyWSAtIChncmlkU2l6ZSAqIDAuNSkpO1xyXG4gICBkcmF3VW5pdCh1bml0KTtcclxuXHJcbiAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgIGkrKztcclxuICAgICBtYWtlTW92ZW1lbnRJblB1cnN1ZVVuaXQodW5pdCwgcHVyc3VlZFVuaXQsIGN1cnJlbnROb2RlLCBuZXh0Tm9kZSwgcGF0aCwgYWxsUGF0aCwgY3VyclgsIGN1cnJZLCBpLCBub2RlSSk7XHJcbiAgIH0sIE1hdGgucm91bmQoMTAwMCAvIHVuaXQuc3BlZWQpKTtcclxufVxyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuLi8uLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5pbXBvcnQge2dyaWRTaXplfSBmcm9tICcuLi8uLi8uLi9jb25maWcvbWFwJztcclxuaW1wb3J0IHtcclxuICBmaW5kQ2xvc2VzdFVuaXRzVG9UaGVOb2RlQ2VudGVyLFxyXG4gIGdldEJlc3RVbml0c0J5UHJvcGVydHlcclxufSBmcm9tICcuLi9hY3Rpb25zJztcclxuaW1wb3J0IHtzaHVmZmxlVW5pdHN9IGZyb20gJy4uL3NodWZmbGUnO1xyXG5pbXBvcnQge3VuaXRzfSBmcm9tICcuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IE1hcE5vZGUgZnJvbSAnLi4vLi4vLi4vbWFwL25vZGVzL01hcE5vZGUnO1xyXG5cclxuLypcclxuICBBc3Nlc3MgcHJpb3JpdHkgb2YgZWFjaCB1bml0cyBhbmRcclxuICBkZWNpZGUgd2hpY2ggdW5pdCB3aWxsIG1vdmUgdG8gdGhlIG5vZGVcclxuICBhbmQgd2hpY2ggb25lcyBoYXZlIHRvIGZpbmQgYW5vdGhlciBwYXRoXHJcbiAgQWxnb3JpdGhtOlxyXG4gIDEuIEhpZ2hlc3QgcHJpb3JpdHkgaGFzIHVuaXQgY2xvc2VzdCB0byBjZW50ZXIgb2YgdGhlIG5vZGVcclxuICAyLiBJZiB1bml0cyBhcmUgaW4gc2FtZSBkaXN0YW5jZTpcclxuICAgIDIuMSBmYXN0ZXN0IHVuaXQgaXMgaW4gcHJpb3JpdHlcclxuICAzLiBJZiBzYW1lIGRpc3RhbmNlIGFuZCBzcGVlZCAocmVtYWluaW5nIHVuaXRzKTpcclxuICAgIDMuMSBSYW5kb21seSBjaG9vc2Ugb25lIHVuaXQgZnJvbSB0aGUgcmVtYWluaW5nIHVuaXRzXHJcblxyXG4qL1xyXG5leHBvcnQgY29uc3QgZ2V0UHJpb3JpdHlVbml0ID0gKG5vZGU6IE1hcE5vZGUsIHVuaXRzOlVuaXRbXSk6VW5pdCA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRVbml0czpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCB1bml0cyk7XHJcbiAgbGV0IGNsb3Nlc3RVbml0czpVbml0W10gPSBmaW5kQ2xvc2VzdFVuaXRzVG9UaGVOb2RlQ2VudGVyKG5vZGUsIHVwZGF0ZWRVbml0cyk7XHJcbiAgaWYoY2xvc2VzdFVuaXRzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgcmV0dXJuIGNsb3Nlc3RVbml0c1swXTtcclxuICB9XHJcbiAgLy8gbW9yZSB0aGFuIDEgdW5pdCBpbiB0aGUgc2FtZSBkaXN0YW5jZVxyXG4gIGVsc2UgaWYoY2xvc2VzdFVuaXRzLmxlbmd0aCA+IDEpe1xyXG4gICAgbGV0IGZhc3Rlc3RVbml0czpVbml0W10gPSBnZXRCZXN0VW5pdHNCeVByb3BlcnR5KGNsb3Nlc3RVbml0cywgJ3NwZWVkJyk7XHJcbiAgICBpZihmYXN0ZXN0VW5pdHMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgIHJldHVybiBmYXN0ZXN0VW5pdHNbMF07XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmKGZhc3Rlc3RVbml0cy5sZW5ndGggPiAxKSB7XHJcbiAgICAgIGxldCBzaHVmZmxlZFVuaXRzOlVuaXRbXSA9IHNodWZmbGVVbml0cyhmYXN0ZXN0VW5pdHMpO1xyXG4gICAgICBsZXQgY2hvc2VuVW5pdDpVbml0ID0gc2h1ZmZsZWRVbml0c1swXTtcclxuICAgICAgcmV0dXJuIGNob3NlblVuaXQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHVuaXRDYW5Nb3ZlVG9UaGVOb2RlID0gKG5vZGU6IE1hcE5vZGUsIHVuaXQ6IFVuaXQpOmJvb2xlYW4gPT4ge1xyXG4gIGNvbnN0IHByaW9yaXR5VW5pdDogVW5pdCA9IGdldFByaW9yaXR5VW5pdChub2RlLCB1bml0cyk7XHJcbiAgbGV0IHBlcm1pc3Npb246IGJvb2xlYW4gPSBmYWxzZTtcclxuICBpZih1bml0LmlkID09PSBwcmlvcml0eVVuaXQuaWQpIHtcclxuICAgIHBlcm1pc3Npb24gPSB0cnVlO1xyXG4gIH1cclxuICByZXR1cm4gcGVybWlzc2lvbjtcclxufVxyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuLi8uLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5cclxuY29uc3Qgc2V0UmFuZG9tVmFsdWUgPSAodW5pdHM6VW5pdFtdKTphbnlbXSA9PiB7XHJcbiAgbGV0IHVwZGF0ZWRVbml0czphbnlbXSA9IE9iamVjdC5hc3NpZ24oW10sIHVuaXRzKTtcclxuICBmb3IobGV0IHVuaXQgb2YgdXBkYXRlZFVuaXRzKSB7XHJcbiAgICBsZXQgcmFuZG9tVmFsdWU6bnVtYmVyID0gTWF0aC5yYW5kb20oKTtcclxuICAgIHVuaXQucmFuZG9tVmFsdWUgPSByYW5kb21WYWx1ZTtcclxuICB9XHJcbiAgcmV0dXJuIHVwZGF0ZWRVbml0cztcclxufVxyXG5cclxuY29uc3Qgc3dhcCA9IChhcnI6YW55W10sIGE6bnVtYmVyLCBiOm51bWJlcikgPT4ge1xyXG5cdGxldCB0ZW1wID0gYXJyW2FdO1xyXG5cdGFyclthXSA9IGFycltiXTtcclxuXHRhcnJbYl0gPSB0ZW1wO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc2h1ZmZsZVVuaXRzID0gKHVuaXRzOlVuaXRbXSk6VW5pdFtdID0+IHtcclxuICBsZXQgb3JpZ2luYWxVbml0czpVbml0W10gPSBPYmplY3QuYXNzaWduKFtdLCB1bml0cyk7XHJcbiAgbGV0IHVwZGF0ZWRVbml0czphbnlbXSA9IHNldFJhbmRvbVZhbHVlKHVuaXRzKTtcclxuXHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IHVwZGF0ZWRVbml0cy5sZW5ndGg7ICsraSkge1xyXG5cdFx0bGV0IG1pbiA9IGk7XHJcblx0XHRmb3IobGV0IGogPSBpICsgMTsgaiA8IHVuaXRzLmxlbmd0aDsgKytqKSB7XHJcblx0XHRcdGlmKHVwZGF0ZWRVbml0c1tqXS5yYW5kb21WYWx1ZSA9PT0gdXBkYXRlZFVuaXRzW21pbl0ucmFuZG9tVmFsdWUpIHtcclxuXHRcdFx0XHRcdG1pbiA9IGo7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYodXBkYXRlZFVuaXRzW2pdLnJhbmRvbVZhbHVlIDwgdXBkYXRlZFVuaXRzW21pbl0ucmFuZG9tVmFsdWUpIHtcclxuXHRcdFx0XHRtaW4gPSBqO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRpZihtaW4gIT09IGkpIHtcclxuXHRcdFx0c3dhcChvcmlnaW5hbFVuaXRzLCBtaW4sIGkpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRyZXR1cm4gb3JpZ2luYWxVbml0cztcclxufVxyXG4iLCJpbXBvcnQgVW5pdCBmcm9tICcuLi8uLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldFJhbmRvbVZhbHVlID0gKHVuaXRzOlVuaXRbXSk6YW55W10gPT4ge1xyXG4gIGxldCBpZHMgPSBbXTtcclxuICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgIGxldCB2YWx1ZSA9IE1hdGgucmFuZG9tKCk7XHJcbiAgICBsZXQgb2JqID0ge1xyXG4gICAgICBpZDogdW5pdC5pZCxcclxuICAgICAgcmFuZG9tVmFsdWU6IHZhbHVlXHJcbiAgICB9XHJcbiAgICBpZHMucHVzaChvYmopO1xyXG4gIH1cclxuICByZXR1cm4gaWRzO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IHN3YXAgPSAoYXJyOmFueVtdLCBhOm51bWJlciwgYjpudW1iZXIpID0+IHtcclxuXHRsZXQgdGVtcCA9IGFyclthXTtcclxuXHRhcnJbYV0gPSBhcnJbYl07XHJcblx0YXJyW2JdID0gdGVtcDtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNodWZmbGVJRCA9ICh1bml0czphbnlbXSk6YW55W10gPT4ge1xyXG4gIGxldCB1cGRhdGVkVW5pdHMgPSBPYmplY3QuYXNzaWduKFtdLCB1bml0cyk7XHJcbiAgbGV0IGlkczphbnlbXSA9IHNldFJhbmRvbVZhbHVlKHVwZGF0ZWRVbml0cyk7XHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IGlkcy5sZW5ndGg7ICsraSkge1xyXG5cdFx0bGV0IG1pbiA9IGk7XHJcblx0XHRmb3IobGV0IGogPSBpICsgMTsgaiA8IGlkcy5sZW5ndGg7ICsraikge1xyXG5cdFx0XHRpZihpZHNbal0ucmFuZG9tVmFsdWUgPT09IGlkc1ttaW5dLnJhbmRvbVZhbHVlKSB7XHJcblx0XHRcdFx0XHRtaW4gPSBqO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmKGlkc1tqXS5yYW5kb21WYWx1ZSA8IGlkc1ttaW5dLnJhbmRvbVZhbHVlKSB7XHJcblx0XHRcdFx0bWluID0gajtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0aWYobWluICE9PSBpKSB7XHJcblx0XHRcdHN3YXAoaWRzLCBtaW4sIGkpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRyZXR1cm4gaWRzO1xyXG59XHJcbiIsImltcG9ydCB7IFVuaXQgfSBmcm9tIFwiLi4vLi4vLi4vdW5pdFwiO1xyXG5pbXBvcnQgeyBncmlkU2l6ZSB9IGZyb20gXCIuLi8uLi8uLi9jb25maWdcIjtcclxuaW1wb3J0IE1hcE5vZGUgZnJvbSBcIi4uLy4uLy4uL21hcC9ub2Rlcy9NYXBOb2RlXCI7XHJcbmltcG9ydCB7IGdldE5vZGVGcm9tTWFwIH0gZnJvbSBcIi4uLy4uL25vZGVcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRJbnRlcmNlcHRpb25Ob2RlcyA9ICh1bml0OiBVbml0KTogTWFwTm9kZVtdID0+IHtcclxuICAgIGxldCBub2RlID0gdW5pdC5jdXJyZW50Tm9kZTtcclxuICAgIGxldCBpbnRlcmNlcHRlZE5vZGVzOiBNYXBOb2RlW10gPSBbXTtcclxuICAgIGZvcihsZXQgeCA9IG5vZGUueCAtIGdyaWRTaXplOyB4IDw9IG5vZGUueCArIGdyaWRTaXplOyB4ICs9IGdyaWRTaXplKSB7XHJcbiAgICAgICAgbGV0IGludGVyY2VwdGVkTm9kZSA9IGdldE5vZGVGcm9tTWFwKHgsIG5vZGUueSk7XHJcbiAgICAgICAgaWYoaW50ZXJjZXB0ZWROb2RlICYmIHggIT09IG5vZGUueCkge1xyXG4gICAgICAgICAgICBpbnRlcmNlcHRlZE5vZGVzLnB1c2goaW50ZXJjZXB0ZWROb2RlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBmb3IobGV0IHkgPSBub2RlLnkgLSBncmlkU2l6ZTsgeSA8PSBub2RlLnkgKyBncmlkU2l6ZTsgeSArPSBncmlkU2l6ZSkge1xyXG4gICAgICAgIGxldCBpbnRlcmNlcHRlZE5vZGUgPSBnZXROb2RlRnJvbU1hcChub2RlLngsIHkpO1xyXG4gICAgICAgIGlmKGludGVyY2VwdGVkTm9kZSAmJiB5ICE9IG5vZGUueSkge1xyXG4gICAgICAgICAgICBpbnRlcmNlcHRlZE5vZGVzLnB1c2goaW50ZXJjZXB0ZWROb2RlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaW50ZXJjZXB0ZWROb2RlcztcclxufSIsImltcG9ydCB7XHJcbiAgc3BvdEVuZW15LFxyXG4gIGlzVW5pdFNwb3R0ZWRCeUVuZW15LFxyXG4gIHNwb3RVbml0c1xyXG59IGZyb20gJy4vdW5pdFNwb3R0aW5nJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgc3BvdEVuZW15LFxyXG4gIGlzVW5pdFNwb3R0ZWRCeUVuZW15LFxyXG4gIHNwb3RVbml0c1xyXG59XHJcbiIsImltcG9ydCB7IGN0eCB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHsgZ3JpZFNpemUgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5pbXBvcnQgeyBkcmF3VW5pdCB9IGZyb20gJy4uL2RyYXcnO1xyXG5pbXBvcnQge1xyXG4gIGFkZFVuaXRJbnRvVmlzaWJsZVVuaXRzLFxyXG4gIHJlbW92ZVVuaXRGcm9tVmlzaWJsZVVuaXRzLFxyXG4gIGFkZFVuaXRUb1Nwb3R0ZWRVbml0cyxcclxufSBmcm9tICcuLi8uLi9zdG9yZSc7XHJcbmltcG9ydCB7YWRkVG9SZXZlYWxlZFVuaXRzfSBmcm9tICcuLi8uLi9zdG9yZS9BSS9lbmVtaWVzL3JldmVhbGVkRW5lbWllcyc7XHJcbmltcG9ydCB7XHJcbiAgcGxheWVyVW5pdHMsXHJcbiAgY29tcHV0ZXJVbml0cyxcclxufSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IFVuaXQgZnJvbSAnLi4vdHlwZXMvVW5pdCc7XHJcbmltcG9ydCB7IGdldE5vZGVGcm9tTWFwIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQge1xyXG4gIGFkZFRvSGlkaW5nRW5lbWllcyxcclxuICByZW1vdmVGcm9tSGlkaW5nRW5lbWllc1xyXG59IGZyb20gJy4uLy4uL3N0b3JlL0FJL2VuZW1pZXMvaGlkaW5nRW5lbWllcyc7XHJcblxyXG5leHBvcnQgY29uc3Qgc3BvdEVuZW15ID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGxldCBlbmVtaWVzOlVuaXRbXTtcclxuICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ3BsYXllcicpIHtcclxuICAgIGVuZW1pZXMgPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICB9XHJcbiAgaWYodW5pdC5jb250cm9sQnkgPT09ICdjb21wdXRlcicpIHtcclxuICAgIGVuZW1pZXMgPSBPYmplY3QuYXNzaWduKFtdLCBwbGF5ZXJVbml0cyk7XHJcbiAgfVxyXG4gIGxldCB2aXNpYmlsaXR5ID0gdW5pdC52aXNpYmlsaXR5O1xyXG4gIGxldCB2aXNpYmlsaXR5UmFuZ2UgPSB2aXNpYmlsaXR5ICogZ3JpZFNpemU7XHJcbiAgbGV0IHVuaXRYOm51bWJlciA9IHVuaXQuY3VycmVudE5vZGUueDtcclxuICBsZXQgdW5pdFk6bnVtYmVyID0gdW5pdC5jdXJyZW50Tm9kZS55O1xyXG4gIGxldCB1bml0Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXRYLCB1bml0WSk7XHJcbiAgZm9yKGxldCBlbmVteSBvZiBlbmVtaWVzKSB7XHJcbiAgICBsZXQgZW5lbXlYOm51bWJlciA9IGVuZW15LmN1cnJlbnROb2RlLng7XHJcbiAgICBsZXQgZW5lbXlZOm51bWJlciA9IGVuZW15LmN1cnJlbnROb2RlLnk7XHJcbiAgICBsZXQgZW5lbXlOb2RlID0gZ2V0Tm9kZUZyb21NYXAoZW5lbXlYLCBlbmVteVkpO1xyXG4gICAgbGV0IGR4ID0gTWF0aC5hYnModW5pdE5vZGUueCAtIGVuZW15Tm9kZS54KTtcclxuICAgIGxldCBkeSA9IE1hdGguYWJzKHVuaXROb2RlLnkgLSBlbmVteU5vZGUueSk7XHJcbiAgICBpZih2aXNpYmlsaXR5UmFuZ2UgPj0gZHggJiYgdmlzaWJpbGl0eVJhbmdlID49IGR5KSB7IFxyXG4gICAgICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJyAmJiBlbmVteS5pc1Zpc2libGUgPT09IGZhbHNlKSB7XHJcbiAgICAgICAgcmVtb3ZlRnJvbUhpZGluZ0VuZW1pZXMoZW5lbXkpO1xyXG4gICAgICB9XHJcbiAgICAgIGVuZW15LmlzVmlzaWJsZSA9IHRydWU7XHJcbiAgICAgIGRyYXdVbml0KGVuZW15KTtcclxuICAgICAgYWRkVW5pdEludG9WaXNpYmxlVW5pdHMoZW5lbXkpO1xyXG4gICAgICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgICAgIGFkZFVuaXRUb1Nwb3R0ZWRVbml0cyhlbmVteSk7XHJcbiAgICAgICAgYWRkVG9SZXZlYWxlZFVuaXRzKGVuZW15KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGlzVW5pdFNwb3R0ZWRCeUVuZW15ID0gKHVuaXQ6VW5pdCkgPT4ge1xyXG4gIGxldCBlbmVtaWVzOmFueVtdO1xyXG4gIGlmKHVuaXQuY29udHJvbEJ5ID09PSAncGxheWVyJykge1xyXG4gICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gIH1cclxuICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIHBsYXllclVuaXRzKTtcclxuICB9XHJcbiAgaWYoZW5lbWllcy5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgbGV0IHVuaXRYOm51bWJlciA9IHVuaXQuY3VycmVudE5vZGUueDtcclxuICBsZXQgdW5pdFk6bnVtYmVyID0gdW5pdC5jdXJyZW50Tm9kZS55O1xyXG4gIGxldCB1bml0Tm9kZSA9IGdldE5vZGVGcm9tTWFwKHVuaXRYLCB1bml0WSk7XHJcbiAgbGV0IGlzU3BvdHRlZCA9IGZhbHNlO1xyXG4gIGZvcihsZXQgZW5lbXkgb2YgZW5lbWllcykge1xyXG4gICAgbGV0IHZpc2liaWxpdHkgPSBlbmVteS52aXNpYmlsaXR5O1xyXG4gICAgbGV0IHZpc2liaWxpdHlSYW5nZSA9IHZpc2liaWxpdHkgKiBncmlkU2l6ZTtcclxuICAgIGxldCBlbmVteVg6bnVtYmVyID0gZW5lbXkuY3VycmVudE5vZGUueDtcclxuICAgIGxldCBlbmVteVk6bnVtYmVyID0gZW5lbXkuY3VycmVudE5vZGUueTtcclxuICAgIGxldCBlbmVteU5vZGUgPSBnZXROb2RlRnJvbU1hcChlbmVteVgsIGVuZW15WSk7XHJcbiAgICBsZXQgZHggPSBNYXRoLmFicyh1bml0Tm9kZS54IC0gZW5lbXlOb2RlLngpO1xyXG4gICAgbGV0IGR5ID0gTWF0aC5hYnModW5pdE5vZGUueSAtIGVuZW15Tm9kZS55KTtcclxuICAgIGlmKHZpc2liaWxpdHlSYW5nZSA+PSBkeCAmJiB2aXNpYmlsaXR5UmFuZ2UgPj0gZHkpIHtcclxuICAgICAgYWRkVW5pdEludG9WaXNpYmxlVW5pdHModW5pdCk7XHJcbiAgICAgIGlzU3BvdHRlZCA9IHRydWU7XHJcbiAgICAgIGlmKHVuaXQuaXNWaXNpYmxlID09PSBmYWxzZSAmJiB1bml0LmNvbnRyb2xCeSA9PT0gJ3BsYXllcicpIHtcclxuICAgICAgICByZW1vdmVGcm9tSGlkaW5nRW5lbWllcyh1bml0KTtcclxuICAgICAgfVxyXG4gICAgICB1bml0LmlzVmlzaWJsZSA9IHRydWU7XHJcbiAgICAgIGlmKHVuaXQuY29udHJvbEJ5ID09PSAnY29tcHV0ZXInKSB7XHJcbiAgICAgICAgYWRkVW5pdFRvU3BvdHRlZFVuaXRzKGVuZW15KTtcclxuICAgICAgfVxyXG4gICAgICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJykge1xyXG4gICAgICAgIGRyYXdVbml0KHVuaXQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGlmKCFpc1Nwb3R0ZWQpIHtcclxuICAgIHJlbW92ZVVuaXRGcm9tVmlzaWJsZVVuaXRzKHVuaXQpO1xyXG4gICAgaWYodW5pdC5jb250cm9sQnkgPT09ICdwbGF5ZXInICYmIHVuaXQuaXNWaXNpYmxlID09PSB0cnVlKSB7XHJcbiAgICAgIGFkZFRvSGlkaW5nRW5lbWllcyh1bml0KTtcclxuICAgIH1cclxuICAgIHVuaXQuaXNWaXNpYmxlID0gZmFsc2U7XHJcbiAgICBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ2NvbXB1dGVyJyAmJiAhdW5pdC5pc01vdmluZykge1xyXG4gICAgICBjdHguY2xlYXJSZWN0KHVuaXQueCwgdW5pdC55LCBncmlkU2l6ZSwgZ3JpZFNpemUpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNwb3RVbml0cyA9ICh1bml0czpVbml0W10pID0+IHtcclxuICBpZih1bml0cy5sZW5ndGggPiAwKSB7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgICAgaXNVbml0U3BvdHRlZEJ5RW5lbXkodW5pdCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgY29tcHV0ZXJVbml0cyxcclxuICBwbGF5ZXJVbml0cyxcclxuICB1bml0c1xyXG59IGZyb20gJy4vc3RvcmUvdW5pdC91bml0cyc7XHJcbmltcG9ydCB7IGRyYXdNZXNzYWdlIH0gZnJvbSAnLi9VSS9tZXNzYWdlcy9kcmF3TWVzc2FnZSc7XHJcbmltcG9ydCB7IG1lbGVlQ29tYmF0LCBzcG90VW5pdHMgfSBmcm9tICcuL3VuaXQnO1xyXG5pbXBvcnQgeyBmaW5pc2hCYXR0bGUgfSBmcm9tICcuL2NvbmZpZy9nbG9iYWwvZ2xvYmFsQ29uZmlnJztcclxuXHJcbmV4cG9ydCBjb25zdCBiYXR0bGVMaXN0ZW5lciA9ICgpID0+IHtcclxuICBzcG90VW5pdHModW5pdHMpO1xyXG4gIG1lbGVlQ29tYmF0KCk7XHJcbiAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgIGJhdHRsZUxpc3RlbmVyKCk7XHJcbiAgfSwgNjAwKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGlzQmF0dGxlRW5kID0gKCkgPT4ge1xyXG4gIGxldCBjb21wdXRlck51bWJlciA9IGNvbXB1dGVyVW5pdHMubGVuZ3RoO1xyXG4gIGxldCBwbGF5ZXJOdW1iZXIgPSBwbGF5ZXJVbml0cy5sZW5ndGg7XHJcbiAgaWYoY29tcHV0ZXJOdW1iZXIgPT09IDAgfHwgcGxheWVyTnVtYmVyID09PSAwKSB7XHJcbiAgICBmaW5pc2hCYXR0bGUoKTtcclxuICAgIGNoZWNrV2lubmVyKGNvbXB1dGVyTnVtYmVyLCBwbGF5ZXJOdW1iZXIpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNoZWNrV2lubmVyID0gKGNvbXB1dGVyTnVtYmVyOiBudW1iZXIsIHBsYXllck51bWJlcjogbnVtYmVyKSA9PiB7XHJcbiAgaWYoY29tcHV0ZXJOdW1iZXIgPT09IDApIHtcclxuICAgIGRyYXdNZXNzYWdlKCdWaWN0b3J5Jyk7XHJcbiAgfVxyXG4gIGVsc2UgaWYocGxheWVyTnVtYmVyID09PSAwKSB7XHJcbiAgICBmaW5pc2hCYXR0bGUoKTtcclxuICAgIGRyYXdNZXNzYWdlKCdEZWZlYXQnKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtNQVBfV0lEVEgsIENBTlZBU19IRUlHSFR9IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7YmFja2dyb3VuZENhbnZhc30gZnJvbSAnLi4vLi4vY29uZmlnL2NhbnZhcyc7XHJcblxyXG5pbXBvcnQge1xyXG4gIGJhY2tncm91bmRDdHgsXHJcbiAgY3R4LFxyXG4gIGF1eGlsaWFyeUN0eFxyXG59IGZyb20gJy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuXHJcbmV4cG9ydCBjb25zdCBkcmF3TWVzc2FnZSA9IChtZXNzYWdlOnN0cmluZykgPT4ge1xyXG4gIC8vIGJhY2tncm91bmRDdHguY2xlYXJSZWN0KDAsIDAsIFdJRFRILCBIRUlHSFQpO1xyXG4gIC8vIGN0eC5jbGVhclJlY3QoMCwwLCBXSURUSCwgSEVJR0hUKTtcclxuICBjdHguZmlsbFN0eWxlID0gJyMwMDAnO1xyXG4gIGN0eC5mb250ID0gJzI1NnB4IHNlcmlmJztcclxuICBjdHgudGV4dEFsaWduID0gJ2xlZnQnO1xyXG4gIGN0eC5maWxsVGV4dChtZXNzYWdlLCBNQVBfV0lEVEggLyAyIC0gNDAwLCBDQU5WQVNfSEVJR0hUIC8gMik7XHJcbn1cclxuIiwiaW1wb3J0IHsgZXZlbnRDdHggfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29uZmlnL2NvbnRleHQvY29udGV4dFwiO1xyXG5pbXBvcnQgeyBncmlkU2l6ZSwgTUFQX1dJRFRILCBNQVBfSEVJR0hUIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbmZpZ1wiO1xyXG5pbXBvcnQgeyBnZXROb2RlRnJvbU1hcCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYXdDbGlja2VkSWNvbiA9ICh4OiBudW1iZXIsIHk6IG51bWJlcikgPT4ge1xyXG4gICAgZXZlbnRDdHguY2xlYXJSZWN0KDAsIDAsIE1BUF9XSURUSCwgTUFQX0hFSUdIVCk7XHJcbiAgICBsZXQgbm9kZSA9IGdldE5vZGVGcm9tTWFwKHgsIHkpO1xyXG4gICAgaWYobm9kZSkge1xyXG4gICAgICAgIGxldCBub2RlQ2VudGVyWCA9IG5vZGUueCArIChncmlkU2l6ZSAvIDIpO1xyXG4gICAgICAgIGxldCBub2RlQ2VudGVyWSA9IG5vZGUueSArIChncmlkU2l6ZSAvIDIpO1xyXG4gICAgICAgIGxldCByYWRpdXMgPSBNYXRoLnJvdW5kKGdyaWRTaXplIC8gMyk7XHJcbiAgICAgICAgZXZlbnRDdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgZXZlbnRDdHguYXJjKG5vZGVDZW50ZXJYLCBub2RlQ2VudGVyWSwgcmFkaXVzLCAwLCBNYXRoLlBJKjIpO1xyXG4gICAgICAgIGV2ZW50Q3R4LnN0cm9rZVN0eWxlID0gXCIjMjBlZjA5XCI7XHJcbiAgICAgICAgZXZlbnRDdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgZXZlbnRDdHguY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGV2ZW50Q3R4LmNsZWFyUmVjdCgwLCAwLCBNQVBfV0lEVEgsIE1BUF9IRUlHSFQpO1xyXG4gICAgICAgIH0sIDEwMDApO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFByZXZpb3VzU3RhdGUgZnJvbSBcIi4uL2RlY2lzaW9uVW5pdC9tYXBDaGFuZ2VzRGV0ZWN0aW9uL1ByZXZpb3VzU3RhdGVcIjtcclxuaW1wb3J0IHsgbmVlZFRvQ2hhbmdlUG9zaXRpb24gfSBmcm9tIFwiLi4vZGVjaXNpb25Vbml0L21hcENoYW5nZXNEZXRlY3Rpb24vY2hhbmdlUG9zaXRpb25EZXRlY3Rpb25cIjtcclxuaW1wb3J0IHsgbW92ZVVuaXRzIH0gZnJvbSBcIi4vbW92ZVVuaXRzXCI7XHJcbmltcG9ydCB7IGNhbGN1bGF0ZVRvdGFsUG93ZXIgfSBmcm9tIFwiLi4vLi4vYW5hbHl6ZU1vZHVsZS9wb3dlckFuYWx5emVcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBjb21wdXRlckFjdGlvbiA9ICgpID0+IHtcclxuICAgIGxldCBwcmV2aW91c1N0YXRlID0gbmV3IFByZXZpb3VzU3RhdGUoKTtcclxuICAgIGNhbGN1bGF0ZVRvdGFsUG93ZXIoKTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGlmKG5lZWRUb0NoYW5nZVBvc2l0aW9uKHByZXZpb3VzU3RhdGUpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ05lZWQgdG8gY2hhbmdlIHBvc2l0aW9uJyk7XHJcbiAgICAgICAgICAgIG1vdmVVbml0cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcmV2aW91c1N0YXRlLnNldFByZXZpb3VzU3RhdGUoKTtcclxuICAgICAgICBjb21wdXRlckFjdGlvbigpO1xyXG4gICAgfSwgNjAwKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNvbXB1dGVyTW92ZW1lbnQgPSAoKSA9PiB7XHJcbiAgICBtb3ZlVW5pdHMoKTtcclxuICAgIGNvbXB1dGVyQWN0aW9uKCk7XHJcbn0iLCJpbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3VuaXRcIjtcclxuaW1wb3J0IHsgcGxheWVyVW5pdHMsIGNvbXB1dGVyVW5pdHMgfSBmcm9tIFwiLi4vLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0c1wiO1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVUb3RhbFBsYXllclBvd2VyLCBjYWxjdWxhdGVUb3RhbENvbXB1dGVyUG93ZXIgfSBmcm9tIFwiLi4vLi4vLi4vYW5hbHl6ZU1vZHVsZS9wb3dlckFuYWx5emVcIjtcclxuaW1wb3J0IHsgdmlzaWJsZUZvclBsYXllclVuaXRzLCB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi8uLi9zdG9yZS91bml0L3Zpc2libGVVbml0c1wiO1xyXG5pbXBvcnQgeyBoaWRpbmdFbmVtaWVzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL0FJL2VuZW1pZXMvaGlkaW5nRW5lbWllc1wiO1xyXG5cclxuY2xhc3MgUHJldmlvdXNTdGF0ZSB7XHJcbiAgICBwbGF5ZXJVbml0czogVW5pdFtdO1xyXG4gICAgY29tcHV0ZXJVbml0czogVW5pdFtdO1xyXG4gICAgcGxheWVyVG90YWxIZWFsdGg6IG51bWJlcjtcclxuICAgIGNvbXB1dGVyVG90YWxIZWFsdGg6IG51bWJlcjtcclxuICAgIHZpc2libGVGb3JQbGF5ZXJVbml0czogVW5pdFtdO1xyXG4gICAgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHM6IFVuaXRbXTtcclxuICAgIGhpZGluZ0VuZW1pZXM6IFVuaXRbXTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBsZXQgcGxheWVyUG93ZXIgPSBjYWxjdWxhdGVUb3RhbFBsYXllclBvd2VyKCk7XHJcbiAgICAgICAgbGV0IGNvbXB1dGVyUG93ZXIgPSBjYWxjdWxhdGVUb3RhbENvbXB1dGVyUG93ZXIoKTtcclxuICAgICAgICB0aGlzLnBsYXllclVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgcGxheWVyVW5pdHMpO1xyXG4gICAgICAgIHRoaXMuY29tcHV0ZXJVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gICAgICAgIHRoaXMucGxheWVyVG90YWxIZWFsdGggPSBwbGF5ZXJQb3dlci50b3RhbEhlYWx0aDtcclxuICAgICAgICB0aGlzLmNvbXB1dGVyVG90YWxIZWFsdGggPSBjb21wdXRlclBvd2VyLnRvdGFsSGVhbHRoO1xyXG4gICAgICAgIHRoaXMudmlzaWJsZUZvclBsYXllclVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgdmlzaWJsZUZvclBsYXllclVuaXRzKTtcclxuICAgICAgICB0aGlzLnZpc2libGVGb3JDb21wdXRlclVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMpO1xyXG4gICAgICAgIHRoaXMuaGlkaW5nRW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIGhpZGluZ0VuZW1pZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFByZXZpb3VzU3RhdGUoKSB7XHJcbiAgICAgICAgbGV0IHBsYXllclBvd2VyID0gY2FsY3VsYXRlVG90YWxQbGF5ZXJQb3dlcigpO1xyXG4gICAgICAgIGxldCBjb21wdXRlclBvd2VyID0gY2FsY3VsYXRlVG90YWxDb21wdXRlclBvd2VyKCk7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXJVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIHBsYXllclVuaXRzKTtcclxuICAgICAgICB0aGlzLmNvbXB1dGVyVW5pdHMgPSBPYmplY3QuYXNzaWduKFtdLCBjb21wdXRlclVuaXRzKTtcclxuICAgICAgICB0aGlzLnBsYXllclRvdGFsSGVhbHRoID0gcGxheWVyUG93ZXIudG90YWxIZWFsdGg7XHJcbiAgICAgICAgdGhpcy5jb21wdXRlclRvdGFsSGVhbHRoID0gY29tcHV0ZXJQb3dlci50b3RhbEhlYWx0aDtcclxuICAgICAgICB0aGlzLnZpc2libGVGb3JQbGF5ZXJVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIHZpc2libGVGb3JQbGF5ZXJVbml0cyk7XHJcbiAgICAgICAgdGhpcy52aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyA9IE9iamVjdC5hc3NpZ24oW10sIHZpc2libGVGb3JDb21wdXRlclVuaXRzKTtcclxuICAgICAgICB0aGlzLmhpZGluZ0VuZW1pZXMgPSBPYmplY3QuYXNzaWduKFtdLCBoaWRpbmdFbmVtaWVzKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgUHJldmlvdXNTdGF0ZTsiLCJpbXBvcnQgUG93ZXIgZnJvbSAnLi9Qb3dlcic7XHJcbmV4cG9ydCBsZXQgaW5pdGlhbENvbXB1dGVyUG93ZXIgPSBuZXcgUG93ZXI7XHJcbiIsImltcG9ydCBQb3dlciBmcm9tICcuL1Bvd2VyJztcclxuZXhwb3J0IGxldCBpbml0aWFsUGxheWVyUG93ZXIgPSBuZXcgUG93ZXI7XHJcbiIsImltcG9ydCBQb3dlciBmcm9tICcuL1Bvd2VyJztcclxuZXhwb3J0IGxldCB2aXNpYmxlUGxheWVyVW5pdHNQb3dlciA9IG5ldyBQb3dlcjtcclxuIiwiaW1wb3J0IFBvd2VyIGZyb20gJy4vUG93ZXInO1xyXG5cclxuZXhwb3J0IGxldCByZXZlYWxlZFVuaXRzUG93ZXIgPSBuZXcgUG93ZXI7IiwiaW1wb3J0IFByZXZpb3VzU3RhdGUgZnJvbSBcIi4vUHJldmlvdXNTdGF0ZVwiO1xyXG5pbXBvcnQgeyB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi8uLi9zdG9yZS91bml0L3Zpc2libGVVbml0c1wiO1xyXG5pbXBvcnQgeyBjb21wdXRlclVuaXRzLCBwbGF5ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzXCI7XHJcbmltcG9ydCB7IHBsYXllclBvd2VyIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL0FJL3Bvd2VyL3BsYXllclBvd2VyXCI7XHJcbmltcG9ydCB7IGNvbXB1dGVyUG93ZXIgfSBmcm9tIFwiLi4vLi4vLi4vLi4vc3RvcmUvQUkvcG93ZXIvY29tcHV0ZXJQb3dlclwiO1xyXG5pbXBvcnQgeyBoaWRpbmdFbmVtaWVzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL0FJL2VuZW1pZXMvaGlkaW5nRW5lbWllc1wiO1xyXG5pbXBvcnQgeyBpc1VuaXRzQ2hhbmdlZCwgZ2V0RmlnaHRpbmdVbml0cyB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy91bml0L0FJL0FJX2FjdGlvbnNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBuZWVkVG9DaGFuZ2VQb3NpdGlvbiA9IChwcmV2aW91c1N0YXRlOiBQcmV2aW91c1N0YXRlKTogYm9vbGVhbiA9PiB7XHJcbiAgICBpZihpc1VuaXRzQ2hhbmdlZCh2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cywgcHJldmlvdXNTdGF0ZS52aXNpYmxlRm9yQ29tcHV0ZXJVbml0cykpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoY29tcHV0ZXJVbml0cy5sZW5ndGggIT0gcHJldmlvdXNTdGF0ZS5jb21wdXRlclVuaXRzLmxlbmd0aCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZihwbGF5ZXJVbml0cy5sZW5ndGggIT0gcHJldmlvdXNTdGF0ZS5wbGF5ZXJVbml0cy5sZW5ndGgpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGxldCBwbGF5ZXJIZWFsdGhQZXJjZW50YWdlID0gcHJldmlvdXNTdGF0ZS5wbGF5ZXJUb3RhbEhlYWx0aCAvIHBsYXllclBvd2VyLnRvdGFsSGVhbHRoO1xyXG4gICAgaWYoMSAtIHBsYXllckhlYWx0aFBlcmNlbnRhZ2UgPj0gMC4yKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBsZXQgY29tcHV0ZXJIZWFsdGhQZXJjZW50YWdlID0gcHJldmlvdXNTdGF0ZS5jb21wdXRlclRvdGFsSGVhbHRoIC8gY29tcHV0ZXJQb3dlci50b3RhbEhlYWx0aDtcclxuICAgIGlmKDEgLSBjb21wdXRlckhlYWx0aFBlcmNlbnRhZ2UgPj0gMC4yKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBpZihpc1VuaXRzQ2hhbmdlZChoaWRpbmdFbmVtaWVzLCBwcmV2aW91c1N0YXRlLmhpZGluZ0VuZW1pZXMpKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBpZihpc1VuaXRzQ2hhbmdlZChnZXRGaWdodGluZ1VuaXRzKGNvbXB1dGVyVW5pdHMpLCBnZXRGaWdodGluZ1VuaXRzKHByZXZpb3VzU3RhdGUuY29tcHV0ZXJVbml0cykpKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn0iLCJpbXBvcnQgeyBjb21wdXRlclVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uL3N0b3JlL3VuaXQvdW5pdHNcIjtcclxuaW1wb3J0IHsgbW92ZVRvIH0gZnJvbSAnLi4vLi4vLi4vdW5pdC9tb3ZlbWVudC9jb21tb24vbW92ZVRvJztcclxuaW1wb3J0IHsgYmVzdEFjdGlvbkFsZ29yaXRobSB9IGZyb20gXCIuLi9kZWNpc2lvblVuaXQvYmVzdFBvc2l0aW9uQWxnb3JpdGhtL2Jlc3RBY3Rpb25zXCI7XHJcbmltcG9ydCBDb21tYW5kcyBmcm9tIFwiLi4vLi4vLi4vc3RvcmUvQUkvY29tbWFuZHMvQ29tbWFuZHNcIjtcclxuaW1wb3J0IEFjdGlvbiBmcm9tIFwiLi4vZGVjaXNpb25Vbml0L3JhbmRvbUFjdGlvbi9BY3Rpb25cIjtcclxuaW1wb3J0IHsgQ29tbWFuZCB9IGZyb20gXCIuLi9kZWNpc2lvblVuaXQvcmFuZG9tQWN0aW9uL0NvbW1hbmRcIjtcclxuaW1wb3J0IHsgYXR0YWNrRW5lbXkgfSBmcm9tIFwiLi4vLi4vLi4vdW5pdC9tb3ZlbWVudFwiO1xyXG5pbXBvcnQgeyBhc3Nlc3NWdWxuZXJhYmlsaXR5IH0gZnJvbSBcIi4uLy4uL3Byb2Nlc3NNb2R1bGUvdnVsbmVyYWJpbGl0eVwiO1xyXG5pbXBvcnQgeyBiZUNsb3NlVG8gfSBmcm9tIFwiLi4vLi4vLi4vdW5pdC9tb3ZlbWVudC9jb21wdXRlci9iZUNsb3NlVG9cIjtcclxuaW1wb3J0IHsgZ2VuZXJhdGVDdXJyZW50Q29tbWFuZE51bWJlciB9IGZyb20gXCIuLi9kZWNpc2lvblVuaXQvY29tbWFuZE51bWJlci9jdXJyZW50Q29tbWFuZE51bWJlclwiO1xyXG5pbXBvcnQgeyBzZXRDb21tYW5kTnVtYmVyVG9Vbml0cyB9IGZyb20gXCIuLi9kZWNpc2lvblVuaXQvY29tbWFuZE51bWJlci9zZXRDb21tYW5kTnVtYmVyVG9Vbml0c1wiO1xyXG5pbXBvcnQgeyBhZHZhbmNlIH0gZnJvbSBcIi4uLy4uLy4uL3VuaXQvbW92ZW1lbnQvY29tcHV0ZXIvYWR2YW5jZVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1vdmVVbml0cyA9ICgpID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ21vdmVVbml0cycpO1xyXG4gICAgbGV0IGNvbW1hbmROdW1iZXIgPSBnZW5lcmF0ZUN1cnJlbnRDb21tYW5kTnVtYmVyKCk7XHJcbiAgICBzZXRDb21tYW5kTnVtYmVyVG9Vbml0cyhjb21tYW5kTnVtYmVyKTtcclxuICAgIGxldCBjb21tYW5kczogQ29tbWFuZHMgPSBiZXN0QWN0aW9uQWxnb3JpdGhtKCk7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgY29tcHV0ZXJVbml0cykge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYGNvbW1hbmQgdW5pdCAke3VuaXQuaWR9ICR7Y29tbWFuZHMuZ2V0Q29tbWFuZHNCeVVuaXRJZCh1bml0LmlkKS5jb21tYW5kfWApO1xyXG4gICAgfVxyXG4gICAgZm9yKGxldCB1bml0IG9mIGNvbXB1dGVyVW5pdHMpIHtcclxuICAgICAgICBsZXQgYWN0aW9uOiBBY3Rpb24gPSBjb21tYW5kcy5nZXRDb21tYW5kc0J5VW5pdElkKHVuaXQuaWQpO1xyXG4gICAgICAgIGxldCBjb21tYW5kID0gYWN0aW9uLmNvbW1hbmQ7XHJcbiAgICAgICAgbGV0IG5vZGUgPSBhY3Rpb24ubm9kZTtcclxuICAgICAgICBpZihjb21tYW5kID09PSBDb21tYW5kLkF0dGFjaykge1xyXG4gICAgICAgICAgICBhdHRhY2tFbmVteSh1bml0LCBhY3Rpb24uYWN0aW9uVW5pdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY29tbWFuZCA9PT0gQ29tbWFuZC5Nb3ZlVG9Ob2RlKSB7XHJcbiAgICAgICAgICAgIGFkdmFuY2UodW5pdCwgYWN0aW9uLm5vZGUsIGNvbW1hbmROdW1iZXIsIHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbW1hbmQgPT09IENvbW1hbmQuQmVDbG9zZVRvVW5pdCkge1xyXG4gICAgICAgICAgICBsZXQgYWxseSA9IGFjdGlvbi5hY3Rpb25Vbml0O1xyXG4gICAgICAgICAgICBsZXQgdW5pdFZ1bG5lcmFiaWxpdHkgPSBhc3Nlc3NWdWxuZXJhYmlsaXR5KHVuaXQpO1xyXG4gICAgICAgICAgICBsZXQgYWxseVZ1bG5lcmFiaWxpdHkgPSBhc3Nlc3NWdWxuZXJhYmlsaXR5KGFsbHkpO1xyXG4gICAgICAgICAgICBpZih1bml0VnVsbmVyYWJpbGl0eSA+PSBhbGx5VnVsbmVyYWJpbGl0eSkge1xyXG4gICAgICAgICAgICAgICAgYmVDbG9zZVRvKHVuaXQsIGFsbHksIGNvbW1hbmROdW1iZXIsIHRydWUsIHRydWUpO1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGJlQ2xvc2VUbyh1bml0LCBhbGx5LCBjb21tYW5kTnVtYmVyLCBmYWxzZSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgZ2VuZXJhdGVSYW5kb21BY3Rpb24gfSBmcm9tIFwiLi4vcmFuZG9tQWN0aW9uL2dlbmVyYXRlUmFuZG9tQWN0aW9uXCI7XHJcbmltcG9ydCB7IGNvbXB1dGVyVW5pdHMgfSBmcm9tIFwiLi4vLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0c1wiO1xyXG5pbXBvcnQgQWN0aW9uIGZyb20gXCIuLi9yYW5kb21BY3Rpb24vQWN0aW9uXCI7XHJcbmltcG9ydCBDb21tYW5kUXVldWUgZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL3F1ZXVlcy9Db21tYW5kUXVldWVcIjtcclxuaW1wb3J0IENvbW1hbmRzIGZyb20gXCIuLi8uLi8uLi8uLi9zdG9yZS9BSS9jb21tYW5kcy9Db21tYW5kc1wiO1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVUb3RhbEVmZmljaWVuY3kgfSBmcm9tIFwiLi4vLi4vLi4vcHJvY2Vzc01vZHVsZS9lZmZpY2llbmN5L3RvdGFsRWZmaWNpZW5jeVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJlc3RBY3Rpb25BbGdvcml0aG0gPSAoKTogQ29tbWFuZHMgPT4ge1xyXG4gICAgY29uc3QgbWF4QXR0ZW1wdHMgPSAxMDtcclxuICAgIGxldCBjb21tYW5kUXVldWU6IENvbW1hbmRRdWV1ZSA9IG5ldyBDb21tYW5kUXVldWUoKTtcclxuICAgIGxldCBpID0gMDtcclxuICAgIHdoaWxlKGkgPD0gbWF4QXR0ZW1wdHMpIHtcclxuICAgICAgICBsZXQgY29tbWFuZHM6IENvbW1hbmRzID0gbmV3IENvbW1hbmRzKCk7XHJcbiAgICAgICAgZm9yKGxldCB1bml0IG9mIGNvbXB1dGVyVW5pdHMpIHtcclxuICAgICAgICAgICAgbGV0IGFjdGlvbjogQWN0aW9uID0gZ2VuZXJhdGVSYW5kb21BY3Rpb24odW5pdCk7XHJcbiAgICAgICAgICAgIGNvbW1hbmRzLmFkZENvbW1hbmQodW5pdC5pZCwgYWN0aW9uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnMgPSBjb21tYW5kcy5nZXRVbml0c1dpdGhTaW11bGF0aW5nUG9zaXRpb25zKCk7XHJcbiAgICAgICAgbGV0IGVmZmljaWVuY3kgPSBjYWxjdWxhdGVUb3RhbEVmZmljaWVuY3kodW5pdHNXaXRoU2ltdWxhdGluZ1Bvc2l0aW9ucyk7XHJcbiAgICAgICAgY29tbWFuZFF1ZXVlLmluc2VydChlZmZpY2llbmN5LCBjb21tYW5kcyk7XHJcbiAgICAgICAgaSA9IGkgKyAxO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGNvbW1hbmRRdWV1ZS5leHRyYWN0TWF4KCk7XHJcbn0iLCJpbXBvcnQgeyB2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi8uLi9zdG9yZS91bml0L3Zpc2libGVVbml0c1wiO1xyXG5pbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3VuaXRcIjtcclxuaW1wb3J0IHsgZ2V0UmFuZG9tVW5pdCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy91bml0L3JhbmRvbS9nZXRSYW5kb21Vbml0XCI7XHJcbmltcG9ydCB7IHBsYXllclVuaXRzLCBjb21wdXRlclVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL3VuaXQvdW5pdHNcIjtcclxuaW1wb3J0IHsgZ2V0U3Vycm91bmRlZE5vZGVzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzXCI7XHJcbmltcG9ydCBNYXBOb2RlIGZyb20gXCIuLi8uLi8uLi8uLi9tYXAvbm9kZXMvTWFwTm9kZVwiO1xyXG5pbXBvcnQgeyBnZXRSYW5kb21Ob2RlIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL25vZGVcIjtcclxuaW1wb3J0IHsgZ2V0UmFuZG9tVmFsdWVJblJhbmdlIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL3JhbmRvbVwiO1xyXG5pbXBvcnQgeyBDb21tYW5kIH0gZnJvbSBcIi4vQ29tbWFuZFwiO1xyXG5pbXBvcnQgQWN0aW9uIGZyb20gXCIuL0FjdGlvblwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUmFuZG9tQWN0aW9uID0gKHVuaXQ6IFVuaXQpOiBBY3Rpb24gPT4ge1xyXG4gICAgbGV0IGFjdGlvblVuaXQ6IFVuaXQgPSBudWxsO1xyXG4gICAgbGV0IGFjdGlvbk5vZGU6IE1hcE5vZGU7XHJcbiAgICBsZXQgY29tbWFuZCA9IGNob29zZVJhbmRvbUNvbW1hbmQoKTtcclxuICAgIGlmKHZpc2libGVGb3JDb21wdXRlclVuaXRzLmxlbmd0aCA9PT0gMCAmJiAoY29tbWFuZCA9PT0gQ29tbWFuZC5Nb3ZlVG9Ob2RlIHx8IGNvbW1hbmQgPT09IENvbW1hbmQuQXR0YWNrKSkge1xyXG4gICAgICAgIGNvbW1hbmQgPSBDb21tYW5kLk1vdmVUb05vZGU7XHJcbiAgICAgICAgbGV0IGVuZW15ID0gZ2V0UmFuZG9tVW5pdChwbGF5ZXJVbml0cyk7XHJcbiAgICAgICAgbGV0IG5vZGVzID0gZ2V0U3Vycm91bmRlZE5vZGVzKGVuZW15LCAzKTtcclxuICAgICAgICBhY3Rpb25Ob2RlID0gZ2V0UmFuZG9tTm9kZShub2Rlcyk7XHJcbiAgICB9IFxyXG4gICAgZWxzZSBpZihjb21tYW5kID09PSBDb21tYW5kLkF0dGFjaykge1xyXG4gICAgICAgIGFjdGlvblVuaXQgPSBnZXRSYW5kb21Vbml0KHZpc2libGVGb3JDb21wdXRlclVuaXRzKTtcclxuICAgICAgICBhY3Rpb25Ob2RlID0gYWN0aW9uVW5pdC5jdXJyZW50Tm9kZTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoY29tbWFuZCA9PT0gQ29tbWFuZC5Nb3ZlVG9Ob2RlKSB7XHJcbiAgICAgICAgbGV0IG5vZGVzID0gZ2V0U3Vycm91bmRlZE5vZGVzKHVuaXQpO1xyXG4gICAgICAgIGFjdGlvbk5vZGUgPSBnZXRSYW5kb21Ob2RlKG5vZGVzKTtcclxuICAgIH1cclxuICAgIGVsc2UgaWYoY29tbWFuZCA9PT0gQ29tbWFuZC5CZUNsb3NlVG9Vbml0KSB7XHJcbiAgICAgICAgYWN0aW9uVW5pdCA9IGdldFJhbmRvbVVuaXQoY29tcHV0ZXJVbml0cyk7XHJcbiAgICAgICAgYWN0aW9uTm9kZSA9IGFjdGlvblVuaXQuY3VycmVudE5vZGU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJldHVybiBuZXcgQWN0aW9uKHVuaXQsIGFjdGlvbk5vZGUsIGNvbW1hbmQsIGFjdGlvblVuaXQpO1xyXG59XHJcblxyXG5jb25zdCBjaG9vc2VSYW5kb21Db21tYW5kID0gKCk6IENvbW1hbmQgPT4ge1xyXG4gICAgbGV0IHJhbmRvbU51bWJlciA9IGdldFJhbmRvbVZhbHVlSW5SYW5nZSgwLCAyKTtcclxuICAgIGxldCBhY3Rpb25zOiBDb21tYW5kW10gPSBbQ29tbWFuZC5CZUNsb3NlVG9Vbml0LCBDb21tYW5kLkF0dGFjaywgQ29tbWFuZC5Nb3ZlVG9Ob2RlXTtcclxuICAgIHJldHVybiBhY3Rpb25zW3JhbmRvbU51bWJlcl07XHJcbn0iLCJpbXBvcnQge1xyXG4gICAgZ2V0UmFuZG9tVmFsdWVJblJhbmdlXHJcbn0gZnJvbSAnLi9nZXRSYW5kb21WYWx1ZUluUmFuZ2UnO1xyXG5cclxuaW1wb3J0IHtcclxuICAgIHJhbmRvbWl6ZU1lbGVlRGFtYWdlXHJcbn0gZnJvbSAnLi9tZWxlZURhbWFnZSc7XHJcblxyXG5pbXBvcnQge1xyXG4gICAgZ2V0UmFuZG9tVmFsdWVJblJhbmdlV2l0aFByb2JhYmlsaXR5XHJcbn0gZnJvbSAnLi9yYW5nZVdpdGhQcm9iYWJpbGl0eSc7XHJcblxyXG5cclxuXHJcbmV4cG9ydCB7XHJcbiAgICBnZXRSYW5kb21WYWx1ZUluUmFuZ2UsXHJcbiAgICBnZXRSYW5kb21WYWx1ZUluUmFuZ2VXaXRoUHJvYmFiaWxpdHksXHJcbiAgICByYW5kb21pemVNZWxlZURhbWFnZVxyXG59IiwiaW1wb3J0IHtnZXRSYW5kb21WYWx1ZUluUmFuZ2V9IGZyb20gJy4vZ2V0UmFuZG9tVmFsdWVJblJhbmdlJztcclxuXHJcbi8qXHJcbiAgICByZXR1cm4gYSByYW5kb20gbnVtYmVyIHdpdGhpbiB0aGUgcmFuZ2VcclxuICAgIGJhc2VkIG9uIHNvbWUgcHJvYmFiaWxpdHlcclxuICAgIGUuZyByYW5nZSBmcm9tIDQwIHRvIDYwXHJcbiAgICB3aXRoIDgwJSBwcm9iYWJpbGl0eSBpbiBpbnRlcnZhbCA1MCB0byA1NVxyXG4gICAgQGFyZ3NcclxuICAgIG1pbjogbnVtYmVyLFxyXG4gICAgbWF4OiBudW1iZXIsXHJcbiAgICBwcm9iYWJpbGl0aWVzOiB7XHJcbiAgICAgICAgaW50ZXJ2YWw6IFtpbnRlcnZhbE1pbjpudW1iZXIsIGludGVydmFsTWF4Om51bWJlcl0sXHJcbiAgICAgICAgcHJvYmFiaWxpdHk6IHByb2JhYmlsaXR5OiBudW1iZXJcclxuICAgIH1cclxuKi9cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRSYW5kb21WYWx1ZUluUmFuZ2VXaXRoUHJvYmFiaWxpdHkgPSAoXHJcbiAgICBtaW46IG51bWJlcixcclxuICAgIG1heDogbnVtYmVyLFxyXG4gICAgcHJvYmFiaWxpdGllczogYW55IFxyXG4pOiBudW1iZXIgPT4ge1xyXG5cclxuICAgIC8vIGNoZWNrIGZvciBlcnJvcnNcclxuXHJcbiAgICBpZihtaW4gPj0gbWF4KSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdtaW4gY2Fubm90IGJlIG1vcmUgb3IgZXF1YWwgdG8gbWF4Jyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYoIXByb2JhYmlsaXRpZXMuaW50ZXJ2YWwpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2JhYmlsaXR5IGludGVydmFsIGlzIHJlcXVpcmVkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYocHJvYmFiaWxpdGllcy5pbnRlcnZhbC5sZW5ndGggIT0gMikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBwcm9iYWJpbGl0eSBpbnRlcnZhbCBzeW50YXgnKTtcclxuICAgIH1cclxuXHJcbiAgICBpZihwcm9iYWJpbGl0aWVzLmludGVydmFsWzBdIDwgbWluIHx8IHByb2JhYmlsaXRpZXMuaW50ZXJ2YWxbMV0gPCBtaW4pIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ29uZSBvZiBwcm9iYWJpbGl0eSBpbnRlcnZhbCBpcyBsZXNzIHRoYW4gbWluJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYocHJvYmFiaWxpdGllcy5pbnRlcnZhbFswXSA+IG1heCB8fCBwcm9iYWJpbGl0aWVzLmludGVydmFsWzFdID4gbWF4KSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdvbmUgb2YgcHJvYmFiaWxpdHkgaW50ZXJ2YWwgaXMgbW9yZSB0aGFuIG1heCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHByb2JhYmlsaXRpZXMuaW50ZXJ2YWxbMF0gPj0gcHJvYmFiaWxpdGllcy5pbnRlcnZhbFsxXSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBwcm9iYWJpbGl0eSBpbnRlcnZhbCcpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKCFwcm9iYWJpbGl0aWVzLnByb2JhYmlsaXR5KSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdwcm9iYWJpbGl0aWVzIGFyZ3VtZW50IHJlcXVpcmVkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYocHJvYmFiaWxpdGllcy5wcm9iYWJpbGl0eSA8IDAgfHwgcHJvYmFiaWxpdGllcy5wcm9iYWJpbGl0eSA+IDEwMCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBwcm9iYWJpbGl0eSB2YWx1ZScpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmKHByb2JhYmlsaXRpZXMucHJvYmFiaWxpdHkgPiAwICYmIHByb2JhYmlsaXRpZXMucHJvYmFiaWxpdHkgPCAxKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHByb2JhYmlsaXR5IHZhbHVlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZW5kIG9mIGNoZWNraW5nIGZvciBlcnJvcnNcclxuXHJcbiAgICBsZXQgcmFuZG9tVmFsdWU6IG51bWJlciA9IE1hdGgucmFuZG9tKCk7XHJcbiAgICBsZXQgaW50ZXJ2YWxNaW46IG51bWJlciA9IHByb2JhYmlsaXRpZXMuaW50ZXJ2YWxbMF07XHJcbiAgICBsZXQgaW50ZXJ2YWxNYXg6IG51bWJlciA9IHByb2JhYmlsaXRpZXMuaW50ZXJ2YWxbMV07XHJcbiAgICBsZXQgdmFsdWU6IG51bWJlcjtcclxuXHJcbiAgICBsZXQgcHJvYmFiaWxpdHk6IG51bWJlciA9IChwcm9iYWJpbGl0aWVzLnByb2JhYmlsaXR5ICogMC4wMSk7XHJcblxyXG4gICAgXHJcblxyXG4gICAgaWYocmFuZG9tVmFsdWUgPj0gMCAmJiByYW5kb21WYWx1ZSA8PSBwcm9iYWJpbGl0eSkge1xyXG4gICAgICAgIHZhbHVlID0gZ2V0UmFuZG9tVmFsdWVJblJhbmdlKGludGVydmFsTWluLCBpbnRlcnZhbE1heCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHZhbHVlID0gZ2V0UmFuZG9tVmFsdWVJblJhbmdlKG1pbiwgbWF4KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdmFsdWU7XHJcbn0iLCJpbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uLy4uL3VuaXRcIjtcclxuaW1wb3J0IE1hcE5vZGUgZnJvbSBcIi4uLy4uLy4uLy4uL21hcC9ub2Rlcy9NYXBOb2RlXCI7XHJcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiLi9Db21tYW5kXCI7XHJcblxyXG5jbGFzcyBBY3Rpb24ge1xyXG4gICAgdW5pdDogVW5pdDtcclxuICAgIG5vZGUgOiBNYXBOb2RlO1xyXG4gICAgY29tbWFuZDogQ29tbWFuZFxyXG4gICAgYWN0aW9uVW5pdDogVW5pdDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih1bml0OiBVbml0LCBub2RlOiBNYXBOb2RlLCBjb21tYW5kOiBDb21tYW5kLCBhY3Rpb25Vbml0OiBVbml0ID0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMudW5pdCA9IHVuaXQ7XHJcbiAgICAgICAgdGhpcy5ub2RlID0gbm9kZTtcclxuICAgICAgICB0aGlzLmNvbW1hbmQgPSBjb21tYW5kO1xyXG4gICAgICAgIHRoaXMuYWN0aW9uVW5pdCA9IGFjdGlvblVuaXRcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQWN0aW9uOyIsImltcG9ydCBQb3NpdGlvbnMgZnJvbSBcIi4uL0FJL3Bvc2l0aW9ucy9Qb3NpdGlvbnNcIjtcclxuaW1wb3J0IENvbW1hbmRzIGZyb20gXCIuLi9BSS9jb21tYW5kcy9Db21tYW5kc1wiO1xyXG5cclxuY2xhc3MgQ29tbWFuZFF1ZXVlIHtcclxuICAgcHJpdmF0ZSBlbGVtZW50czogYW55ID0gW107XHJcbiAgIHByaXZhdGUgY29tbWFuZElkOiBudW1iZXIgPSAxO1xyXG5cclxuICAgaW5zZXJ0KGVmZmljaWVuY3k6IG51bWJlciwgY29tbWFuZHM6IENvbW1hbmRzKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKHtcclxuICAgICAgICAgICAgZWZmaWNpZW5jeTogZWZmaWNpZW5jeSxcclxuICAgICAgICAgICAgY29tbWFuZHM6IGNvbW1hbmRzLFxyXG4gICAgICAgICAgICBjb21tYW5kSWQ6IHRoaXMuY29tbWFuZElkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuY29tbWFuZElkICs9IDE7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGV4dHJhY3RNYXgoKSB7XHJcbiAgICAgICAgbGV0IG1heCA9IHRoaXMuZWxlbWVudHNbMF07XHJcbiAgICAgICAgbGV0IG1heEluZGV4ID0gMDtcclxuICAgICAgICBmb3IobGV0IGkgPSAxOyBpIDwgdGhpcy5lbGVtZW50cy5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICBpZih0aGlzLmVsZW1lbnRzW2ldLmVmZmljaWVuY3kgPiBtYXguZWZmaWNpZW5jeSkge1xyXG4gICAgICAgICAgICAgICAgbWF4ID0gdGhpcy5lbGVtZW50c1tpXTtcclxuICAgICAgICAgICAgICAgIG1heEluZGV4ID0gaTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVsZW1lbnRzID0gdGhpcy5lbGVtZW50cy5maWx0ZXIoKGVsOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYoZWwuY29tbWFuZElkID09PSBtYXguY29tbWFuZElkKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBtYXguY29tbWFuZHM7XHJcbiAgICB9XHJcblxyXG4gICAgaXNFbXB0eSgpIHtcclxuICAgICAgICBpZih0aGlzLmVsZW1lbnRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyRWxlbWVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IFtdO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21tYW5kUXVldWU7IiwiaW1wb3J0IHsgY29tcHV0ZXJVbml0cyB9IGZyb20gXCIuLi8uLi91bml0L3VuaXRzXCI7XHJcbmltcG9ydCB7IFVuaXQgfSBmcm9tIFwiLi4vLi4vLi4vdW5pdFwiO1xyXG5pbXBvcnQgQWN0aW9uIGZyb20gXCIuLi8uLi8uLi9BSS9zdHJhdGVneU1vZHVsZS9kZWNpc2lvblVuaXQvcmFuZG9tQWN0aW9uL0FjdGlvblwiO1xyXG5cclxuY2xhc3MgQ29tbWFuZHMge1xyXG4gICAgcHJpdmF0ZSBjb21tYW5kczogYW55ID0ge307XHJcbiAgICBhZGRDb21tYW5kKHVuaXRJZDogbnVtYmVyLCBhY3Rpb246IEFjdGlvbikge1xyXG4gICAgICAgIHRoaXMuY29tbWFuZHNbdW5pdElkXSA9IGFjdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBjbGVhckNvbW1hbmRzKCkge1xyXG4gICAgICAgIHRoaXMuY29tbWFuZHMgPSB7fTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb21tYW5kc0J5VW5pdElkKHVuaXRJZDogbnVtYmVyKTogQWN0aW9uIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb21tYW5kc1t1bml0SWRdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnMoKSB7XHJcbiAgICAgICAgbGV0IHVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnM6IFVuaXRbXSA9IFtdO1xyXG4gICAgICAgIGZvcihsZXQgdW5pdCBvZiBjb21wdXRlclVuaXRzKSB7XHJcbiAgICAgICAgICAgIGxldCB1cGRhdGVkVW5pdCA9IE9iamVjdC5jcmVhdGUodW5pdCk7XHJcbiAgICAgICAgICAgIGxldCBub2RlID0gdGhpcy5nZXRDb21tYW5kc0J5VW5pdElkKHVwZGF0ZWRVbml0LmlkKS5ub2RlO1xyXG4gICAgICAgICAgICB1cGRhdGVkVW5pdC5zZXRYKG5vZGUueCk7XHJcbiAgICAgICAgICAgIHVwZGF0ZWRVbml0LnNldFkobm9kZS55KTtcclxuICAgICAgICAgICAgdXBkYXRlZFVuaXQuc2V0Q3VycmVudE5vZGUobm9kZSk7XHJcbiAgICAgICAgICAgIHVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnMucHVzaCh1cGRhdGVkVW5pdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1bml0c1dpdGhTaW11bGF0aW5nUG9zaXRpb25zO1xyXG4gICAgfVxyXG59IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ29tbWFuZHM7IiwiaW1wb3J0IHsgVW5pdCB9IGZyb20gXCIuLi8uLi8uLi91bml0XCI7XHJcbmltcG9ydCB7IGNhbGN1bGF0ZUVmZmljaWVuY3kgfSBmcm9tIFwiLi9jYWxjdWxhdGVFZmZpY2llbmN5XCI7XHJcblxyXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlVG90YWxFZmZpY2llbmN5ID0gKHVuaXRzOiBVbml0W10pOiBudW1iZXIgPT4ge1xyXG4gICAgbGV0IGVmZmljaWVuY3k6IG51bWJlciA9IDA7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgICAgICBlZmZpY2llbmN5ICs9IGNhbGN1bGF0ZUVmZmljaWVuY3kodW5pdCwgdW5pdHMpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGVmZmljaWVuY3k7XHJcbn0iLCJpbXBvcnQgeyBVbml0IH0gZnJvbSBcIi4uLy4uLy4uL3VuaXRcIjtcclxuaW1wb3J0IHsgZ2V0RXhwbG9yYXRpb25Ob2RlIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3VuaXQvZXhwbG9yYXRpb24vZ2V0RXhwbG9yYXRpb25Ob2RlXCI7XHJcbmltcG9ydCB7IGdldERpc3RhbmNlQmV0d2VlblR3b05vZGVzSW5HcmlkcywgZ2V0RGlzdGFuY2VCZXR3ZWVuVHdvVW5pdHNJbkdyaWRzLCBnZXRTdXJyb3VuZGVkRW5lbWllcyB9IGZyb20gXCIuLi8uLi8uLi91dGlsc1wiO1xyXG5pbXBvcnQgeyBhc3NpZ25FeHBsb3JhdGlvblRhc2sgfSBmcm9tIFwiLi4vdGFza3MvYXNzaWduRXhwbG9yYXRpb25cIjtcclxuaW1wb3J0IHsgdmlzaWJsZUZvckNvbXB1dGVyVW5pdHMgfSBmcm9tIFwiLi4vLi4vLi4vc3RvcmUvdW5pdC92aXNpYmxlVW5pdHNcIjtcclxuaW1wb3J0IHsgaXNFbmVteVZ1bG5lcmFibGVUb1VuaXQsIGlzRW5lbXlEYW5nZXJvdXNGb3JVbml0LCBnZXRUb3RhbFVuaXRzSW5pdGlhbEhlYWx0aCwgZ2V0VG90YWxVbml0c0hlYWx0aCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy91bml0L0FJL0FJX2FjdGlvbnNcIjtcclxuaW1wb3J0IHsgZ2V0U3Vycm91bmRlZFVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3N1cnJvdW5kZWQvZ2V0U3Vycm91bmRlZFVuaXRzXCI7XHJcbmltcG9ydCB7IHNpbXVsYXRlRmlnaHQgfSBmcm9tIFwiLi4vc2ltdWxhdGlvbnMvc2ltdWxhdGVGaWdodFwiO1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVUb3RhbFVuaXRzV2VpZ2h0IH0gZnJvbSBcIi4uL3dlaWdodC9jYWxjdWxhdGVVbml0c1dlaWdodFwiO1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVUb3RhbFZ1bG5lcmFiaWxpdHkgfSBmcm9tIFwiLi4vdnVsbmVyYWJpbGl0eS90b3RhbFZ1bG5lcmFiaWxpdHlcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVFZmZpY2llbmN5ID0gKHVuaXQ6IFVuaXQsIGNvbXB1dGVyVW5pdHNXaXRoU2ltdWxhdGluZ1Bvc2l0aW9uczogVW5pdFtdKSA9PiB7XHJcbiAgICBpZih2aXNpYmxlRm9yQ29tcHV0ZXJVbml0cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICByZXR1cm4gZXhwbG9yYXRpb25Vbml0RWZmaWNpZW5jeSh1bml0LCBjb21wdXRlclVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnMpO1xyXG4gICAgfSBcclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiB1bml0RWZmaWNpZW5jeSh1bml0LCBjb21wdXRlclVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnMpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZXhwbG9yYXRpb25Vbml0RWZmaWNpZW5jeSA9ICh1bml0OiBVbml0LCBjb21wdXRlclVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnM6IFVuaXRbXSk6IG51bWJlciA9PiB7XHJcbiAgICBhc3NpZ25FeHBsb3JhdGlvblRhc2soKTtcclxuICAgIGNvbnN0IG1heEVmZmljaWVuY3k6IG51bWJlciA9IDEwMDtcclxuICAgIGNvbnN0IHBlcmNlbnRhZ2U6IG51bWJlciA9IDEwO1xyXG4gICAgbGV0IGV4cGxvcmF0aW9uTm9kZSA9IGdldEV4cGxvcmF0aW9uTm9kZSgpO1xyXG4gICAgY29uc3QgZGlzdGFuY2UgPSBnZXREaXN0YW5jZUJldHdlZW5Ud29Ob2Rlc0luR3JpZHModW5pdC5jdXJyZW50Tm9kZSwgZXhwbG9yYXRpb25Ob2RlKTtcclxuICAgIGlmKHVuaXQudGFzayA9PT0gJ2V4cGxvcmF0aW9uJykge1xyXG4gICAgICAgIGxldCBlZmZpY2llbmN5ID0gbWF4RWZmaWNpZW5jeSAtIGRpc3RhbmNlICogcGVyY2VudGFnZTtcclxuICAgICAgICBlZmZpY2llbmN5ID0gZWZmaWNpZW5jeSA+IDAgPyBlZmZpY2llbmN5IDogMDtcclxuICAgICAgICByZXR1cm4gZWZmaWNpZW5jeTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHVuaXRFZmZpY2llbmN5KHVuaXQsIGNvbXB1dGVyVW5pdHNXaXRoU2ltdWxhdGluZ1Bvc2l0aW9ucyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB1bml0RWZmaWNpZW5jeSA9ICh1bml0OiBVbml0LCBjb21wdXRlclVuaXRzV2l0aFNpbXVsYXRpbmdQb3NpdGlvbnM6IFVuaXRbXSk6IG51bWJlciA9PiB7XHJcbiAgICBsZXQgY2xvc2VFbmVtaWVzID0gZ2V0U3Vycm91bmRlZFVuaXRzKHVuaXQsIHZpc2libGVGb3JDb21wdXRlclVuaXRzLCA1KTtcclxuICAgIGxldCBjbG9zZUFsbGllcyA9ICBnZXRTdXJyb3VuZGVkVW5pdHModW5pdCwgY29tcHV0ZXJVbml0c1dpdGhTaW11bGF0aW5nUG9zaXRpb25zLCA1KTtcclxuICAgIGxldCBjbG9zZUFsbGllc1dpdGhVbml0ID0gT2JqZWN0LmFzc2lnbihbXSwgY2xvc2VBbGxpZXMpO1xyXG4gICAgY2xvc2VBbGxpZXNXaXRoVW5pdC5wdXNoKHVuaXQpO1xyXG4gICAgbGV0IGNsb3NlRW5lbWllc051bWJlciA9IGNsb3NlRW5lbWllcy5sZW5ndGg7XHJcbiAgICBsZXQgY2xvc2VBbGxpZXNOdW1iZXIgPSBjbG9zZUFsbGllcy5sZW5ndGg7XHJcbiAgICBjb25zdCBjbG9zZUFsbGllc1dlaWdodDogbnVtYmVyID0gY2FsY3VsYXRlVG90YWxVbml0c1dlaWdodChjbG9zZUFsbGllcykgKyB1bml0LndlaWdodDtcclxuICAgIGNvbnN0IGNsb3NlRW5lbWllc1dlaWdodDogbnVtYmVyID0gY2FsY3VsYXRlVG90YWxVbml0c1dlaWdodChjbG9zZUVuZW1pZXMpO1xyXG4gICAgbGV0IHVuaXRIZWFsdGhQZXJjZW50YWdlID0gdW5pdC5oZWFsdGggLyB1bml0LmluaXRpYWxIZWFsdGg7XHJcbiAgICBsZXQgZW5lbWllc0luaXRpYWxIZWFsdGggPSBnZXRUb3RhbFVuaXRzSW5pdGlhbEhlYWx0aChjbG9zZUVuZW1pZXMpO1xyXG4gICAgbGV0IGNsb3NlQWxsaWVzSW5pdGlhbEhlYWx0aCA9IGdldFRvdGFsVW5pdHNJbml0aWFsSGVhbHRoKGNsb3NlQWxsaWVzKTtcclxuICAgIGxldCBjbG9zZUFsbGllc0luaXRpYWxIZWFsdGhXaXRoVW5pdCA9IGdldFRvdGFsVW5pdHNJbml0aWFsSGVhbHRoKGNsb3NlQWxsaWVzV2l0aFVuaXQpO1xyXG4gICAgbGV0IGVuZW1pZXNIZWFsdGggPSBnZXRUb3RhbFVuaXRzSGVhbHRoKGNsb3NlRW5lbWllcyk7XHJcbiAgICBsZXQgY2xvc2VBbGxpZXNIZWFsdGggPSBnZXRUb3RhbFVuaXRzSGVhbHRoKGNsb3NlQWxsaWVzKTtcclxuICAgIGxldCBjbG9zZUFsbGllc0hlYWx0aFdpdGhVbml0ID0gZ2V0VG90YWxVbml0c0hlYWx0aChjbG9zZUFsbGllc1dpdGhVbml0KTtcclxuICAgIGxldCBlbmVtaWVzSGVhbHRoUGVyY2VudGFnZSA9IGVuZW1pZXNIZWFsdGggLyBlbmVtaWVzSW5pdGlhbEhlYWx0aDtcclxuICAgIGxldCBjbG9zZUFsbGllc0hlYWx0aFBlcmNlbnRhZ2UgPSBjbG9zZUFsbGllc0hlYWx0aCAvIGNsb3NlQWxsaWVzSW5pdGlhbEhlYWx0aDtcclxuICAgIGxldCBjbG9zZUFsbGllc0hlYWx0aFdpdGhVbml0UGVyY2VudGFnZSA9IGNsb3NlQWxsaWVzSGVhbHRoV2l0aFVuaXQgLyBjbG9zZUFsbGllc0luaXRpYWxIZWFsdGhXaXRoVW5pdDtcclxuXHJcbiAgICAvLyBvbmUgdW5pdCBhbmQgb25lIGVuZW15XHJcbiAgICBpZihjbG9zZUVuZW1pZXNOdW1iZXIgPT09IDEgJiYgY2xvc2VBbGxpZXNOdW1iZXIgPT09IDApIHtcclxuICAgICAgICBsZXQgZW5lbXkgPSBjbG9zZUVuZW1pZXNbMF07XHJcbiAgICAgICAgbGV0IGVuZW15ZW5lbWllc0hlYWx0aFBlcmNlbnRhZ2UgPSBlbmVteS5oZWFsdGggLyBlbmVteS5pbml0aWFsSGVhbHRoO1xyXG4gICAgICAgIGlmKGlzRW5lbXlWdWxuZXJhYmxlVG9Vbml0KHVuaXQsIGVuZW15KSAmJiB1bml0SGVhbHRoUGVyY2VudGFnZSA+PSAwLjcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIDEwMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihpc0VuZW15RGFuZ2Vyb3VzRm9yVW5pdCh1bml0LCBlbmVteSkgJiYgZW5lbXllbmVtaWVzSGVhbHRoUGVyY2VudGFnZSA+PSAwLjcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIDA7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IHt1bml0SGVhbHRoUmVtYWlufSA9IHNpbXVsYXRlRmlnaHQodW5pdCwgZW5lbXkpO1xyXG4gICAgICAgICAgICByZXR1cm4gdW5pdEhlYWx0aFJlbWFpbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gb25lIHVuaXQgYW5kIG1hbnkgZW5lbWllc1xyXG4gICAgZWxzZSBpZihjbG9zZUVuZW1pZXNOdW1iZXIgPiAxICYmIGNsb3NlQWxsaWVzTnVtYmVyID09PSAwKSB7XHJcbiAgICAgICAgaWYoZW5lbWllc0hlYWx0aFBlcmNlbnRhZ2UgPj0gMC42ICYmIHVuaXRIZWFsdGhQZXJjZW50YWdlID49IDAuNikge1xyXG4gICAgICAgICAgICBsZXQgd2VpZ2h0UmF0aW86IG51bWJlciA9IHVuaXQud2VpZ2h0IC8gY2xvc2VFbmVtaWVzV2VpZ2h0O1xyXG4gICAgICAgICAgICB3ZWlnaHRSYXRpbyA9IHdlaWdodFJhdGlvIDw9IDIgPyB3ZWlnaHRSYXRpbyA6IDI7XHJcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHdlaWdodFJhdGlvICogNTApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IGhlYWx0aFJhdGlvOiBudW1iZXIgPSB1bml0LmhlYWx0aCAvIGVuZW1pZXNIZWFsdGg7XHJcbiAgICAgICAgICAgIGhlYWx0aFJhdGlvID0gaGVhbHRoUmF0aW8gPD0gMiA/IGhlYWx0aFJhdGlvOiAyO1xyXG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChoZWFsdGhSYXRpbyAqIDUwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gbWFueSBhbGxpZXMgYW5kIG1hbnkgZW5lbWllc1xyXG4gICAgZWxzZSBpZihjbG9zZUVuZW1pZXNOdW1iZXIgPiAxIHx8IGNsb3NlQWxsaWVzTnVtYmVyID4gMCkge1xyXG4gICAgICAgIGlmKGVuZW1pZXNIZWFsdGhQZXJjZW50YWdlID49IDAuNiAmJiBjbG9zZUFsbGllc0hlYWx0aFdpdGhVbml0UGVyY2VudGFnZSA+PSAwLjYpIHtcclxuICAgICAgICAgICAgbGV0IHdlaWdodFJhdGlvOiBudW1iZXIgPSAoY2xvc2VBbGxpZXNXZWlnaHQgKyB1bml0LndlaWdodCkgLyBjbG9zZUVuZW1pZXNXZWlnaHQ7XHJcbiAgICAgICAgICAgIHdlaWdodFJhdGlvID0gd2VpZ2h0UmF0aW8gPD0gMiA/IHdlaWdodFJhdGlvIDogMjtcclxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQod2VpZ2h0UmF0aW8gKiA1MCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBsZXQgaGVhbHRoUmF0aW8gPSBjbG9zZUFsbGllc0hlYWx0aFdpdGhVbml0IC8gZW5lbWllc0hlYWx0aDtcclxuICAgICAgICAgICAgaGVhbHRoUmF0aW8gPSBoZWFsdGhSYXRpbyA8PSAyID8gaGVhbHRoUmF0aW8gOiAyO1xyXG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZChoZWFsdGhSYXRpbyAqIDUwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gbm8gZW5lbWllcyBhbmQgbWFueSBhbGxpZXNcclxuICAgIGVsc2UgaWYoY2xvc2VFbmVtaWVzTnVtYmVyID09PSAwICYmIGNsb3NlQWxsaWVzTnVtYmVyID4gMCkge1xyXG4gICAgICAgIGxldCB2dWxuZXJhYmlsaXR5V2l0aG91dFVuaXQgPSBjYWxjdWxhdGVUb3RhbFZ1bG5lcmFiaWxpdHkoY2xvc2VBbGxpZXMsIHVuaXQpIC8gY2xvc2VBbGxpZXNOdW1iZXI7XHJcbiAgICAgICAgbGV0IHZ1bG5lcmFiaWxpdHlXaXRoVW5pdCA9IGNhbGN1bGF0ZVRvdGFsVnVsbmVyYWJpbGl0eShjbG9zZUFsbGllcykgLyBjbG9zZUFsbGllc051bWJlciArIDE7XHJcbiAgICAgICAgbGV0IHZ1bG5lcmFiaWxpdHlEaWZmZXJlbmNlID0gdnVsbmVyYWJpbGl0eVdpdGhvdXRVbml0IC0gdnVsbmVyYWJpbGl0eVdpdGhVbml0OyBcclxuICAgICAgICBpZih2dWxuZXJhYmlsaXR5RGlmZmVyZW5jZSA+IDApIHtcclxuICAgICAgICAgICAgbGV0IGVmZmljaWVuY3kgPSB2dWxuZXJhYmlsaXR5RGlmZmVyZW5jZSAqIDEuNDtcclxuICAgICAgICAgICAgZWZmaWNpZW5jeSA9IGVmZmljaWVuY3kgPD0gMTAwID8gZWZmaWNpZW5jeSA6IDEwMDtcclxuICAgICAgICAgICAgcmV0dXJuIGVmZmljaWVuY3k7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiAwO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgVW5pdCB9IGZyb20gXCIuLi8uLi8uLi91bml0XCI7XHJcbmltcG9ydCB7IGdldFJhbmRvbVVuaXQgfSBmcm9tIFwiLi4vcmFuZG9tL2dldFJhbmRvbVVuaXRcIjtcclxuaW1wb3J0IHsgcGxheWVyVW5pdHMgfSBmcm9tIFwiLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0c1wiO1xyXG5pbXBvcnQgeyBnZXRTdXJyb3VuZGVkTm9kZXMgfSBmcm9tIFwiLi4vLi4vc3Vycm91bmRlZFwiO1xyXG5pbXBvcnQgeyBnZXRSYW5kb21Ob2RlIH0gZnJvbSBcIi4uLy4uL25vZGVcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRFeHBsb3JhdGlvbk5vZGUgPSAoKSA9PiB7XHJcbiAgICBjb25zdCByYW5kb21Vbml0OiBVbml0ID0gZ2V0UmFuZG9tVW5pdChwbGF5ZXJVbml0cyk7XHJcbiAgICBjb25zdCBzdXJyb3VuZGVkTm9kZXMgPSBnZXRTdXJyb3VuZGVkTm9kZXMocmFuZG9tVW5pdCwgNCk7XHJcbiAgICByZXR1cm4gZ2V0UmFuZG9tTm9kZShzdXJyb3VuZGVkTm9kZXMpO1xyXG59IiwiaW1wb3J0IHsgY2FsY3VsYXRlVW5pdFR5cGVzIH0gZnJvbSBcIi4uLy4uL2FuYWx5emVNb2R1bGUvdW5pdEFuYWx5emVcIjtcclxuaW1wb3J0IHsgZ2V0RnJlZVVuaXRzLCBnZXRCZXN0VW5pdEJ5UHJvcGVydHkgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvdW5pdC9BSVwiO1xyXG5pbXBvcnQgeyBjb21wdXRlclVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uL3N0b3JlL3VuaXQvdW5pdHNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBhc3NpZ25FeHBsb3JhdGlvblRhc2sgPSAocGVyY2VudGFnZTogbnVtYmVyID0gNjApID0+IHtcclxuICAgIGNvbnN0IHVuaXRUeXBlczogYW55ID0gY2FsY3VsYXRlVW5pdFR5cGVzKCk7XHJcbiAgICBpZih1bml0VHlwZXMuc2NvdXRzID09PSAwICYmIHVuaXRUeXBlcy5jYXZhbHJ5ID09PSAwKSB7XHJcbiAgICBsZXQgZnJlZVVuaXRzID0gZ2V0RnJlZVVuaXRzKCk7XHJcbiAgICBpZihmcmVlVW5pdHMpIHtcclxuICAgICAgICBpZihmcmVlVW5pdHMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgICAgIGxldCBmYXN0ZXN0VW5pdCA9IGdldEJlc3RVbml0QnlQcm9wZXJ0eSgnc3BlZWQnKTsgXHJcbiAgICAgICAgICAgIGZhc3Rlc3RVbml0LmFzc2lnblRhc2soJ2V4cGxvcmF0aW9uJyk7XHJcbiAgICAgICAgICAgIGlmKGZyZWVVbml0cy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZXhjbHVzaW9uID0gW2Zhc3Rlc3RVbml0XTtcclxuICAgICAgICAgICAgICAgIGxldCBzZWNvbmRGYXN0ZXN0VW5pdCA9IGdldEJlc3RVbml0QnlQcm9wZXJ0eSgnc3BlZWQnLCBleGNsdXNpb24pO1xyXG4gICAgICAgICAgICAgICAgc2Vjb25kRmFzdGVzdFVuaXQuYXNzaWduVGFzaygnZXhwbG9yYXRpb24nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIH0gXHJcbiAgICBlbHNlIHtcclxuICAgICAgICBmb3IobGV0IHVuaXQgb2YgY29tcHV0ZXJVbml0cykge1xyXG4gICAgICAgICAgICBsZXQgc2NvdXRzOm51bWJlciA9IDA7XHJcbiAgICAgICAgICAgIGxldCBwZXJjZW50YWdlT2ZTY291dHM6bnVtYmVyID0gTWF0aC5yb3VuZCgoc2NvdXRzIC8gY29tcHV0ZXJVbml0cy5sZW5ndGgpICogMTAwKTtcclxuICAgICAgICAgICAgaWYoIXVuaXQudGFzayAmJiAodW5pdC50eXBlID09PSAnc2NvdXRzJyB8fCB1bml0LnR5cGUgPT09ICdjYXZhbHJ5JykgJiYgcGVyY2VudGFnZU9mU2NvdXRzIDwgcGVyY2VudGFnZSkge1xyXG4gICAgICAgICAgICAgICAgdW5pdC5hc3NpZ25UYXNrKCdleHBsb3JhdGlvbicpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gIH0iLCJpbXBvcnQgeyBwbGF5ZXJQb3dlciB9IGZyb20gJy4uLy4uL3N0b3JlL0FJL3Bvd2VyL3BsYXllclBvd2VyJztcclxuaW1wb3J0IHsgY29tcHV0ZXJQb3dlciB9IGZyb20gJy4uLy4uL3N0b3JlL0FJL3Bvd2VyL2NvbXB1dGVyUG93ZXInO1xyXG5pbXBvcnQge1xyXG4gIHBsYXllclVuaXRzLFxyXG4gIGNvbXB1dGVyVW5pdHNcclxufSBmcm9tICcuLi8uLi9zdG9yZS91bml0L3VuaXRzJztcclxuaW1wb3J0IHsgcmV2ZWFsZWRVbml0cyB9IGZyb20gJy4uLy4uL3N0b3JlL0FJL2VuZW1pZXMvcmV2ZWFsZWRFbmVtaWVzJztcclxuaW1wb3J0IHtcclxuICBnZXRTdXJyb3VuZGVkQWxsaWVzLFxyXG4gIGdldFN1cnJvdW5kZWRFbmVtaWVzXHJcbn0gZnJvbSAnLi4vLi4vdXRpbHMvc3Vycm91bmRlZCc7XHJcbmltcG9ydCB7IFVuaXQgfSBmcm9tICcuLi8uLi91bml0JztcclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVVbml0c1RvQmV3YXJlID0gKHVuaXQ6IFVuaXQpOm51bWJlciA9PiB7XHJcbiAgbGV0IHVuaXRzVG9CZXdhcmU6IG51bWJlciA9IDA7XHJcbiAgaWYocGxheWVyVW5pdHMubGVuZ3RoICE9PSAwKSB7XHJcbiAgICBmb3IobGV0IGVuZW15IG9mIHBsYXllclVuaXRzKSB7XHJcbiAgICAgIGlmKHVuaXQudnVsbmVyYWJsZUFnYWluc3QubGVuZ3RoICE9PSAwKSB7XHJcbiAgICAgICAgZm9yKGxldCB2dWxuZXJhYmlsaXR5IG9mIHVuaXQudnVsbmVyYWJsZUFnYWluc3QpIHtcclxuICAgICAgICAgIGlmKHZ1bG5lcmFiaWxpdHkgPT09IGVuZW15Lm5hbWUpIHtcclxuICAgICAgICAgICAgdW5pdHNUb0Jld2FyZSsrO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdW5pdHNUb0Jld2FyZTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZVN1cnJvdW5kZWRFbmVteVBvd2VyID0gKHVuaXQ6IFVuaXQpID0+IHtcclxuICBsZXQgcG93ZXIgPSB7XHJcbiAgICBoZWFsdGg6IDAsXHJcbiAgICBzcGVlZDogMCxcclxuICAgIGFybW91cjogMCxcclxuICAgIG1lbGVlRGFtYWdlOiAwLFxyXG4gICAgbWlzc2lsZURhbWFnZTogMCxcclxuICAgIG1vcmFsZTogMCxcclxuICAgIGNvbmRpdGlvbjogMFxyXG4gIH1cclxuICBsZXQgc3Vycm91bmRlZEVuZW1pZXMgPSBnZXRTdXJyb3VuZGVkRW5lbWllcyh1bml0KTtcclxuICBpZihzdXJyb3VuZGVkRW5lbWllcy5sZW5ndGggIT09IDApIHtcclxuICAgIGZvcihsZXQgZW5lbXkgb2Ygc3Vycm91bmRlZEVuZW1pZXMpIHtcclxuICAgICAgcG93ZXIuaGVhbHRoICs9IGVuZW15LmhlYWx0aDtcclxuICAgICAgcG93ZXIuc3BlZWQgKz0gZW5lbXkuc3BlZWQ7XHJcbiAgICAgIHBvd2VyLmFybW91ciArPSBlbmVteS5hcm1vdXI7XHJcbiAgICAgIHBvd2VyLm1lbGVlRGFtYWdlICs9IGVuZW15Lm1lbGVlRGFtYWdlO1xyXG4gICAgICBwb3dlci5taXNzaWxlRGFtYWdlICs9IGVuZW15Lm1pc3NpbGVEYW1hZ2U7XHJcbiAgICAgIHBvd2VyLm1vcmFsZSArPSBlbmVteS5tb3JhbGU7XHJcbiAgICAgIHBvd2VyLmNvbmRpdGlvbiArPSBlbmVteS5jb25kaXRpb247XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBwb3dlcjtcclxufVxyXG5cclxuLypcclxuICBDYWxjdWxhdGUgaG93IG1hbnkgcGxheWVyJ3MgdW5pdHMgYW5kIHRoZWlyIHBvd2VyIG5lYXJieVxyXG4gIHRoZSBjb21wdXRlciB1bml0c1xyXG4qL1xyXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlU3Vycm91bmRlZEFsbGllc1Bvd2VyID0gKHVuaXQ6IFVuaXQpID0+IHtcclxuICBsZXQgcG93ZXIgPSB7XHJcbiAgICBoZWFsdGg6IDAsXHJcbiAgICBzcGVlZDogMCxcclxuICAgIGFybW91cjogMCxcclxuICAgIG1lbGVlRGFtYWdlOiAwLFxyXG4gICAgbWlzc2lsZURhbWFnZTogMCxcclxuICAgIG1vcmFsZTogMCxcclxuICAgIGNvbmRpdGlvbjogMFxyXG4gIH1cclxuICBsZXQgc3Vycm91bmRlZEFsbGllcyA9IGdldFN1cnJvdW5kZWRBbGxpZXModW5pdCk7XHJcbiAgaWYoc3Vycm91bmRlZEFsbGllcy5sZW5ndGggIT09IDApIHtcclxuICAgIGZvcihsZXQgZW5lbXkgb2Ygc3Vycm91bmRlZEFsbGllcykge1xyXG4gICAgICBwb3dlci5oZWFsdGggKz0gZW5lbXkuaGVhbHRoO1xyXG4gICAgICBwb3dlci5zcGVlZCArPSBlbmVteS5zcGVlZDtcclxuICAgICAgcG93ZXIuYXJtb3VyICs9IGVuZW15LmFybW91cjtcclxuICAgICAgcG93ZXIubWVsZWVEYW1hZ2UgKz0gZW5lbXkubWVsZWVEYW1hZ2U7XHJcbiAgICAgIHBvd2VyLm1pc3NpbGVEYW1hZ2UgKz0gZW5lbXkubWlzc2lsZURhbWFnZTtcclxuICAgICAgcG93ZXIubW9yYWxlICs9IGVuZW15Lm1vcmFsZTtcclxuICAgICAgcG93ZXIuY29uZGl0aW9uICs9IGVuZW15LmNvbmRpdGlvbjtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHBvd2VyO1xyXG59XHJcblxyXG4vKlxyXG4gIENhbGN1bGF0ZSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGNvbXB1dGVyJ3MgYW5kXHJcbiAgcGxheWVyJ3MgcG93ZXIgaW4gdGhlIHNtYWxsIGFyZWFcclxuKi9cclxuXHJcbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVQb3dlckFkdmFudGFnZUluVGhlQXJlYSA9ICh1bml0OiBVbml0KSA9PiB7XHJcbiAgbGV0IHBsYXllclBvd2VyID0gY2FsY3VsYXRlU3Vycm91bmRlZEVuZW15UG93ZXIodW5pdCk7XHJcbiAgbGV0IGNvbXB1dGVyUG93ZXIgPSBjYWxjdWxhdGVTdXJyb3VuZGVkQWxsaWVzUG93ZXIodW5pdCk7XHJcbiAgbGV0IGhlYWx0aCA9IGNvbXB1dGVyUG93ZXIuaGVhbHRoIC0gcGxheWVyUG93ZXIuaGVhbHRoO1xyXG4gIGxldCBzcGVlZCA9IGNvbXB1dGVyUG93ZXIuc3BlZWQgLSBwbGF5ZXJQb3dlci5zcGVlZDtcclxuICBsZXQgYXJtb3VyID0gY29tcHV0ZXJQb3dlci5hcm1vdXIgLSBwbGF5ZXJQb3dlci5hcm1vdXI7XHJcbiAgbGV0IG1lbGVlRGFtYWdlID0gY29tcHV0ZXJQb3dlci5tZWxlZURhbWFnZSAtIHBsYXllclBvd2VyLm1lbGVlRGFtYWdlO1xyXG4gIGxldCBtaXNzaWxlRGFtYWdlID0gY29tcHV0ZXJQb3dlci5taXNzaWxlRGFtYWdlIC0gcGxheWVyUG93ZXIubWlzc2lsZURhbWFnZTtcclxuICBsZXQgY29uZGl0aW9uID0gY29tcHV0ZXJQb3dlci5jb25kaXRpb24gLSBwbGF5ZXJQb3dlci5jb25kaXRpb247XHJcbiAgbGV0IG1vcmFsZSA9IGNvbXB1dGVyUG93ZXIubW9yYWxlIC0gcGxheWVyUG93ZXIubW9yYWxlO1xyXG4gIHJldHVybiB7XHJcbiAgICBoZWFsdGgsXHJcbiAgICBzcGVlZCxcclxuICAgIGFybW91cixcclxuICAgIG1lbGVlRGFtYWdlLFxyXG4gICAgbWlzc2lsZURhbWFnZSxcclxuICAgIGNvbmRpdGlvbixcclxuICAgIG1vcmFsZVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZVVuaXRUeXBlcyA9IChzaWRlOnN0cmluZz0nY29tcHV0ZXInKTphbnkgPT4ge1xyXG4gIGxldCB0eXBlczphbnkgPSB7XHJcbiAgICBpbmZhbnRyeTogMCxcclxuICAgIHNwZWFybWVuOiAwLFxyXG4gICAgbGlnaHRJbmZhbnRyeTogMCxcclxuICAgIGhlYXZ5SW5mYW50cnk6IDAsXHJcbiAgICBzY291dHM6IDAsXHJcbiAgICBza2lybWlzaGVyczogMCxcclxuICAgIGNhdmFscnk6IDBcclxuICB9XHJcblxyXG4gIGxldCB1bml0czpVbml0W107XHJcblxyXG4gIGlmKHNpZGUgPT09ICdjb21wdXRlcicpIHtcclxuICAgIHVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgY29tcHV0ZXJVbml0cyk7XHJcbiAgfSBcclxuICBlbHNlIGlmKHNpZGUgPT09ICdyZXZlYWxlZCcpIHtcclxuICAgIHVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgcmV2ZWFsZWRVbml0cyk7XHJcbiAgfVxyXG4gIGVsc2UgaWYoc2lkZSA9PT0gJ3BsYXllcicpIHtcclxuICAgIHVuaXRzID0gT2JqZWN0LmFzc2lnbihbXSwgcGxheWVyVW5pdHMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2luY29ycmVjdCBzaWRlIGFyZ3VtZW50Jyk7XHJcbiAgfVxyXG5cclxuICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgIGlmKHVuaXQudHlwZSA9PT0gJ2luZmFudHJ5JyB8fCB1bml0LnR5cGUgPT09ICdzcGVhcm1lbicgfHwgdW5pdC50eXBlID09PSAnc2NvdXRzJykge1xyXG4gICAgICB0eXBlcy5pbmZhbnRyeSArPSAxO1xyXG4gICAgfVxyXG4gICAgaWYodW5pdC50eXBlID09PSAnc3BlYXJtZW4nKSB7XHJcbiAgICAgIHR5cGVzLnNwZWFybWVuICs9IDE7XHJcbiAgICB9XHJcbiAgICBpZih1bml0LnR5cGUgPT09ICdpbmZhbnRyeScgJiYgdW5pdC5uYW1lICE9PSAnSGVhdnlJbmZhbnRyeScpIHtcclxuICAgICAgdHlwZXMubGlnaHRJbmZhbnRyeSArPSAxO1xyXG4gICAgfVxyXG4gICAgaWYodW5pdC5uYW1lID09PSAnSGVhdnlJbmZhbnRyeScpIHtcclxuICAgICAgdHlwZXMuaGVhdnlJbmZhbnRyeSArPSAxO1xyXG4gICAgfVxyXG4gICAgaWYodW5pdC50eXBlID09PSAnc2NvdXRzJykge1xyXG4gICAgICB0eXBlcy5zY291dHMgKz0gMTtcclxuICAgIH1cclxuICAgIGlmKHVuaXQudHlwZSA9PT0gJ3NraXJtaXNoZXJzJykge1xyXG4gICAgICB0eXBlcy5za2lybWlzaGVycyArPSAxO1xyXG4gICAgfVxyXG4gICAgaWYodW5pdC50eXBlID09PSAnY2F2YWxyeScpIHtcclxuICAgICAgdHlwZXMuY2F2YWxyeSArPSAxO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICByZXR1cm4gdHlwZXM7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRVbml0VHlwZXNJblBlcmNlbnRhZ2UgPSAoKTphbnkgPT4ge1xyXG4gIGxldCBwZXJjZW50YWdlID0ge1xyXG4gICAgaW5mYW50cnk6IDAsXHJcbiAgICBzcGVhcm1lbjogMCxcclxuICAgIGxpZ2h0SW5mYW50cnk6IDAsXHJcbiAgICBoZWF2eUluZmFudHJ5OiAwLFxyXG4gICAgc2NvdXRzOiAwLFxyXG4gICAgc2tpcm1pc2hlcnM6IDAsXHJcbiAgICBjYXZhbHJ5OiAwXHJcbiAgfVxyXG4gIGxldCB0eXBlcyA9IGNhbGN1bGF0ZVVuaXRUeXBlcygpO1xyXG4gIGxldCB0b3RhbFVuaXRzID0gY29tcHV0ZXJVbml0cy5sZW5ndGg7XHJcbiAgcGVyY2VudGFnZS5pbmZhbnRyeSA9IE1hdGgucm91bmQoKHR5cGVzLmluZmFudHJ5IC8gdG90YWxVbml0cykgKiAxMDApO1xyXG4gIHBlcmNlbnRhZ2Uuc3BlYXJtZW4gPSBNYXRoLnJvdW5kKCh0eXBlcy5zcGVhcm1lbiAvIHRvdGFsVW5pdHMpICogMTAwKTtcclxuICBwZXJjZW50YWdlLmxpZ2h0SW5mYW50cnkgPSBNYXRoLnJvdW5kKCh0eXBlcy5saWdodEluZmFudHJ5IC8gdG90YWxVbml0cykgKiAxMDApO1xyXG4gIHBlcmNlbnRhZ2UuaGVhdnlJbmZhbnRyeSA9IE1hdGgucm91bmQoKHR5cGVzLmhlYXZ5SW5mYW50cnkgLyB0b3RhbFVuaXRzKSAqIDEwMCk7XHJcbiAgcGVyY2VudGFnZS5zY291dHMgPSBNYXRoLnJvdW5kKCh0eXBlcy5zY291dHMgLyB0b3RhbFVuaXRzKSAqIDEwMCk7XHJcbiAgcGVyY2VudGFnZS5za2lybWlzaGVycyA9IE1hdGgucm91bmQoKHR5cGVzLnNraXJtaXNoZXJzIC8gdG90YWxVbml0cykgKiAxMDApO1xyXG4gIHBlcmNlbnRhZ2UuY2F2YWxyeSA9IE1hdGgucm91bmQoKHR5cGVzLmNhdmFscnkgLyB0b3RhbFVuaXRzKSAqIDEwMCk7XHJcbiAgcmV0dXJuIHBlcmNlbnRhZ2U7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRJbml0aWFsUHJvcGV0aWVzID0gKCk6YW55ID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgaW5pdGlhbE51bWJlck9mVW5pdHM6IGNvbXB1dGVyVW5pdHMubGVuZ3RoLFxyXG4gICAgaW5pdGlhbE51bWJlck9mRW5lbWllczogcGxheWVyVW5pdHMubGVuZ3RoLFxyXG4gICAgaW5pdGlhbFVuaXRzSGVhbHRoOiBjb21wdXRlclBvd2VyLnRvdGFsSGVhbHRoLFxyXG4gICAgaW5pdGlhbEVuZW1pZXNIZWFsdGg6IHBsYXllclBvd2VyLnRvdGFsSGVhbHRoXHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IFVuaXQsIGNhbGN1bGF0ZURhbWFnZSwgYXJtb3VyUGVuZXRyYXRpb24gfSBmcm9tIFwiLi4vLi4vLi4vdW5pdFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNpbXVsYXRlRmlnaHQgPSAodW5pdDogVW5pdCwgZW5lbXk6IFVuaXQpID0+IHtcclxuICAgIGxldCBhdHRhY2tzOiBudW1iZXIgPSAxO1xyXG4gICAgY29uc3QgdW5pdEhlYWx0aEJlZm9yZUZpZ2h0ID0gdW5pdC5oZWFsdGg7XHJcbiAgICBjb25zdCBlbmVteUhlYWx0aEJlZm9yZUZpZ2h0ID0gZW5lbXkuaGVhbHRoO1xyXG4gICAgbGV0IHVuaXRIZWFsdGhSZW1haW46IG51bWJlciA9IDEwMDtcclxuICAgIGxldCBlbmVteUhlYWx0aFJlbWFpbjogbnVtYmVyID0gMTAwO1xyXG4gICAgbGV0IHVuaXRIZWFsdGggPSB1bml0LmhlYWx0aDtcclxuICAgIGxldCBlbmVteUhlYWx0aCA9IGVuZW15LmhlYWx0aDtcclxuICAgIHdoaWxlKHVuaXRIZWFsdGggPj0gMCAmJiBlbmVteUhlYWx0aCA+PSAwKSB7XHJcbiAgICAgICAgbGV0IHVuaXREYW1hZ2UgPSBjYWxjdWxhdGVEYW1hZ2UodW5pdCwgdW5pdC5tZWxlZURhbWFnZSk7XHJcbiAgICAgICAgbGV0IGVuZW15RGFtYWdlID0gY2FsY3VsYXRlRGFtYWdlKGVuZW15LCBlbmVteS5tZWxlZURhbWFnZSk7XHJcbiAgICAgICAgdW5pdEhlYWx0aCAtPSBhcm1vdXJQZW5ldHJhdGlvbihlbmVteURhbWFnZSwgdW5pdC5hcm1vdXIpO1xyXG4gICAgICAgIGVuZW15SGVhbHRoIC09IGFybW91clBlbmV0cmF0aW9uKHVuaXREYW1hZ2UsIGVuZW15LmFybW91cik7XHJcbiAgICAgICAgYXR0YWNrcyArPSAxO1xyXG4gICAgfVxyXG4gICAgbGV0IHVuaXRQZXJjZW50YWdlUmVtYWluID0gTWF0aC5yb3VuZCh1bml0SGVhbHRoICogMTAwIC8gdW5pdEhlYWx0aEJlZm9yZUZpZ2h0KTtcclxuICAgIGxldCBlbmVteVBlcmNlbnRhZ2VSZW1haW4gPSBNYXRoLnJvdW5kKGVuZW15SGVhbHRoICogMTAwIC8gZW5lbXlIZWFsdGhCZWZvcmVGaWdodCk7XHJcbiAgICB1bml0SGVhbHRoUmVtYWluID0gdW5pdFBlcmNlbnRhZ2VSZW1haW4gPj0gMCA/IHVuaXRQZXJjZW50YWdlUmVtYWluIDogMDtcclxuICAgIGVuZW15SGVhbHRoUmVtYWluID0gZW5lbXlQZXJjZW50YWdlUmVtYWluID49IDAgPyBlbmVteVBlcmNlbnRhZ2VSZW1haW46IDA7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHVuaXRIZWFsdGhSZW1haW4sXHJcbiAgICAgICAgZW5lbXlIZWFsdGhSZW1haW4sXHJcbiAgICAgICAgdW5pdEhlYWx0aCxcclxuICAgICAgICBlbmVteUhlYWx0aCxcclxuICAgICAgICBhdHRhY2tzXHJcbiAgICB9XHJcbn0gIiwiaW1wb3J0IHsgYXNzZXNzVnVsbmVyYWJpbGl0eSB9IGZyb20gXCIuXCI7XHJcbmltcG9ydCB7IFVuaXQgfSBmcm9tIFwiLi4vLi4vLi4vdW5pdFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZVRvdGFsVnVsbmVyYWJpbGl0eSA9ICh1bml0czogVW5pdFtdLCBleGNsdXNpb246IFVuaXQgPSBudWxsKTogbnVtYmVyID0+IHtcclxuICAgIGxldCB0b3RhbFZ1bG5lcmFiaWxpdHk6IG51bWJlciA9IDA7XHJcbiAgICBmb3IobGV0IHVuaXQgb2YgdW5pdHMpIHtcclxuICAgICAgICBsZXQgdnVsbmVyYWJpbGl0eSA9IGFzc2Vzc1Z1bG5lcmFiaWxpdHkodW5pdCwgZXhjbHVzaW9uKTtcclxuICAgICAgICB0b3RhbFZ1bG5lcmFiaWxpdHkgKz0gdnVsbmVyYWJpbGl0eTtcclxuICAgIH1cclxuICAgIHJldHVybiB0b3RhbFZ1bG5lcmFiaWxpdHk7XHJcbn0iLCJpbXBvcnQgVW5pdCBmcm9tICcuLi8uLi8uLi91bml0L3R5cGVzL1VuaXQnO1xyXG5pbXBvcnQgeyBjYWxjdWxhdGVUb3RhbFVuaXRzV2VpZ2h0IH0gZnJvbSAnLi4vd2VpZ2h0L2NhbGN1bGF0ZVVuaXRzV2VpZ2h0JztcclxuaW1wb3J0IHsgZ2V0RGFuZ2Vyb3VzVW5pdHMsIGNvbnRhaW5zRGFuZ2Vyb3VzVW5pdHMgfSBmcm9tICcuLi8uLi8uLi91dGlscy91bml0L0FJL0FJX2FjdGlvbnMnO1xyXG5pbXBvcnQgeyBnZXRTdXJyb3VuZGVkVW5pdHMgfSBmcm9tICcuLi8uLi8uLi91dGlscy9zdXJyb3VuZGVkL2dldFN1cnJvdW5kZWRVbml0cyc7XHJcbmltcG9ydCB7IGNvbXB1dGVyVW5pdHMsIHBsYXllclVuaXRzIH0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvdW5pdC91bml0cyc7XHJcbmltcG9ydCB7IHJldmVhbGVkVW5pdHMgfSBmcm9tICcuLi8uLi8uLi9zdG9yZS9BSS9lbmVtaWVzL3JldmVhbGVkRW5lbWllcyc7XHJcbmltcG9ydCB7IGRlbGV0ZVVuaXRGcm9tQXJyYXkgfSBmcm9tICcuLi8uLi8uLi91dGlscyc7XHJcblxyXG5leHBvcnQgY29uc3QgYXNzZXNzVnVsbmVyYWJpbGl0eSA9ICh1bml0OiBVbml0LCBleGx1c2lvbjogVW5pdCA9IG51bGwpOiBudW1iZXIgPT4ge1xyXG4gICAgbGV0IHZ1bG5lcmFiaWxpdHkgPSAwO1xyXG4gICAgbGV0IGFsbGllczogVW5pdFtdO1xyXG4gICAgbGV0IGVuZW1pZXM6IFVuaXRbXTtcclxuICAgIGlmKHVuaXQuY29udHJvbEJ5ID09PSAnY29tcHV0ZXInKSB7XHJcbiAgICAgICAgYWxsaWVzID0gT2JqZWN0LmFzc2lnbihbXSwgY29tcHV0ZXJVbml0cyk7XHJcbiAgICAgICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIHJldmVhbGVkVW5pdHMpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZih1bml0LmNvbnRyb2xCeSA9PT0gJ3BsYXllcicpIHtcclxuICAgICAgICBhbGxpZXMgPSBPYmplY3QuYXNzaWduKFtdLCBwbGF5ZXJVbml0cyk7XHJcbiAgICAgICAgZW5lbWllcyA9IE9iamVjdC5hc3NpZ24oW10sIGNvbXB1dGVyVW5pdHMpO1xyXG4gICAgfVxyXG4gICAgaWYoZXhsdXNpb24pIHtcclxuICAgICAgICBhbGxpZXMgPSBkZWxldGVVbml0RnJvbUFycmF5KHVuaXQsIGFsbGllcyk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBuZWFyZXN0QWxsaWVzOiBVbml0W10gPSBnZXRTdXJyb3VuZGVkVW5pdHModW5pdCwgYWxsaWVzLCA1KTtcclxuICAgIGNvbnN0IG5lYXJlc3RFbmVtaWVzOiBVbml0W10gPSBnZXRTdXJyb3VuZGVkVW5pdHModW5pdCwgZW5lbWllcywgNSk7XHJcbiAgICBjb25zdCBuZWFyZXN0QWxsaWVzV2VpZ2h0OiBudW1iZXIgPSBjYWxjdWxhdGVUb3RhbFVuaXRzV2VpZ2h0KG5lYXJlc3RBbGxpZXMpICsgdW5pdC53ZWlnaHQ7XHJcbiAgICBjb25zdCBuZWFyZXN0RW5lbWllc1dlaWdodDogbnVtYmVyID0gY2FsY3VsYXRlVG90YWxVbml0c1dlaWdodChuZWFyZXN0RW5lbWllcyk7XHJcbiAgICBjb25zdCBudW1iZXJPZkRhbmdlcm91c1VuaXRzOiBudW1iZXIgPSBnZXREYW5nZXJvdXNVbml0cyh1bml0KS5sZW5ndGg7XHJcbiAgICBjb25zdCBjb250YWluc0Rhbmdlcm91c1VuaXRzTmVhcmJ5OiBib29sZWFuID0gY29udGFpbnNEYW5nZXJvdXNVbml0cyh1bml0LCBuZWFyZXN0RW5lbWllcyk7XHJcblxyXG4gICAgLy8gbm8gZW5lbWllcyBuZWFyYnlcclxuICAgIGlmKG5lYXJlc3RBbGxpZXMubGVuZ3RoID09PSAwICYmIG5lYXJlc3RFbmVtaWVzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIGlmKHVuaXQuc3BlZWQgPj0gNzAgJiYgdW5pdC5zcGVlZCA8IDgwKSB7XHJcbiAgICAgICAgICAgIHZ1bG5lcmFiaWxpdHkgKz0gMTA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYodW5pdC5zcGVlZCA+PSA1MCAmJiB1bml0LnNwZWVkIDwgNzApIHtcclxuICAgICAgICAgICAgdnVsbmVyYWJpbGl0eSArPSAzMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZih1bml0LnNwZWVkIDwgNTApIHtcclxuICAgICAgICAgICAgdnVsbmVyYWJpbGl0eSArPSA1MDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIG9uZSB1bml0IGFuZCBvbmUgZW5lbXlcclxuICAgIGlmKG5lYXJlc3RBbGxpZXMubGVuZ3RoID09PSAwICYmIG5lYXJlc3RFbmVtaWVzLmxlbmd0aCA9PSAxKSB7XHJcbiAgICAgICAgaWYoY29udGFpbnNEYW5nZXJvdXNVbml0c05lYXJieSkge1xyXG4gICAgICAgICAgICB2dWxuZXJhYmlsaXR5ICs9IDcwO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgY29uc3QgbmVhcmVzdEVuZW15U3BlZWQgPSBuZWFyZXN0RW5lbWllc1swXS5zcGVlZDtcclxuICAgICAgICBpZih1bml0LnNwZWVkIC8gbmVhcmVzdEVuZW15U3BlZWQgPiAxICYmIHVuaXQuc3BlZWQgLyBuZWFyZXN0RW5lbXlTcGVlZCA8IDEuNSkge1xyXG4gICAgICAgICAgICBpZihuZWFyZXN0QWxsaWVzV2VpZ2h0ID4gbmVhcmVzdEVuZW1pZXNXZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgIHZ1bG5lcmFiaWxpdHkgKz0gMjA7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2dWxuZXJhYmlsaXR5ICs9IDM1O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBcclxuICAgICAgICBlbHNlIGlmKHVuaXQuc3BlZWQgLyBuZWFyZXN0RW5lbXlTcGVlZCA+PSAxLjUpIHtcclxuICAgICAgICAgICAgaWYobmVhcmVzdEFsbGllc1dlaWdodCA+IG5lYXJlc3RFbmVtaWVzV2VpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICB2dWxuZXJhYmlsaXR5ICs9IDU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2dWxuZXJhYmlsaXR5ICs9IDE1O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYobmVhcmVzdEVuZW1pZXNXZWlnaHQgLyBuZWFyZXN0QWxsaWVzV2VpZ2h0ID4gMS4yKSB7XHJcbiAgICAgICAgICAgIHZ1bG5lcmFiaWxpdHkgKz0gNDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYobmVhcmVzdEVuZW1pZXNXZWlnaHQgLyBuZWFyZXN0QWxsaWVzV2VpZ2h0ID4gMS41KSB7XHJcbiAgICAgICAgICAgIHZ1bG5lcmFiaWxpdHkgKz0gOTA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIGxvdHMgb2YgZW5lbWllcyBhbmQgbm8gYWxsaWVzIG5lYXJieVxyXG4gICAgaWYobmVhcmVzdEFsbGllcy5sZW5ndGggPT09IDAgJiYgbmVhcmVzdEVuZW1pZXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgIGlmKGNvbnRhaW5zRGFuZ2Vyb3VzVW5pdHNOZWFyYnkpIHtcclxuICAgICAgICAgICAgdnVsbmVyYWJpbGl0eSArPSA3MDtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGlmKG5lYXJlc3RFbmVtaWVzV2VpZ2h0IC8gbmVhcmVzdEFsbGllc1dlaWdodCA+PSAxLjUpIHtcclxuICAgICAgICAgICAgdnVsbmVyYWJpbGl0eSArPSA4MDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2dWxuZXJhYmlsaXR5ICs9IDMwO1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcblxyXG4gICAgLy8gbG90cyBvZiBhbGxpZXMgYW5kIGxvdHMgb2YgZW5lbWllcyBuZWFyYnlcclxuICAgIGlmKG5lYXJlc3RBbGxpZXMubGVuZ3RoID49IDEgJiYgbmVhcmVzdEVuZW1pZXMubGVuZ3RoID4gMSkge1xyXG4gICAgICAgIHZ1bG5lcmFiaWxpdHkgKz0gMTA7XHJcbiAgICAgICAgaWYoY29udGFpbnNEYW5nZXJvdXNVbml0c05lYXJieSkge1xyXG4gICAgICAgICAgICB2dWxuZXJhYmlsaXR5ICs9IDMwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZihuZWFyZXN0RW5lbWllc1dlaWdodCAvIG5lYXJlc3RBbGxpZXNXZWlnaHQgPj0gMS41KSB7XHJcbiAgICAgICAgICAgIHZ1bG5lcmFiaWxpdHkgKz0gNTA7XHJcbiAgICAgICAgfSBcclxuICAgICAgICBlbHNlIGlmKG5lYXJlc3RFbmVtaWVzV2VpZ2h0IC8gbmVhcmVzdEFsbGllc1dlaWdodCA+PSAxLjIpIHtcclxuICAgICAgICAgICAgdnVsbmVyYWJpbGl0eSArPSAzMDtcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgIGlmKG51bWJlck9mRGFuZ2Vyb3VzVW5pdHMgPiAwICYmIHVuaXQuc3BlZWQgPCAyNSAmJiB1bml0LnR5cGUgIT0gXCJza2lybWlzaGVyc1wiKSB7XHJcbiAgICAgICAgdnVsbmVyYWJpbGl0eSArPSAzMDtcclxuICAgIH1cclxuXHJcbiAgICBpZih2dWxuZXJhYmlsaXR5IDwgMCkgdnVsbmVyYWJpbGl0eSA9IDA7XHJcbiAgICBlbHNlIGlmKHZ1bG5lcmFiaWxpdHkgPiAxMDApIHZ1bG5lcmFiaWxpdHkgPSAxMDA7XHJcblxyXG4gICAgcmV0dXJuIHZ1bG5lcmFiaWxpdHk7XHJcbn0iLCJpbXBvcnQgeyBjb21wdXRlclVuaXRzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3N0b3JlL3VuaXQvdW5pdHNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBzZXRDb21tYW5kTnVtYmVyVG9Vbml0cyA9IChjb21tYW5kTnVtYmVyOiBudW1iZXIpID0+IHtcclxuICAgIGZvcihsZXQgdW5pdCBvZiBjb21wdXRlclVuaXRzKSB7XHJcbiAgICAgICAgdW5pdC5zZXRDb21tYW5kTnVtYmVyKGNvbW1hbmROdW1iZXIpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgVW5pdCB9IGZyb20gXCIuLi8uLi90eXBlc1wiO1xyXG5pbXBvcnQgTWFwTm9kZSBmcm9tIFwiLi4vLi4vLi4vbWFwL25vZGVzL01hcE5vZGVcIjtcclxuaW1wb3J0IHsgY3VycmVudENvbW1hbmROdW1iZXIgfSBmcm9tIFwiLi4vLi4vLi4vQUkvc3RyYXRlZ3lNb2R1bGUvZGVjaXNpb25Vbml0L2NvbW1hbmROdW1iZXIvY3VycmVudENvbW1hbmROdW1iZXJcIjtcclxuaW1wb3J0IHsgY29tcHV0ZXJVbml0cyB9IGZyb20gXCIuLi8uLi8uLi9zdG9yZS91bml0L3VuaXRzXCI7XHJcbmltcG9ydCB7IGdldENsb3Nlc3RFbmVteVRvVW5pdCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy91bml0L0FJXCI7XHJcbmltcG9ydCB7IGF0dGFja0VuZW15IH0gZnJvbSBcIi4uXCI7XHJcbmltcG9ydCB7IGdldFN1cnJvdW5kZWRVbml0cyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9zdXJyb3VuZGVkL2dldFN1cnJvdW5kZWRVbml0c1wiO1xyXG5pbXBvcnQgeyBhc3Nlc3NWdWxuZXJhYmlsaXR5IH0gZnJvbSBcIi4uLy4uLy4uL0FJL3Byb2Nlc3NNb2R1bGUvdnVsbmVyYWJpbGl0eVwiO1xyXG5pbXBvcnQgUHJpb3JpdHlRdWV1ZSBmcm9tIFwiLi4vLi4vLi4vc3RvcmUvcXVldWVzL1ByaW9yaXR5UXVldWVcIjtcclxuaW1wb3J0IHsgZ2V0VW5pdEJ5SWQgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvdW5pdC9nZW5lcmFsXCI7XHJcbmltcG9ydCB7IG1vdmVUbyB9IGZyb20gJy4uL2NvbW1vbi9tb3ZlVG8nO1xyXG5pbXBvcnQgeyBiZUNsb3NlVG8gfSBmcm9tIFwiLi9iZUNsb3NlVG9cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBhZHZhbmNlID0gKHVuaXQ6IFVuaXQsIGFjdGlvbk5vZGU6IE1hcE5vZGUsIGNvbW1hbmROdW1iZXI6IG51bWJlciwgbmV3Q29tbWFuZDogYm9vbGVhbiA9IGZhbHNlKSA9PiB7XHJcbiAgICBpZihjb21tYW5kTnVtYmVyICE9PSBjdXJyZW50Q29tbWFuZE51bWJlcikgcmV0dXJuO1xyXG4gICAgaWYobmV3Q29tbWFuZCB8fCAoIXVuaXQuaXNNb3ZpbmcgJiYgIXVuaXQuaXNGaWdodGluZykpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgdW5pdCAke3VuaXQuaWR9IGNvbW1hbmROdW1iZXIgJHtjb21tYW5kTnVtYmVyfWApO1xyXG4gICAgICAgIGlmKHVuaXQuY3VycmVudE5vZGUueCAhPSBhY3Rpb25Ob2RlLnggJiYgdW5pdC5jdXJyZW50Tm9kZS55ICE9IGFjdGlvbk5vZGUueSkge1xyXG4gICAgICAgICAgICBtb3ZlVG8odW5pdCwgYWN0aW9uTm9kZS54LCBhY3Rpb25Ob2RlLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbXB1dGVyVW5pdHMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgIGxldCBlbmVteSA9IGdldENsb3Nlc3RFbmVteVRvVW5pdCh1bml0KTtcclxuICAgICAgICAgICAgYXR0YWNrRW5lbXkodW5pdCwgZW5lbXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IHN1cnJvdW5kZWRBbGxpZXMgPSBnZXRTdXJyb3VuZGVkVW5pdHModW5pdCwgY29tcHV0ZXJVbml0cywgNSk7XHJcbiAgICAgICAgICAgIGxldCBwcmlvcml0eVF1ZXVlID0gbmV3IFByaW9yaXR5UXVldWUoKTtcclxuICAgICAgICAgICAgZm9yKGxldCBhbGx5IG9mIHN1cnJvdW5kZWRBbGxpZXMpIHtcclxuICAgICAgICAgICAgICAgIGxldCB2dWxuZXJhYmlsaXR5ID0gYXNzZXNzVnVsbmVyYWJpbGl0eShhbGx5KTtcclxuICAgICAgICAgICAgICAgIHByaW9yaXR5UXVldWUuaW5zZXJ0KGFsbHkuaWQsIHZ1bG5lcmFiaWxpdHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHdoaWxlKCFwcmlvcml0eVF1ZXVlLmlzRW1wdHkoKSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQgPSBwcmlvcml0eVF1ZXVlLmV4dHJhY3RNYXgoKTtcclxuICAgICAgICAgICAgICAgIGxldCBhbGx5ID0gZ2V0VW5pdEJ5SWQoZWxlbWVudC5rZXkpO1xyXG4gICAgICAgICAgICAgICAgaWYoZWxlbWVudC52YWx1ZSA+PSA4MCAmJiBhbGx5LmlzRmlnaHRpbmcpIHtcclxuICAgICAgICAgICAgICAgICAgICBiZUNsb3NlVG8odW5pdCwgYWxseSwgY29tbWFuZE51bWJlciwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBhZHZhbmNlKHVuaXQsIGFjdGlvbk5vZGUsIGNvbW1hbmROdW1iZXIpO1xyXG4gICAgfSwgMjAwMCk7XHJcbn0iLCJpbXBvcnQgUG9zaXRpb25zIGZyb20gXCIuLi9BSS9wb3NpdGlvbnMvUG9zaXRpb25zXCI7XHJcblxyXG5cclxuY2xhc3MgUHJpb3JpdHlRdWV1ZSB7XHJcbiAgICBwcml2YXRlIGVsZW1lbnRzOiBhbnkgPSBbXVxyXG4gICAgaW5zZXJ0KGtleTogYW55LCBwcmlvcml0eTogTnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKHtcclxuICAgICAgICAgICAga2V5OiBrZXksXHJcbiAgICAgICAgICAgIHZhbHVlOiBwcmlvcml0eVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZShrZXk6IGFueSwgbmV3UHJpb3JpdHk6IE51bWJlcikge1xyXG4gICAgICAgIGZvcihsZXQgZWxlbWVudCBvZiB0aGlzLmVsZW1lbnRzKSB7XHJcbiAgICAgICAgICAgIGlmKGVsZW1lbnQua2V5ID09IGtleSkge1xyXG4gICAgICAgICAgICAgICAgZWxlbWVudC52YWx1ZSA9IG5ld1ByaW9yaXR5OyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBleHRyYWN0TWF4KCkge1xyXG4gICAgICAgIGxldCBtYXggPSB0aGlzLmVsZW1lbnRzWzBdO1xyXG4gICAgICAgIGxldCBtYXhJbmRleCA9IDA7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMTsgaSA8IHRoaXMuZWxlbWVudHMubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5lbGVtZW50c1tpXS52YWx1ZSA+IG1heC52YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgbWF4ID0gdGhpcy5lbGVtZW50c1tpXTtcclxuICAgICAgICAgICAgICAgIG1heEluZGV4ID0gaTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmVsZW1lbnRzID0gdGhpcy5lbGVtZW50cy5maWx0ZXIoKGVsOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgaWYoZWwua2V5ID09PSBtYXgua2V5KSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBtYXg7XHJcbiAgICB9XHJcblxyXG4gICAgaXNFbXB0eSgpIHtcclxuICAgICAgICBpZih0aGlzLmVsZW1lbnRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcmlvcml0eVF1ZXVlOyIsImltcG9ydCB7bGF1bmNoR2FtZX0gZnJvbSAnLi9sYXVuY2hHYW1lJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgbGF1bmNoR2FtZVxyXG59XHJcbiIsImltcG9ydCB7IGxhdW5jaE1haW5NZW51IH0gZnJvbSAnLi4vbWFpbk1lbnUvbGF1bmNoTWFpbk1lbnUnO1xyXG5pbXBvcnQgeyBsYXVuY2hCYXR0bGUgfSBmcm9tICcuLi9iYXR0bGUvbGF1bmNoQmF0dGxlJztcclxuaW1wb3J0IHtcclxuICBtYWluTWVudU1vZGUsXHJcbiAgYmF0dGxlTW9kZVxyXG59IGZyb20gJy4uLy4uL2NvbmZpZy9nbG9iYWwvZ2xvYmFsQ29uZmlnJztcclxuXHJcbmV4cG9ydCBjb25zdCBsYXVuY2hHYW1lID0gKCkgPT4ge1xyXG4gIGlmKG1haW5NZW51TW9kZSkge1xyXG4gICAgbGF1bmNoTWFpbk1lbnUoKTtcclxuICB9XHJcbiAgZWxzZSBpZihiYXR0bGVNb2RlKSB7XHJcbiAgICBsYXVuY2hCYXR0bGUoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgbWFpbk1lbnVDdHggfSBmcm9tICcuLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7IE1BUF9XSURUSCwgQ0FOVkFTX0hFSUdIVCB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7IGRpc3BsYXlSb3N0ZXIgfSBmcm9tICcuLi8uLi9VSS9tYWluTWVudS9sYXlvdXRzL3Jvc3RlckxheW91dCc7XHJcbmltcG9ydCB7IGRpc3BsYXlDaG9zZW5Vbml0cyB9IGZyb20gJy4uLy4uL1VJL21haW5NZW51L2xheW91dHMvYXJteUxheW91dCc7XHJcbmltcG9ydCB7IGRpc3BsYXlJbmZvIH0gZnJvbSAnLi4vLi4vVUkvbWFpbk1lbnUvbGF5b3V0cy9pbmZvTGF5b3V0JztcclxuaW1wb3J0IHsgZGlzcGxheVRpdGxlIH0gZnJvbSAnLi4vLi4vVUkvbWFpbk1lbnUvbGF5b3V0cy91cHBlckxheW91dCc7XHJcbmltcG9ydCB7IGRyYWdBbmREcm9wIH0gZnJvbSAnLi4vLi4vVUkvbWFpbk1lbnUvbWFpbic7XHJcbmltcG9ydCB7IGRyYXdCb3R0b21MYXlvdXQgfSBmcm9tICcuLi8uLi9VSS9tYWluTWVudS9sYXlvdXRzL2JvdHRvbUxheW91dCc7XHJcbmltcG9ydCB7IGluaXRpYWxpemVNYXAgfSBmcm9tICcuLi8uLi9tYXAvY3JlYXRlTWFwL2luaXRpYWxNYXAnO1xyXG5pbXBvcnQgeyBsb2FkSWNvbnMsIGxvYWRVbml0SWNvbnMgfSBmcm9tICcuLi8uLi9zdG9yZS9pbWFnZXMvdW5pdEljb25JbWFnZXMnO1xyXG5pbXBvcnQgeyBjcmVhdGVSb3N0ZXIgfSBmcm9tICcuLi8uLi9zdG9yZS9yb3N0ZXIvcm9zdGVyJztcclxuaW1wb3J0IHsgZHJhd0xvYWRpbmdDYW52YXMgfSBmcm9tICcuLi9sb2FkaW5nL2RyYXdMb2FkaW5nQ2FudmFzJztcclxuaW1wb3J0IHsgbG9hZGluZ0NhbnZhcyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jYW52YXMvbG9hZGluZyc7XHJcblxyXG5leHBvcnQgY29uc3QgbGF1bmNoTWFpbk1lbnUgPSAoKSA9PiB7XHJcbiAgZHJhd0xvYWRpbmdDYW52YXMoKTtcclxuICBpbml0aWFsaXplTWFwKCkudGhlbihcclxuICAgICgpID0+IHtcclxuICAgICAgbG9hZFVuaXRJY29ucygpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIG1haW5NZW51Q3R4LmZpbGxSZWN0KDAsIDAsIE1BUF9XSURUSCwgQ0FOVkFTX0hFSUdIVCk7XHJcbiAgICAgICAgY3JlYXRlUm9zdGVyKCk7XHJcbiAgICAgICAgZGlzcGxheVJvc3RlcigpO1xyXG4gICAgICAgIGRpc3BsYXlDaG9zZW5Vbml0cygpO1xyXG4gICAgICAgIGRpc3BsYXlJbmZvKCk7XHJcbiAgICAgICAgZGlzcGxheVRpdGxlKCk7XHJcbiAgICAgICAgZHJhZ0FuZERyb3AoKTtcclxuICAgICAgICBkcmF3Qm90dG9tTGF5b3V0KCk7XHJcbiAgICAgICAgbG9hZEljb25zKCk7XHJcbiAgICAgICAgbG9hZGluZ0NhbnZhcy5zdHlsZS56SW5kZXggPSAnMSc7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICk7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBpc1VuaXRTZWxlY3RlZEluUm9zdGVyXHJcbn0gZnJvbSAnLi91bml0JztcclxuaW1wb3J0IHtcclxuICBkaXNwbGF5Um9zdGVyXHJcbn0gZnJvbSAnLi9kaXNwbGF5JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgaXNVbml0U2VsZWN0ZWRJblJvc3RlcixcclxuICBkaXNwbGF5Um9zdGVyXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBpc1VuaXRTZWxlY3RlZEluUm9zdGVyXHJcbn0gZnJvbSAnLi9pc1VuaXRTZWxlY3RlZEluUm9zdGVyJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgaXNVbml0U2VsZWN0ZWRJblJvc3RlclxyXG59XHJcbiIsImV4cG9ydCBjb25zdCByb3N0ZXJJbWdXaWR0aDpudW1iZXIgPSAxMDA7XHJcbmV4cG9ydCBjb25zdCByb3N0ZXJJbWdIZWlnaHQ6bnVtYmVyID0gMTAwO1xyXG4iLCJpbXBvcnQge1xyXG4gIHVuaXRSb3N0ZXJXaWR0aCxcclxuICB1bml0Um9zdGVySGVpZ2h0LFxyXG4gIHRpdGxlSGVpZ2h0XHJcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL21haW5NZW51JztcclxuaW1wb3J0IHttYWluTWVudUN0eH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQge2Rpc3BsYXlSb3N0ZXJUaXRsZX0gZnJvbSAnLic7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheVJvc3RlciA9ICgpID0+IHtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2NkZDFkNic7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFJlY3QoMCx0aXRsZUhlaWdodCwgdW5pdFJvc3RlcldpZHRoLCB1bml0Um9zdGVySGVpZ2h0KTtcclxuICBkaXNwbGF5Um9zdGVyVGl0bGUoKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRlY3JlYXNlU3BlbnRHb2xkLFxyXG4gIGluY3JlYXNlU3BlbnRHb2xkLFxyXG59IGZyb20gJy4vc3BlbnRHb2xkJztcclxuXHJcbmltcG9ydCB7XHJcbiAgc2V0VG90YWxHb2xkLFxyXG59IGZyb20gJy4vdG90YWxHb2xkJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGVjcmVhc2VTcGVudEdvbGQsXHJcbiAgaW5jcmVhc2VTcGVudEdvbGQsXHJcbiAgc2V0VG90YWxHb2xkXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBhcm15TGF5b3V0SGVpZ2h0LFxyXG4gIGFybXlMYXlvdXRXaWR0aFxyXG59IGZyb20gJy4vbGF5b3V0JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYXJteUxheW91dEhlaWdodCxcclxuICBhcm15TGF5b3V0V2lkdGhcclxufVxyXG4iLCJpbXBvcnQge01BUF9XSURUSCwgQ0FOVkFTX0hFSUdIVH0gZnJvbSAnLi4vLi4vLi4nO1xyXG5cclxuZXhwb3J0IGxldCBhcm15TGF5b3V0SGVpZ2h0Om51bWJlciA9IENBTlZBU19IRUlHSFQgLSAxNDA7XHJcbmV4cG9ydCBsZXQgYXJteUxheW91dFdpZHRoOm51bWJlciA9IE1hdGgucm91bmQoTUFQX1dJRFRIIC8gMyk7XHJcbiIsImltcG9ydCB7XHJcbiAgaW5mb0xheW91dEhlaWdodCxcclxuICBpbmZvTGF5b3V0V2lkdGhcclxufSBmcm9tICcuL2xheW91dCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGluZm9MYXlvdXRIZWlnaHQsXHJcbiAgaW5mb0xheW91dFdpZHRoXHJcbn1cclxuIiwiaW1wb3J0IHtNQVBfV0lEVEgsIENBTlZBU19IRUlHSFR9IGZyb20gJy4uLy4uLy4uJztcclxuXHJcbmV4cG9ydCBsZXQgaW5mb0xheW91dEhlaWdodDpudW1iZXIgPSBDQU5WQVNfSEVJR0hUIC0gMTQwO1xyXG5leHBvcnQgbGV0IGluZm9MYXlvdXRXaWR0aDpudW1iZXIgPSBNYXRoLnJvdW5kKE1BUF9XSURUSCAvIDMpO1xyXG4iLCJpbXBvcnQge1xyXG4gIHVuaXRSb3N0ZXJIZWlnaHQsXHJcbiAgdW5pdFJvc3RlcldpZHRoXHJcbn0gZnJvbSAnLi9sYXlvdXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICB1bml0Um9zdGVySGVpZ2h0LFxyXG4gIHVuaXRSb3N0ZXJXaWR0aFxyXG59XHJcbiIsImltcG9ydCB7TUFQX1dJRFRILCBDQU5WQVNfSEVJR0hUfSBmcm9tICcuLi8uLi8uLic7XHJcblxyXG5leHBvcnQgbGV0IHVuaXRSb3N0ZXJIZWlnaHQ6bnVtYmVyID0gQ0FOVkFTX0hFSUdIVCAtIDE0MDtcclxuZXhwb3J0IGxldCB1bml0Um9zdGVyV2lkdGg6bnVtYmVyID0gTWF0aC5yb3VuZChNQVBfV0lEVEggLyAzKTtcclxuIiwiaW1wb3J0IHtcclxuICBzdGFydEJhdHRsZVN0YXJ0WSxcclxuICBzdGFydEJhdHRsZUhlaWdodCxcclxuICBzdGFydEJhdHRsZVdpZHRoXHJcbn0gZnJvbSAnLi9sYXlvdXQnO1xyXG5cclxuZXhwb3J0IHtcclxuICBzdGFydEJhdHRsZVN0YXJ0WSxcclxuICBzdGFydEJhdHRsZUhlaWdodCxcclxuICBzdGFydEJhdHRsZVdpZHRoXHJcbn1cclxuIiwiaW1wb3J0IHtNQVBfV0lEVEgsIENBTlZBU19IRUlHSFR9IGZyb20gJy4uLy4uLy4uJztcclxuaW1wb3J0IHtcclxuICBpbmZvTGF5b3V0SGVpZ2h0XHJcbn0gZnJvbSAnLi4nO1xyXG5pbXBvcnQge3RpdGxlSGVpZ2h0fSBmcm9tICcuLi91cHBlckxheW91dCc7XHJcbi8vIHN0YXJ0IGJhdHRsZVxyXG5leHBvcnQgbGV0IHN0YXJ0QmF0dGxlU3RhcnRZOm51bWJlciA9IHRpdGxlSGVpZ2h0ICsgaW5mb0xheW91dEhlaWdodDtcclxuZXhwb3J0IGxldCBzdGFydEJhdHRsZUhlaWdodDpudW1iZXIgPSBDQU5WQVNfSEVJR0hUIC0gKHRpdGxlSGVpZ2h0ICsgaW5mb0xheW91dEhlaWdodCk7XHJcbmV4cG9ydCBsZXQgc3RhcnRCYXR0bGVXaWR0aDpudW1iZXIgPSBNQVBfV0lEVEg7XHJcbiIsImV4cG9ydCBjb25zdCB0aXRsZUhlaWdodCA9IDcwO1xyXG4iLCJpbXBvcnQge1xyXG4gIGNoYW5nZUJhdHRsZVNldHRpbmdzVG9UcnVlLFxyXG4gIGNoYW5nZVVuaXRJbmZvVG9UcnVlLFxyXG4gIHNob3dCYXR0bGVTZXR0aW5ncyxcclxuICBzaG93VW5pdEluZm9cclxufSBmcm9tICcuL3Nob3dJbmZvJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgY2hhbmdlQmF0dGxlU2V0dGluZ3NUb1RydWUsXHJcbiAgY2hhbmdlVW5pdEluZm9Ub1RydWUsXHJcbiAgc2hvd0JhdHRsZVNldHRpbmdzLFxyXG4gIHNob3dVbml0SW5mb1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgY2hhbmdlVG9Db21wdXRlcixcclxuICBjaGFuZ2VUb1BsYXllcixcclxuICBzaWRlXHJcbn0gZnJvbSAnLi9zaWRlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgY2hhbmdlVG9Db21wdXRlcixcclxuICBjaGFuZ2VUb1BsYXllcixcclxuICBzaWRlXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBkaXNhYmxlU3RhcnRCYXR0bGVCdXR0b24sXHJcbiAgZW5hYmxlU3RhcnRCYXR0bGVCdXR0b24sXHJcbiAgc3RhcnRCYXR0bGVBdmFpbGFibGVcclxufSBmcm9tICcuL3N0YXJ0QmF0dGxlQXZhaWxhYmxlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGlzYWJsZVN0YXJ0QmF0dGxlQnV0dG9uLFxyXG4gIGVuYWJsZVN0YXJ0QmF0dGxlQnV0dG9uLFxyXG4gIHN0YXJ0QmF0dGxlQXZhaWxhYmxlXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBjaGFuZ2VIb3ZlcmVkVW5pdCxcclxuICBob3ZlcmVkVW5pdFxyXG59IGZyb20gJy4vaG92ZXJlZFVuaXQnO1xyXG5cclxuaW1wb3J0IHtcclxuICBjb21wdXRlckhhc1VuaXRzLFxyXG4gIHBsYXllckhhc1VuaXRzXHJcbn0gZnJvbSAnLi91bml0cyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGNoYW5nZUhvdmVyZWRVbml0LFxyXG4gIGhvdmVyZWRVbml0LFxyXG4gIGNvbXB1dGVySGFzVW5pdHMsXHJcbiAgcGxheWVySGFzVW5pdHNcclxufVxyXG4iLCIvLyBzdGFydEJhdHRsZSBhdmFpbGFibGVcclxuZXhwb3J0IGxldCBwbGF5ZXJIYXNVbml0czpib29sZWFuID0gZmFsc2U7XHJcbmV4cG9ydCBsZXQgY29tcHV0ZXJIYXNVbml0czpib29sZWFuID0gZmFsc2U7XHJcbiIsImltcG9ydCB7IG1haW5NZW51Q3R4IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQgeyB0aXRsZUhlaWdodCB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcbmltcG9ydCB7IHJvc3RlciB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3N0b3JlL3Jvc3Rlci9yb3N0ZXInO1xyXG5pbXBvcnQgeyBsb2FkSW1hZ2UgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi91dGlscyc7XHJcbmltcG9ydCB7XHJcbiAgcm9zdGVySW1nSGVpZ2h0LFxyXG4gIHJvc3RlckltZ1dpZHRoXHJcbn0gZnJvbSAnLi4vcm9zdGVyU2V0dGluZ3MnO1xyXG5pbXBvcnQgeyBkcmF3Q29pbiB9IGZyb20gJy4uL2NvaW4nO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc3BsYXlSb3N0ZXJVbml0cyA9IChpOm51bWJlciA9IDAsIHg6bnVtYmVyPTYwLCB5Om51bWJlcj10aXRsZUhlaWdodCs2MCkgPT4ge1xyXG4gIGlmKGkgPj0gcm9zdGVyLmxlbmd0aCkge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBsb2FkSW1hZ2Uocm9zdGVyW2ldLmltZ1NyYywgKGVycjphbnksIGltZzphbnkpID0+IHtcclxuICAgIG1haW5NZW51Q3R4LmZvbnQgPSAnMTRweCBzZXJpZic7XHJcbiAgICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnIzAwMCc7XHJcbiAgICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcbiAgICBtYWluTWVudUN0eC5maWxsVGV4dChyb3N0ZXJbaV0ubmFtZSwgeCArIDUsIHkpO1xyXG4gICAgbWFpbk1lbnVDdHguZHJhd0ltYWdlKGltZywgeCwgeSArIDUsIHJvc3RlckltZ1dpZHRoLCByb3N0ZXJJbWdIZWlnaHQpO1xyXG4gICAgZHJhd0NvaW4oeCArIDE1LCB5ICsgcm9zdGVySW1nSGVpZ2h0ICsgMTUsIDUpO1xyXG4gICAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gJyMwMDAnO1xyXG4gICAgbWFpbk1lbnVDdHguZmlsbFRleHQocm9zdGVyW2ldLmNvc3QsIHggKyAyNSAseSArIHJvc3RlckltZ0hlaWdodCArIDIwKTtcclxuICAgIHJvc3RlcltpXS54ID0geDtcclxuICAgIHJvc3RlcltpXS55ID0geTtcclxuICAgIHggPSAoeCArIHJvc3RlckltZ1dpZHRoICsgMTUpO1xyXG4gICAgaWYoaSA9PT0gMiB8fCBpID09PSA1IHx8IGkgPT09IDggfHwgaSA9PT0gMTEpIHtcclxuICAgICAgeCA9IDYwO1xyXG4gICAgICB5ICs9IHJvc3RlckltZ0hlaWdodCArIDQ1O1xyXG4gICAgfVxyXG4gICAgaSsrO1xyXG4gICAgZGlzcGxheVJvc3RlclVuaXRzKGksIHgsIHkpO1xyXG4gIH0pO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZHJhd0NvaW5cclxufSBmcm9tICcuL2RyYXdDb2luJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZHJhd0NvaW5cclxufVxyXG4iLCJpbXBvcnQge21haW5NZW51Q3R4fSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0NvaW4gPSAoY2VudGVyWDpudW1iZXIsIGNlbnRlclk6bnVtYmVyLCByYWRpdXM6bnVtYmVyKSA9PiB7XHJcbiAgbWFpbk1lbnVDdHguYmVnaW5QYXRoKCk7XHJcbiAgbWFpbk1lbnVDdHguYXJjKGNlbnRlclgsIGNlbnRlclksIHJhZGl1cywgMCwgMiAqIE1hdGguUEksIGZhbHNlKTtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2ZmZDcwMCc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbCgpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge21haW5NZW51Q3R4fSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7ZGlzcGxheVJvc3RlclVuaXRzfSBmcm9tICcuJztcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5Um9zdGVyVGl0bGUgPSAoKSA9PiB7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gICcjMDAwJztcclxuICBtYWluTWVudUN0eC5mb250ID0gJzI0cHggc2VyaWYnO1xyXG4gIG1haW5NZW51Q3R4LnRleHRBbGlnbiA9ICdsZWZ0JztcclxuICBtYWluTWVudUN0eC5maWxsVGV4dCgnUm9zdGVyJywgMTUwLCB0aXRsZUhlaWdodCArIDIwKTtcclxuICBkaXNwbGF5Um9zdGVyVW5pdHMoKTtcclxufVxyXG4iLCJpbXBvcnQge2RyYWdBbmREcm9wQ2FudmFzQ3R4fSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7XHJcbiAgYXJteUltZ0hlaWdodCxcclxuICBhcm15SW1nV2lkdGhcclxufSBmcm9tICcuLi9hcm15U2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYXdSZW1vdmVJY29uID0gKHVuaXQ6YW55KSA9PiB7XHJcbiAgY29uc3QgcmlnaHRUb3BYOm51bWJlciA9IHVuaXQuYXJteVBvc2l0aW9uLnggKyBhcm15SW1nV2lkdGg7XHJcbiAgY29uc3QgcmlnaHRUb3BZOm51bWJlciA9IHVuaXQuYXJteVBvc2l0aW9uLnk7XHJcblxyXG4gIGxldCBsaW5lMVgwOm51bWJlciA9IHJpZ2h0VG9wWCAtIDE1O1xyXG4gIGxldCBsaW5lMVkwOm51bWJlciA9IHJpZ2h0VG9wWSArIDE1O1xyXG4gIGxldCBsaW5lMVgxOm51bWJlciA9IHJpZ2h0VG9wWCAtIDU7XHJcbiAgbGV0IGxpbmUxWTE6bnVtYmVyID0gcmlnaHRUb3BZICsgNDtcclxuXHJcbiAgbGV0IGxpbmUyWDA6bnVtYmVyID0gbGluZTFYMDtcclxuICBsZXQgbGluZTJZMDpudW1iZXIgPSBsaW5lMVkxO1xyXG4gIGxldCBsaW5lMlgxOm51bWJlciA9IGxpbmUxWDE7XHJcbiAgbGV0IGxpbmUyWTE6bnVtYmVyID0gbGluZTFZMDtcclxuXHJcbiAgbGV0IHdpZHRoOm51bWJlciA9IE1hdGgucm91bmQoYXJteUltZ1dpZHRoIC8gNCk7XHJcbiAgbGV0IGhlaWdodDpudW1iZXIgPSBNYXRoLnJvdW5kKGFybXlJbWdIZWlnaHQgLyA0KTtcclxuICBkcmFnQW5kRHJvcENhbnZhc0N0eC5maWxsU3R5bGUgPSAncmdiKDIwMCwgMCwwKSc7XHJcbiAgZHJhZ0FuZERyb3BDYW52YXNDdHguYmVnaW5QYXRoKCk7XHJcbiAgZHJhZ0FuZERyb3BDYW52YXNDdHgubW92ZVRvKGxpbmUxWDAsIGxpbmUxWTApO1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzQ3R4LmxpbmVUbyhsaW5lMVgxLCBsaW5lMVkxKTtcclxuICBkcmFnQW5kRHJvcENhbnZhc0N0eC5zdHJva2UoKTtcclxuICBkcmFnQW5kRHJvcENhbnZhc0N0eC5iZWdpblBhdGgoKTtcclxuICBkcmFnQW5kRHJvcENhbnZhc0N0eC5maWxsU3R5bGUgPSAncmVkJztcclxuICBkcmFnQW5kRHJvcENhbnZhc0N0eC5tb3ZlVG8obGluZTJYMCwgbGluZTJZMCk7XHJcbiAgZHJhZ0FuZERyb3BDYW52YXNDdHgubGluZVRvKGxpbmUyWDEsIGxpbmUyWTEpO1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzQ3R4LnN0cm9rZSgpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgaXNVbml0U2hvdWxkQmVSZW1vdmVkXHJcbn0gZnJvbSAnLi9yZW1vdmVVbml0JztcclxuXHJcbmV4cG9ydCB7XHJcbiAgaXNVbml0U2hvdWxkQmVSZW1vdmVkXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBvbkNob29zZVVuaXRJbkFybXlcclxufSBmcm9tICcuL2Nob29zZVVuaXQnO1xyXG5pbXBvcnQge1xyXG4gIGRpc3BsYXlDaG9zZW5Vbml0cyxcclxuICBkaXNwbGF5Q2hvc2VuVW5pdHNUaXRsZVxyXG59IGZyb20gJy4vY2hvc2VuVW5pdHMnO1xyXG5cclxuZXhwb3J0IHtcclxuICBkaXNwbGF5Q2hvc2VuVW5pdHMsXHJcbiAgZGlzcGxheUNob3NlblVuaXRzVGl0bGUsXHJcbiAgb25DaG9vc2VVbml0SW5Bcm15XHJcbn1cclxuIiwiaW1wb3J0IHtzaWRlfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc2lkZXMvc2lkZSc7XHJcbmltcG9ydCB7ZHJhZ0FuZERyb3BDYW52YXNDdHh9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtNQVBfV0lEVEgsIENBTlZBU19IRUlHSFR9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7c2VsZWN0ZWRVbml0SW5Sb3N0ZXJ9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3N0b3JlL3Jvc3Rlci9zZWxlY3RlZFVuaXQnO1xyXG5pbXBvcnQge2RyYXdSZW1vdmVJY29ufSBmcm9tICcuLi9pY29uJztcclxuaW1wb3J0IHtcclxuICBwbGF5ZXJBcm15LFxyXG4gIGNvbXB1dGVyQXJteVxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL3N0b3JlL3Jvc3Rlci9hcm15JztcclxuaW1wb3J0IHtcclxuICBhcm15SW1nSGVpZ2h0LFxyXG4gIGFybXlJbWdXaWR0aFxyXG59IGZyb20gJy4uL2FybXlTZXR0aW5ncyc7XHJcblxyXG5leHBvcnQgY29uc3Qgb25DaG9vc2VVbml0SW5Bcm15ID0gKG1vdXNlWDpudW1iZXIsIG1vdXNlWTpudW1iZXIpID0+IHtcclxuICBsZXQgYXJteTphbnlbXSA9IFtdO1xyXG4gIGlmKHNpZGUgPT09ICdwbGF5ZXInKSB7XHJcbiAgICBhcm15ID0gcGxheWVyQXJteTtcclxuICB9IGVsc2Uge1xyXG4gICAgYXJteSA9IGNvbXB1dGVyQXJteTtcclxuICB9XHJcbiAgbGV0IHNlbGVjdGVkVW5pdDphbnkgPSBudWxsO1xyXG4gIC8vIGNvbnNvbGUuZXJyb3IoJ2FybXknLCBhcm15KTtcclxuICBmb3IobGV0IHVuaXQgb2YgYXJteSkge1xyXG4gICAgICBsZXQgeDA6bnVtYmVyID0gdW5pdC5hcm15UG9zaXRpb24ueDtcclxuICAgICAgbGV0IHgxOm51bWJlciA9IHgwICsgYXJteUltZ1dpZHRoO1xyXG4gICAgICBsZXQgeTA6bnVtYmVyID0gdW5pdC5hcm15UG9zaXRpb24ueTtcclxuICAgICAgbGV0IHkxOm51bWJlciA9IHkwICsgYXJteUltZ0hlaWdodDtcclxuICAgICAgaWYobW91c2VYID49IHgwICYmIG1vdXNlWCA8IHgxICYmIG1vdXNlWSA+IHkwICYmIG1vdXNlWSA8IHkxKSB7XHJcbiAgICAgICAgc2VsZWN0ZWRVbml0ID0gdW5pdDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBpZighc2VsZWN0ZWRVbml0SW5Sb3N0ZXIpIHsgLy8gdW5pdCBpcyBub3QgZHJhZ2dlZFxyXG4gICAgICAgICAgZHJhZ0FuZERyb3BDYW52YXNDdHguY2xlYXJSZWN0KDAsIDAsIE1BUF9XSURUSCwgQ0FOVkFTX0hFSUdIVCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgfVxyXG4gIGlmKHNlbGVjdGVkVW5pdCAmJiAhc2VsZWN0ZWRVbml0SW5Sb3N0ZXIpIHtcclxuICAgIGRyYXdSZW1vdmVJY29uKHNlbGVjdGVkVW5pdCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgbWFpbk1lbnVDdHhcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7XHJcbiAgdW5pdFJvc3RlcldpZHRoLFxyXG4gIHVuaXRSb3N0ZXJIZWlnaHQsXHJcbiAgdGl0bGVIZWlnaHQsXHJcbiAgYXJteUxheW91dFdpZHRoLFxyXG4gIGFybXlMYXlvdXRIZWlnaHRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge2Rpc3BsYXlBcm15fSBmcm9tICcuLi9hcm15JztcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5Q2hvc2VuVW5pdHMgPSAoKSA9PiB7XHJcbiAgbWFpbk1lbnVDdHguY2xlYXJSZWN0KHVuaXRSb3N0ZXJXaWR0aCwgdGl0bGVIZWlnaHQsIGFybXlMYXlvdXRXaWR0aCwgYXJteUxheW91dEhlaWdodCk7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gJyNjZGQxZDYnO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxSZWN0KHVuaXRSb3N0ZXJXaWR0aCwgdGl0bGVIZWlnaHQsIGFybXlMYXlvdXRXaWR0aCwgYXJteUxheW91dEhlaWdodCk7XHJcbiAgbWFpbk1lbnVDdHguc3Ryb2tlUmVjdCh1bml0Um9zdGVyV2lkdGgsIHRpdGxlSGVpZ2h0LCBhcm15TGF5b3V0V2lkdGgsIGFybXlMYXlvdXRIZWlnaHQpO1xyXG4gIGRpc3BsYXlDaG9zZW5Vbml0c1RpdGxlKCk7XHJcbiAgZGlzcGxheUFybXkoKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGRpc3BsYXlDaG9zZW5Vbml0c1RpdGxlID0gKCkgPT4ge1xyXG4gIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICAnIzAwMCc7XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICcyNHB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFRleHQoJ1VuaXRzJywgdW5pdFJvc3RlcldpZHRoICsgMTUwLCB0aXRsZUhlaWdodCArIDIwKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRyYXdNb25leUJveFxyXG59IGZyb20gJy4vbW9uZXlCb3gnO1xyXG5pbXBvcnQge1xyXG4gIGNoYW5nZVRvdGFsR29sZCxcclxuICBmaWxsVG90YWxHb2xkLFxyXG4gIHNob3dUb3RhbEdvbGRcclxufSBmcm9tICcuL3RvdGFsR29sZCc7XHJcblxyXG5leHBvcnQge1xyXG4gIGRyYXdNb25leUJveCxcclxuICBjaGFuZ2VUb3RhbEdvbGQsXHJcbiAgZmlsbFRvdGFsR29sZCxcclxuICBzaG93VG90YWxHb2xkXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICB0b3RhbEdvbGRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvZ29sZC90b3RhbEdvbGQnO1xyXG5pbXBvcnQge1xyXG4gIG1haW5NZW51Q3R4LFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtcclxuICBib3hIZWlnaHQsXHJcbiAgYm94V2lkdGhcclxufSBmcm9tICcuLi8uLi9pbmZvU2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYXdNb25leUJveCA9ICh4Om51bWJlciwgeTpudW1iZXIsIGFtb3VudDpudW1iZXIpID0+IHtcclxuICBpZihhbW91bnQgPT09IHRvdGFsR29sZCkge1xyXG4gICAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gJyNmZmYnO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2NkZDFkNic7XHJcbiAgfVxyXG4gIG1haW5NZW51Q3R4LmZpbGxSZWN0KHgsIHksIGJveFdpZHRoLCBib3hIZWlnaHQpO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICcjMDAwJztcclxuICBtYWluTWVudUN0eC5zdHJva2VSZWN0KHgsIHksIGJveFdpZHRoLCBib3hIZWlnaHQpO1xyXG4gIG1haW5NZW51Q3R4LmZvbnQgPSAnMTJweCBzZXJpZic7XHJcbiAgbWFpbk1lbnVDdHgudGV4dEFsaWduID0gJ2xlZnQnO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxUZXh0KGFtb3VudCwgeCAgKyAxMCwgeSArIDI1KTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGFybXlMYXlvdXRXaWR0aCxcclxuICB0aXRsZUhlaWdodCxcclxuICB1bml0Um9zdGVyV2lkdGhcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdpZHRoID0gMTYwO1xyXG5leHBvcnQgY29uc3QgaGVpZ2h0ID0gMzA7XHJcbmV4cG9ydCBjb25zdCBiYXR0bGVTZXR0aW5nc1ggPSBhcm15TGF5b3V0V2lkdGggKyB1bml0Um9zdGVyV2lkdGggKyA1MDtcclxuZXhwb3J0IGNvbnN0IGJhdHRsZVNldHRpbmdzWSA9IHRpdGxlSGVpZ2h0O1xyXG5leHBvcnQgY29uc3QgdW5pdEluZm9YID0gYXJteUxheW91dFdpZHRoICsgdW5pdFJvc3RlcldpZHRoICsgNTAgKyB3aWR0aCArIDIwO1xyXG5leHBvcnQgY29uc3QgdW5pdEluZm9ZID0gdGl0bGVIZWlnaHQ7XHJcbiIsImltcG9ydCB7XHJcbiAgYm94V2lkdGgsXHJcbiAgYm94SGVpZ2h0LFxyXG4gIGdvbGRCb3hTdGFydFgsXHJcbiAgZ29sZEJveFN0YXJ0WSxcclxuICBnb2xkT3B0aW9ucyxcclxuICBzdGFydFRvdGFsTW9uZXlUaXRsZVgsXHJcbiAgc3RhcnRUb3RhbE1vbmV5VGl0bGVZXHJcbn0gZnJvbSAnLi4vLi4vaW5mb1NldHRpbmdzJztcclxuaW1wb3J0IHtcclxuICBtYWluTWVudUN0eFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtcclxuICBzZXRUb3RhbEdvbGRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG4vL2ltcG9ydCB7ZGlzcGxheVRpdGxlfSBmcm9tICcuLi8uLi90aXRsZSc7XHJcbmltcG9ydCB7ZGlzcGxheVRpdGxlfSBmcm9tICcuLi8uLi8uLi91cHBlckxheW91dCc7XHJcbmltcG9ydCB7ZHJhd01vbmV5Qm94fSBmcm9tICcuLi9tb25leUJveCc7XHJcbmltcG9ydCB7aXNTdGFydEJhdHRsZUF2YWlsYWJsZX0gZnJvbSAnLi4vLi4vLi4vYm90dG9tTGF5b3V0L2J1dHRvbic7XHJcblxyXG5leHBvcnQgbGV0IGdvbGRCb3hlczphbnlbXSA9IFtdO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNoYW5nZVRvdGFsR29sZCA9IChtb3VzZVg6bnVtYmVyLCBtb3VzZVk6bnVtYmVyKSA9PiB7XHJcbiAgZm9yKGxldCBib3ggb2YgZ29sZEJveGVzKSB7XHJcbiAgICBpZihtb3VzZVggPj0gYm94LnggJiYgbW91c2VYIDwgYm94LnggKyBib3hXaWR0aCAmJiBtb3VzZVkgPj0gYm94LnkgJiYgbW91c2VZIDwgYm94LnkgKyBib3hIZWlnaHQpIHtcclxuICAgICAgc2V0VG90YWxHb2xkKGJveC5nb2xkKTtcclxuICAgICAgc2hvd1RvdGFsR29sZCgpO1xyXG4gICAgICBkaXNwbGF5VGl0bGUoKTsgLy8gcmVkcmF3IHRvdGFsR29sZCBpbiB0aGUgdGl0bGVDb21wb25lbnRcclxuICAgICAgaXNTdGFydEJhdHRsZUF2YWlsYWJsZSgpOyAvLyBjaGVjayBpZiBzdGFydEJhdHRsZUF2YWlsYWJsZVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGZpbGxUb3RhbEdvbGQgPSAoKSA9PiB7XHJcbiAgZ29sZEJveGVzID0gW107XHJcbiAgbGV0IHggPSBnb2xkQm94U3RhcnRYO1xyXG4gIGxldCB5ID0gZ29sZEJveFN0YXJ0WTtcclxuICBmb3IobGV0IGdvbGQgb2YgZ29sZE9wdGlvbnMpIHtcclxuICAgIGdvbGRCb3hlcy5wdXNoKHtcclxuICAgICAgeCxcclxuICAgICAgeSxcclxuICAgICAgZ29sZFxyXG4gICAgfSk7XHJcbiAgICB4ICs9IGJveFdpZHRoICsgNTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBzaG93VG90YWxHb2xkID0gKCkgPT4ge1xyXG4gIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICcjMDAwJztcclxuICBtYWluTWVudUN0eC5mb250ID0gJzI0cHggc2VyaWYnO1xyXG4gIG1haW5NZW51Q3R4LnRleHRBbGlnbiA9ICdsZWZ0JztcclxuICBtYWluTWVudUN0eC5maWxsVGV4dCgnVG90YWwgTW9uZXk6Jywgc3RhcnRUb3RhbE1vbmV5VGl0bGVYLCBzdGFydFRvdGFsTW9uZXlUaXRsZVkpO1xyXG4gIG1haW5NZW51Q3R4LmZvbnQgPSAnMTJweCBzZXJpZic7XHJcbiAgZmlsbFRvdGFsR29sZCgpO1xyXG4gIGZvcihsZXQgYm94IG9mIGdvbGRCb3hlcykge1xyXG4gICAgZHJhd01vbmV5Qm94KGJveC54LCBib3gueSwgYm94LmdvbGQpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIG9uQ2hvb3NlQ29tcHV0ZXJcclxufSBmcm9tICcuL29uQ2hvb3NlQ29tcHV0ZXInO1xyXG5pbXBvcnQge1xyXG4gIG9uQ2hvb3NlUGxheWVyXHJcbn0gZnJvbSAnLi9vbkNob29zZVBsYXllcic7XHJcblxyXG5leHBvcnQge1xyXG4gIG9uQ2hvb3NlQ29tcHV0ZXIsXHJcbiAgb25DaG9vc2VQbGF5ZXJcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGNvbXB1dGVyU3dpdGNoZXJYMCxcclxuICBjb21wdXRlclN3aXRjaGVyWDEsXHJcbiAgY29tcHV0ZXJTd2l0Y2hlclkwLFxyXG4gIGNvbXB1dGVyU3dpdGNoZXJZMVxyXG59IGZyb20gJy4uL3VwcGVyTGF5b3V0U2V0dGluZ3MnO1xyXG5pbXBvcnQge1xyXG4gIGNoYW5nZVRvQ29tcHV0ZXJcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc2lkZXMvc2lkZSc7XHJcbmltcG9ydCB7XHJcbiAgZGlzcGxheUNvbXB1dGVyLFxyXG4gIGRpc3BsYXlUaXRsZVxyXG59IGZyb20gJy4uL2Rpc3BsYXknO1xyXG5cclxuaW1wb3J0IHtkaXNwbGF5Q2hvc2VuVW5pdHN9IGZyb20gJy4uLy4uJztcclxuXHJcbmV4cG9ydCBjb25zdCBvbkNob29zZUNvbXB1dGVyID0gKG1vdXNlWDpudW1iZXIsIG1vdXNlWTpudW1iZXIpID0+IHtcclxuICBpZihtb3VzZVggPj0gY29tcHV0ZXJTd2l0Y2hlclgwICYmIG1vdXNlWCA8IGNvbXB1dGVyU3dpdGNoZXJYMSAmJiBtb3VzZVkgPj0gY29tcHV0ZXJTd2l0Y2hlclkwICYmIG1vdXNlWSA8IGNvbXB1dGVyU3dpdGNoZXJZMSkge1xyXG4gICAgY2hhbmdlVG9Db21wdXRlcigpO1xyXG4gICAgZGlzcGxheUNob3NlblVuaXRzKCk7XHJcbiAgICBkaXNwbGF5Q29tcHV0ZXIoKTtcclxuICAgIGRpc3BsYXlUaXRsZSgpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGFybXlMYXlvdXRXaWR0aCxcclxuICB0aXRsZUhlaWdodFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcblxyXG5leHBvcnQgbGV0IHBsYXllclN3aXRjaGVyWDAgPSBhcm15TGF5b3V0V2lkdGg7XHJcbmV4cG9ydCBsZXQgcGxheWVyU3dpdGNoZXJYMSA9IGFybXlMYXlvdXRXaWR0aCArIChhcm15TGF5b3V0V2lkdGggLyAyKTtcclxuZXhwb3J0IGxldCBwbGF5ZXJTd2l0Y2hlclkwID0gMFxyXG5leHBvcnQgbGV0IHBsYXllclN3aXRjaGVyWTEgPSB0aXRsZUhlaWdodCAvIDI7XHJcblxyXG5leHBvcnQgbGV0IGNvbXB1dGVyU3dpdGNoZXJYMCA9IHBsYXllclN3aXRjaGVyWDE7XHJcbmV4cG9ydCBsZXQgY29tcHV0ZXJTd2l0Y2hlclgxID0gY29tcHV0ZXJTd2l0Y2hlclgwICsgKGFybXlMYXlvdXRXaWR0aCAvIDIpO1xyXG5leHBvcnQgbGV0IGNvbXB1dGVyU3dpdGNoZXJZMCA9IDA7XHJcbmV4cG9ydCBsZXQgY29tcHV0ZXJTd2l0Y2hlclkxID0gdGl0bGVIZWlnaHQgLyAyO1xyXG5cclxuZXhwb3J0IGxldCBwbGF5ZXJTd2l0Y2hlcldpZHRoID0gYXJteUxheW91dFdpZHRoIC8gMjtcclxuZXhwb3J0IGxldCBjb21wdXRlclN3aXRjaGVyV2lkdGggPSBhcm15TGF5b3V0V2lkdGggLyAyO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdvbGRYOm51bWJlciA9IHBsYXllclN3aXRjaGVyWDAgKyBwbGF5ZXJTd2l0Y2hlcldpZHRoO1xyXG5leHBvcnQgY29uc3QgZ29sZFk6bnVtYmVyID0gKHRpdGxlSGVpZ2h0IC8gMikgKyAyNTtcclxuIiwiaW1wb3J0IHtcclxuICBhcm15TGF5b3V0V2lkdGgsXHJcbiAgdGl0bGVIZWlnaHQsXHJcbiAgdW5pdFJvc3RlcldpZHRoXHJcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL21haW5NZW51JztcclxuaW1wb3J0IHttYWluTWVudUN0eH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQge3NpZGV9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudS9zaWRlcy9zaWRlJztcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5Q29tcHV0ZXIgPSAoKSA9PiB7XHJcbiAgbGV0IGNvbG9yOnN0cmluZyA9ICcjY2NjJztcclxuICBpZihzaWRlID09PSAnY29tcHV0ZXInKSBjb2xvciA9ICcjZmZmJztcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSBjb2xvcjtcclxuICBtYWluTWVudUN0eC5maWxsUmVjdCh1bml0Um9zdGVyV2lkdGggKyAoYXJteUxheW91dFdpZHRoIC8gMiksIDAsIChhcm15TGF5b3V0V2lkdGggLyAyKSwgKHRpdGxlSGVpZ2h0IC8gMikpO1xyXG4gIG1haW5NZW51Q3R4LnN0cm9rZVJlY3QodW5pdFJvc3RlcldpZHRoICsgKGFybXlMYXlvdXRXaWR0aCAvIDIpLCAwLCAoYXJteUxheW91dFdpZHRoIC8gMiksICh0aXRsZUhlaWdodCAvIDIpKTtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAgJyMwMDAnO1xyXG4gIG1haW5NZW51Q3R4LmZvbnQgPSAnMjhweCBzZXJpZic7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFRleHQoJ0NvbXB1dGVyJywgYXJteUxheW91dFdpZHRoICsgMzYwLCAodGl0bGVIZWlnaHQgLyAyKSAtIDEwKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGFybXlMYXlvdXRXaWR0aCxcclxuICB0aXRsZUhlaWdodCxcclxuICB1bml0Um9zdGVyV2lkdGhcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge21haW5NZW51Q3R4fSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7c2lkZX0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL21haW5NZW51L3NpZGVzL3NpZGUnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc3BsYXlQbGF5ZXIgPSAoKSA9PiB7XHJcbiAgbGV0IGNvbG9yOnN0cmluZyA9ICcjY2NjJztcclxuICBpZihzaWRlID09PSAncGxheWVyJykgY29sb3IgPSAnI2ZmZic7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gY29sb3I7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFJlY3QodW5pdFJvc3RlcldpZHRoLCAwLCAoYXJteUxheW91dFdpZHRoIC8gMiksICh0aXRsZUhlaWdodCAvIDIpKTtcclxuICBtYWluTWVudUN0eC5zdHJva2VSZWN0KHVuaXRSb3N0ZXJXaWR0aCwgMCwgKGFybXlMYXlvdXRXaWR0aCAvIDIpLCAodGl0bGVIZWlnaHQgLyAyKSk7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gICcjMDAwJztcclxuICBtYWluTWVudUN0eC5mb250ID0gJzI4cHggc2VyaWYnO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxUZXh0KCdQbGF5ZXInLCBhcm15TGF5b3V0V2lkdGggKyAxMjAsICh0aXRsZUhlaWdodCAvIDIpIC0gMTApO1xyXG59XHJcbiIsImltcG9ydCB7bWFpbk1lbnVDdHh9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtzaWRlfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc2lkZXMvc2lkZSc7XHJcbmltcG9ydCB7XHJcbiAgY29tcHV0ZXJTcGVudEdvbGQsXHJcbiAgcGxheWVyU3BlbnRHb2xkXHJcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL21haW5NZW51L2dvbGQvc3BlbnRHb2xkJztcclxuaW1wb3J0IHt0b3RhbEdvbGR9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudS9nb2xkL3RvdGFsR29sZCc7XHJcbmltcG9ydCB7XHJcbiAgZ29sZFgsXHJcbiAgZ29sZFlcclxufSBmcm9tICcuLi91cHBlckxheW91dFNldHRpbmdzJztcclxuXHJcbmV4cG9ydCBjb25zdCBkaXNwbGF5UmVtYWluR29sZCA9ICgpID0+IHtcclxuICBsZXQgc3BlbmRlZEdvbGQ6bnVtYmVyO1xyXG4gIGlmKHNpZGUgPT09ICdjb21wdXRlcicpIHtcclxuICAgIHNwZW5kZWRHb2xkID0gY29tcHV0ZXJTcGVudEdvbGQ7XHJcbiAgfVxyXG4gIGVsc2UgaWYoc2lkZSA9PT0gJ3BsYXllcicpIHtcclxuICAgIHNwZW5kZWRHb2xkID0gcGxheWVyU3BlbnRHb2xkO1xyXG4gIH1cclxuICBpZihzcGVuZGVkR29sZCA+IHRvdGFsR29sZCkge1xyXG4gICAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gJ3JlZCc7XHJcbiAgfSBlbHNlIHtcclxuICAgIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICcjY2RkMWQ2JztcclxuICB9XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICcyNHB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC5maWxsVGV4dChzcGVuZGVkR29sZCArICcvJyArIHRvdGFsR29sZCwgZ29sZFgsIGdvbGRZKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIGRpc3BsYXlDb21wdXRlcixcclxuICBkaXNwbGF5UGxheWVyLFxyXG4gIGRpc3BsYXlSZW1haW5Hb2xkXHJcbn0gZnJvbSAnLic7XHJcbmltcG9ydCB7XHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge1xyXG4gIE1BUF9XSURUSFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7bWFpbk1lbnVDdHh9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtzaWRlfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc2lkZXMvc2lkZSc7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheVRpdGxlID0gKCkgPT4ge1xyXG4gIG1haW5NZW51Q3R4LmNsZWFyUmVjdCgwLDAsIE1BUF9XSURUSCwgdGl0bGVIZWlnaHQpO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9ICAnIzJjMmYzMyc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFJlY3QoMCwgMCwgTUFQX1dJRFRILCB0aXRsZUhlaWdodClcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnI2NkZDFkNic7XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICczOHB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnY2VudGVyJztcclxuICBkaXNwbGF5UGxheWVyKCk7XHJcbiAgZGlzcGxheUNvbXB1dGVyKCk7XHJcbiAgZGlzcGxheVJlbWFpbkdvbGQoKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIHBsYXllclN3aXRjaGVyWDEsXHJcbiAgcGxheWVyU3dpdGNoZXJZMCxcclxuICBwbGF5ZXJTd2l0Y2hlclkxXHJcbn0gZnJvbSAnLi4vdXBwZXJMYXlvdXRTZXR0aW5ncyc7XHJcbmltcG9ydCB7XHJcbiAgY2hhbmdlVG9QbGF5ZXJcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc2lkZXMvc2lkZSc7XHJcbmltcG9ydCB7XHJcbiAgZGlzcGxheVBsYXllcixcclxuICBkaXNwbGF5VGl0bGVcclxufSBmcm9tICcuLi9kaXNwbGF5JztcclxuaW1wb3J0IHtcclxuICB1bml0Um9zdGVyV2lkdGhcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge2Rpc3BsYXlDaG9zZW5Vbml0c30gZnJvbSAnLi4vLi4nO1xyXG5cclxuZXhwb3J0IGNvbnN0IG9uQ2hvb3NlUGxheWVyID0gKG1vdXNlWDpudW1iZXIsIG1vdXNlWTpudW1iZXIpID0+IHtcclxuICBpZihtb3VzZVggPj0gdW5pdFJvc3RlcldpZHRoICYmIG1vdXNlWCA8IHBsYXllclN3aXRjaGVyWDEgJiYgbW91c2VZID49IHBsYXllclN3aXRjaGVyWTAgJiYgbW91c2VZIDwgcGxheWVyU3dpdGNoZXJZMSkge1xyXG4gICAgY2hhbmdlVG9QbGF5ZXIoKTtcclxuICAgIGRpc3BsYXlDaG9zZW5Vbml0cygpO1xyXG4gICAgZGlzcGxheVBsYXllcigpO1xyXG4gICAgZGlzcGxheVRpdGxlKCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgcGxheWVyQXJteSxcclxuICBjb21wdXRlckFybXlcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9zdG9yZS9yb3N0ZXIvYXJteSc7XHJcbmltcG9ydCB7XHJcbiAgY29tcHV0ZXJTcGVudEdvbGQsXHJcbiAgcGxheWVyU3BlbnRHb2xkLFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudS9nb2xkL3NwZW50R29sZCc7XHJcbmltcG9ydCB7dG90YWxHb2xkfSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvZ29sZC90b3RhbEdvbGQnO1xyXG5pbXBvcnQge1xyXG4gIGRpc2FibGVTdGFydEJhdHRsZUJ1dHRvbixcclxuICBlbmFibGVTdGFydEJhdHRsZUJ1dHRvblxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcbmltcG9ydCB7XHJcbiAgZHJhd0JvdHRvbUxheW91dFxyXG59IGZyb20gJy4uL2xheW91dCc7XHJcbi8qXHJcbiAgQ2hlY2tzIHRvdGFsIHBsYXllciBhbmQgY29tcHV0ZXIgdW5pdHMgYW5kIHNwZW5kZWQgZ29sZFxyXG4gIGFuZCBkZWNpZGUgaWYgYmF0dGxlIGNhbiBzdGFydCBvciBub3RcclxuKi9cclxuZXhwb3J0IGNvbnN0IGlzU3RhcnRCYXR0bGVBdmFpbGFibGUgPSAoKSA9PiB7XHJcbiAgbGV0IGNvbXB1dGVyVW5pdHNOdW1iZXI6bnVtYmVyID0gY29tcHV0ZXJBcm15Lmxlbmd0aDtcclxuICBsZXQgcGxheWVyVW5pdHNOdW1iZXI6bnVtYmVyID0gcGxheWVyQXJteS5sZW5ndGg7XHJcbiAgbGV0IGNvbXB1dGVyUmVtYWluR29sZDpudW1iZXIgPSB0b3RhbEdvbGQgLSBjb21wdXRlclNwZW50R29sZDtcclxuICBsZXQgcGxheWVyUmVtYWluR29sZDpudW1iZXIgPSB0b3RhbEdvbGQgLSBwbGF5ZXJTcGVudEdvbGQ7XHJcbiAgaWYoY29tcHV0ZXJVbml0c051bWJlciA8IDEgfHwgcGxheWVyVW5pdHNOdW1iZXIgPCAxKSB7XHJcbiAgICAvLyBjb21wdXRlciBvcihhbmQpIHBsYXllciBkb24ndCBoYXZlIHVuaXRzXHJcbiAgICBkaXNhYmxlU3RhcnRCYXR0bGVCdXR0b24oKTtcclxuICAgIGRyYXdCb3R0b21MYXlvdXQoKTsgLy8gcmVkcmF3IHN0YXJ0QmF0dGxlIGxheW91dFxyXG4gIH1cclxuICBlbHNlIGlmKGNvbXB1dGVyUmVtYWluR29sZCA8IDAgfHwgcGxheWVyUmVtYWluR29sZCA8IDApIHtcclxuICAgIC8vIGNvbXB1dGVyIG9yKGFuZCBwbGF5ZXIpIGV4Y2VlZCB0b3RhbCBhdmFpbGFibGUgZ29sZFxyXG4gICAgZGlzYWJsZVN0YXJ0QmF0dGxlQnV0dG9uKCk7XHJcbiAgICBkcmF3Qm90dG9tTGF5b3V0KCk7IC8vIHJlZHJhdyBzdGFydEJhdHRsZSBsYXlvdXRcclxuICB9XHJcbiAgZWxzZSB7XHJcbiAgICBlbmFibGVTdGFydEJhdHRsZUJ1dHRvbigpO1xyXG4gICAgZHJhd0JvdHRvbUxheW91dCgpOyAvLyByZWRyYXcgc3RhcnRCYXR0bGUgbGF5b3V0XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7ZmlsbExheW91dH0gZnJvbSAnLi9maWxsTGF5b3V0JztcclxuaW1wb3J0IHtzaG93U3RhcnRCYXR0bGVCdXR0b259IGZyb20gJy4uL2J1dHRvbic7XHJcbmltcG9ydCB7c2hvd1RleHR9IGZyb20gJy4uL2J1dHRvbic7XHJcblxyXG5leHBvcnQgY29uc3QgZHJhd0JvdHRvbUxheW91dCA9ICgpID0+IHtcclxuICBmaWxsTGF5b3V0KCk7XHJcbiAgc2hvd1N0YXJ0QmF0dGxlQnV0dG9uKCk7XHJcbiAgc2hvd1RleHQoKTtcclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uWCxcclxuICBzdGFydEJhdHRsZUJ1dHRvbldpZHRoLFxyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uWSxcclxuICBzdGFydEJhdHRsZUJ1dHRvbkhlaWdodFxyXG59IGZyb20gJy4uL2JvdHRvbVNldHRpbmdzJztcclxuXHJcbmV4cG9ydCBjb25zdCBpc1N0YXJ0QmF0dGxlQnV0dG9uU2VsZWN0ZWQgPSAobW91c2VYOm51bWJlciwgbW91c2VZOm51bWJlcik6Ym9vbGVhbiA9PiB7XHJcbiAgbGV0IHgwID0gc3RhcnRCYXR0bGVCdXR0b25YO1xyXG4gIGxldCB4MSA9IHgwICsgc3RhcnRCYXR0bGVCdXR0b25XaWR0aDtcclxuICBsZXQgeTAgPSBzdGFydEJhdHRsZUJ1dHRvblk7XHJcbiAgbGV0IHkxID0geTAgKyBzdGFydEJhdHRsZUJ1dHRvbkhlaWdodDtcclxuICBpZihtb3VzZVggPj0geDAgJiYgbW91c2VYIDwgeDEgJiYgbW91c2VZID49IHkwICYmIG1vdXNlWSA8IHkxKSB7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbiAgcmV0dXJuIGZhbHNlO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgc3RhcnRCYXR0bGVXaWR0aCxcclxuICBzdGFydEJhdHRsZVN0YXJ0WVxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcblxyXG5leHBvcnQgbGV0IHN0YXJ0QmF0dGxlQnV0dG9uWDpudW1iZXIgPSBNYXRoLnJvdW5kKHN0YXJ0QmF0dGxlV2lkdGggLyAzKSArIDEyMDtcclxuZXhwb3J0IGxldCBzdGFydEJhdHRsZUJ1dHRvblk6bnVtYmVyID0gc3RhcnRCYXR0bGVTdGFydFkgKyAxNTtcclxuZXhwb3J0IGxldCBzdGFydEJhdHRsZUJ1dHRvbldpZHRoOm51bWJlciA9IDIwMDtcclxuZXhwb3J0IGxldCBzdGFydEJhdHRsZUJ1dHRvbkhlaWdodDpudW1iZXIgPSA0MDtcclxuZXhwb3J0IGxldCBzdGFydEJhdHRsZVRleHRYOm51bWJlciA9IHN0YXJ0QmF0dGxlQnV0dG9uWCArIDMwO1xyXG5leHBvcnQgbGV0IHN0YXJ0QmF0dGxlVGV4dFk6bnVtYmVyID0gc3RhcnRCYXR0bGVCdXR0b25ZICsgMzA7XHJcbiIsImltcG9ydCB7bWFpbk1lbnVDdHh9IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtzdGFydEJhdHRsZUF2YWlsYWJsZX0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vY29uZmlnL21haW5NZW51L3N0YXJ0QmF0dGxlL3N0YXJ0QmF0dGxlQXZhaWxhYmxlJztcclxuaW1wb3J0IHtcclxuICBzdGFydEJhdHRsZUJ1dHRvblgsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25ZLFxyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uV2lkdGgsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25IZWlnaHQsXHJcbiAgc3RhcnRCYXR0bGVUZXh0WCxcclxuICBzdGFydEJhdHRsZVRleHRZXHJcbn0gZnJvbSAnLi4vYm90dG9tU2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNob3dTdGFydEJhdHRsZUJ1dHRvbiA9ICgpID0+IHtcclxuICBsZXQgY29sb3I6c3RyaW5nO1xyXG4gIGlmKHN0YXJ0QmF0dGxlQXZhaWxhYmxlKSB7XHJcbiAgICBjb2xvciA9ICcjZmZmJztcclxuICB9IGVsc2Uge1xyXG4gICAgY29sb3IgPSAnI2NjYyc7XHJcbiAgfVxyXG4gIG1haW5NZW51Q3R4LmZpbGxTdHlsZSA9IGNvbG9yO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxSZWN0KHN0YXJ0QmF0dGxlQnV0dG9uWCwgc3RhcnRCYXR0bGVCdXR0b25ZLCBzdGFydEJhdHRsZUJ1dHRvbldpZHRoLCBzdGFydEJhdHRsZUJ1dHRvbkhlaWdodCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBzaG93VGV4dCA9ICgpID0+IHtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnIzAwMCc7XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICczMnB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFRleHQoJ1N0YXJ0IEJhdHRsZScsIHN0YXJ0QmF0dGxlVGV4dFgsIHN0YXJ0QmF0dGxlVGV4dFkpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgb25DaG9vc2VCYXR0bGVTZXR0aW5ncyxcclxuICBvbkNob29zZUluZm8sXHJcbiAgb25DaG9vc2VVbml0SW5mb1xyXG59IGZyb20gJy4vY2hvb3NlJztcclxuaW1wb3J0IHtcclxuICBkaXNwbGF5SW5mb1xyXG59IGZyb20gJy4vZGlzcGxheSc7XHJcbmltcG9ydCB7XHJcbiAgYmF0dGxlU2V0dGluZ1N3aXRjaGVyLFxyXG4gIHNob3dTd2l0aGVyLFxyXG4gIHVuaXRJbmZvU3dpdGNoZXJcclxufSBmcm9tICcuL3N3aXRjaGVyJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgb25DaG9vc2VCYXR0bGVTZXR0aW5ncyxcclxuICBvbkNob29zZUluZm8sXHJcbiAgb25DaG9vc2VVbml0SW5mbyxcclxuICBkaXNwbGF5SW5mbyxcclxuICBiYXR0bGVTZXR0aW5nU3dpdGNoZXIsXHJcbiAgc2hvd1N3aXRoZXIsXHJcbiAgdW5pdEluZm9Td2l0Y2hlclxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgb25DaG9vc2VCYXR0bGVTZXR0aW5nc1xyXG59IGZyb20gJy4vYmF0dGxlU2V0dGluZ3MnO1xyXG5pbXBvcnQge1xyXG4gIG9uQ2hvb3NlSW5mb1xyXG59IGZyb20gJy4vaW5mbyc7XHJcbmltcG9ydCB7XHJcbiAgb25DaG9vc2VVbml0SW5mb1xyXG59IGZyb20gJy4vdW5pdEluZm8nO1xyXG5cclxuZXhwb3J0IHtcclxuICBvbkNob29zZUJhdHRsZVNldHRpbmdzLFxyXG4gIG9uQ2hvb3NlSW5mbyxcclxuICBvbkNob29zZVVuaXRJbmZvXHJcbn1cclxuIiwiaW1wb3J0IHtvbkNob29zZUJhdHRsZVNldHRpbmdzfSBmcm9tICcuL2JhdHRsZVNldHRpbmdzJztcclxuaW1wb3J0IHtcclxuICBjaGFuZ2VCYXR0bGVTZXR0aW5nc1RvVHJ1ZSxcclxuICBjaGFuZ2VVbml0SW5mb1RvVHJ1ZVxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9tYWluTWVudSc7XHJcbmltcG9ydCB7b25DaG9vc2VVbml0SW5mb30gZnJvbSAnLi91bml0SW5mbyc7XHJcbmltcG9ydCB7ZGlzcGxheUluZm99IGZyb20gJy4uL2Rpc3BsYXknO1xyXG5cclxuZXhwb3J0IGNvbnN0IG9uQ2hvb3NlSW5mbyA9ICh4Om51bWJlciwgeTpudW1iZXIpID0+IHtcclxuICBpZihvbkNob29zZUJhdHRsZVNldHRpbmdzKHgseSkpIHtcclxuICAgIGNoYW5nZUJhdHRsZVNldHRpbmdzVG9UcnVlKCk7XHJcbiAgICBkaXNwbGF5SW5mbygpOyAvLyByZWRyYXcgaW5mb1xyXG4gIH1cclxuICBpZihvbkNob29zZVVuaXRJbmZvKHgseSkpIHtcclxuICAgIGNoYW5nZVVuaXRJbmZvVG9UcnVlKCk7XHJcbiAgICBkaXNwbGF5SW5mbygpOyAvLyByZWRyYXcgaW5mb1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQge1xyXG4gIG1haW5NZW51Q3R4XHJcbn0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5pbXBvcnQge1xyXG4gIGFybXlMYXlvdXRXaWR0aCxcclxuICB1bml0Um9zdGVyV2lkdGgsXHJcbiAgdGl0bGVIZWlnaHQsXHJcbiAgaW5mb0xheW91dFdpZHRoLFxyXG4gIGluZm9MYXlvdXRIZWlnaHRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge3Nob3dTd2l0aGVyfSBmcm9tICcuLi9zd2l0Y2hlcic7XHJcblxyXG5leHBvcnQgY29uc3QgZGlzcGxheUluZm8gPSAoKSA9PiB7XHJcbiAgbWFpbk1lbnVDdHguY2xlYXJSZWN0KGFybXlMYXlvdXRXaWR0aCArIHVuaXRSb3N0ZXJXaWR0aCwgdGl0bGVIZWlnaHQsIGluZm9MYXlvdXRXaWR0aCwgaW5mb0xheW91dEhlaWdodCk7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFN0eWxlID0gJyNjZGQxZDYnO1xyXG4gIG1haW5NZW51Q3R4LmZpbGxSZWN0KGFybXlMYXlvdXRXaWR0aCArIHVuaXRSb3N0ZXJXaWR0aCwgdGl0bGVIZWlnaHQsIGluZm9MYXlvdXRXaWR0aCwgaW5mb0xheW91dEhlaWdodCk7XHJcbiAgc2hvd1N3aXRoZXIoKTtcclxufVxyXG4iLCJpbXBvcnQge2JhdHRsZVNldHRpbmdTd2l0Y2hlcn0gZnJvbSAnLi9iYXR0bGVTZXR0aW5nU3dpdGNoZXInO1xyXG5pbXBvcnQge3VuaXRJbmZvU3dpdGNoZXJ9IGZyb20gJy4vdW5pdEluZm9Td2l0Y2hlcic7XHJcbmltcG9ydCB7dW5pdEluZm99IGZyb20gJy4uLy4uL3VuaXRJbmZvJztcclxuaW1wb3J0IHtcclxuICBzaG93QmF0dGxlU2V0dGluZ3NcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc2hvdy9zaG93SW5mbyc7XHJcbmltcG9ydCB7c2hvd1RvdGFsR29sZH0gZnJvbSAnLi4vLi4vYmF0dGxlSW5mby90b3RhbEdvbGQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNob3dTd2l0aGVyID0gKCkgPT4ge1xyXG4gIGJhdHRsZVNldHRpbmdTd2l0Y2hlcigpO1xyXG4gIHVuaXRJbmZvU3dpdGNoZXIoKTtcclxuICBpZihzaG93QmF0dGxlU2V0dGluZ3MpIHtcclxuICAgIHNob3dUb3RhbEdvbGQoKTtcclxuICB9IGVsc2Uge1xyXG4gICAgdW5pdEluZm8oKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICB1bml0SW5mbyxcclxuICBkaXNwbGF5VW5pdEluZm9cclxufSBmcm9tICcuL3VuaXRJbmZvJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgdW5pdEluZm8sXHJcbiAgZGlzcGxheVVuaXRJbmZvXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBtYWluTWVudUN0eFxyXG59IGZyb20gJy4uLy4uLy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtcclxuICBwcm9wZXJ0eVN0YXJ0WCxcclxuICBwcm9wZXJ0eVN0YXJ0WSxcclxuICB2YWx1ZVN0YXJ0WCxcclxuICB2YWx1ZVN0YXJ0WVxyXG59IGZyb20gJy4uL2luZm9TZXR0aW5ncy9pbmZvU2V0dGluZ3MnO1xyXG5pbXBvcnQge1xyXG4gIGNoYW5nZVksXHJcbiAgc2V0RGVmYXVsdFxyXG59IGZyb20gJy4uL2luZm9TZXR0aW5ncy9pbmZvU2V0dGluZ3MnO1xyXG5pbXBvcnQge1xyXG4gIGFybXlMYXlvdXRXaWR0aCxcclxuICB1bml0Um9zdGVyV2lkdGgsXHJcbiAgdGl0bGVIZWlnaHRcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge2hvdmVyZWRVbml0fSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvdW5pdC9ob3ZlcmVkVW5pdCc7XHJcbmltcG9ydCB7ZGlzcGxheVRpdGxlfSBmcm9tICcuLi90aXRsZSc7XHJcblxyXG5jb25zdCBwcm9wZXJ0eUxpc3QgPSBbXHJcbiAgJ25hbWUnLCAnY29zdCcsICd0eXBlJywgJ2hlYWx0aCcsICdzcGVlZCcsICdhcm1vdXInLCAncmFuZ2UnLFxyXG4gICdtb2JpbGl0eScsICdtZWxlZURhbWFnZScsICdtaXNzaWxlRGFtYWdlJywgJ2NoYXJnZScsICd2aXNpYmlsaXR5J1xyXG5dXHJcblxyXG5leHBvcnQgY29uc3QgdW5pdEluZm8gPSAoKSA9PiB7XHJcbiAgZGlzcGxheVRpdGxlKCk7XHJcbiAgZGlzcGxheVVuaXRJbmZvKGhvdmVyZWRVbml0KTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGRpc3BsYXlVbml0SW5mbyA9ICh1bml0OmFueSkgPT4ge1xyXG4gIHNldERlZmF1bHQoKTtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnIzAwMCc7XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICcyNHB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcbiAgaWYoaG92ZXJlZFVuaXQpIHtcclxuICAgIGZvcihsZXQgcHJvcGVydHkgb2YgcHJvcGVydHlMaXN0KSB7XHJcbiAgICAgIG1haW5NZW51Q3R4LmZpbGxUZXh0KHByb3BlcnR5LCBwcm9wZXJ0eVN0YXJ0WCwgcHJvcGVydHlTdGFydFkpO1xyXG4gICAgICBtYWluTWVudUN0eC5maWxsVGV4dCh1bml0W3Byb3BlcnR5XSwgdmFsdWVTdGFydFgsIHZhbHVlU3RhcnRZKTtcclxuICAgICAgY2hhbmdlWSgpO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICAgIG1haW5NZW51Q3R4LmZpbGxUZXh0KCdObyB1bml0IHNlbGVjdGVkJywgcHJvcGVydHlTdGFydFgsIHByb3BlcnR5U3RhcnRZKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBkaXNwbGF5VGl0bGVcclxufSBmcm9tICcuL2Rpc3BsYXlUaXRsZSc7XHJcblxyXG5leHBvcnQge1xyXG4gIGRpc3BsYXlUaXRsZVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgbWFpbk1lbnVDdHgsXHJcbiAgZHJhZ0FuZERyb3BDYW52YXNDdHhcclxufSBmcm9tICcuLi8uLi8uLi8uLi8uLi9jb25maWcvY29udGV4dCc7XHJcbmltcG9ydCB7XHJcbiAgdW5pdEluZm9UaXRsZVgsXHJcbiAgdW5pdEluZm9UaXRsZVlcclxufSBmcm9tICcuLi9pbmZvU2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRpc3BsYXlUaXRsZSA9ICgpID0+IHtcclxuICBtYWluTWVudUN0eC5maWxsU3R5bGUgPSAnIzAwMCc7XHJcbiAgbWFpbk1lbnVDdHguZm9udCA9ICcyNHB4IHNlcmlmJztcclxuICBtYWluTWVudUN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcbiAgbWFpbk1lbnVDdHguZmlsbFRleHQoJ1VuaXQgSW5mbzonLCB1bml0SW5mb1RpdGxlWCwgdW5pdEluZm9UaXRsZVkpO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZHJhZ0FuZERyb3BcclxufSBmcm9tICcuL21haW4nO1xyXG5cclxuZXhwb3J0IHtcclxuICBkcmFnQW5kRHJvcFxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgZHJhZ0FuZERyb3BDYW52YXNcclxufSBmcm9tICcuLi8uLi8uLi9jb25maWcvY2FudmFzJztcclxuaW1wb3J0IHtcclxuICBkcmFnQW5kRHJvcENhbnZhc0N0eFxyXG59IGZyb20gJy4uLy4uLy4uL2NvbmZpZy9jb250ZXh0JztcclxuaW1wb3J0IHtcclxuICBkZWNyZWFzZVNwZW50R29sZCxcclxuICBpbmNyZWFzZVNwZW50R29sZCxcclxuICBjaGFuZ2VVbml0SW5mb1RvVHJ1ZSxcclxuICBjaGFuZ2VIb3ZlcmVkVW5pdCxcclxuICBzaG93VW5pdEluZm8sXHJcbiAgaG92ZXJlZFVuaXRcclxufSBmcm9tICcuLi8uLi8uLi9jb25maWcvbWFpbk1lbnUnO1xyXG5pbXBvcnQge3N0YXJ0QmF0dGxlQXZhaWxhYmxlfSBmcm9tICcuLi8uLi8uLi9jb25maWcvbWFpbk1lbnUvc3RhcnRCYXR0bGUvc3RhcnRCYXR0bGVBdmFpbGFibGUnO1xyXG5pbXBvcnQge1xyXG4gIGFkZFVuaXRUb0FybXksXHJcbiAgcmVtb3ZlVW5pdEZyb21Bcm15XHJcbn0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvcm9zdGVyL2FybXknO1xyXG5pbXBvcnQge3Jvc3Rlcn0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvcm9zdGVyL3Jvc3Rlcic7XHJcbmltcG9ydCB7c2VsZWN0VW5pdEluUm9zdGVyfSBmcm9tICcuLi8uLi8uLi9zdG9yZS9yb3N0ZXIvc2VsZWN0ZWRVbml0JztcclxuaW1wb3J0IHtzZWxlY3RlZFVuaXRJblJvc3Rlcn0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvcm9zdGVyL3NlbGVjdGVkVW5pdCc7XHJcbmltcG9ydCB7XHJcbiAgcm9zdGVySW1nV2lkdGgsXHJcbiAgcm9zdGVySW1nSGVpZ2h0XHJcbn0gZnJvbSAnLi4vbGF5b3V0cy9yb3N0ZXJMYXlvdXQvcm9zdGVyU2V0dGluZ3MnO1xyXG5pbXBvcnQge2lzVW5pdFNlbGVjdGVkSW5Sb3N0ZXJ9IGZyb20gJy4uL2xheW91dHMvcm9zdGVyTGF5b3V0L3VuaXQvaXNVbml0U2VsZWN0ZWRJblJvc3Rlcic7XHJcbmltcG9ydCB7bG9hZEltYWdlfSBmcm9tICcuLi8uLi8uLi91dGlscydcclxuaW1wb3J0IHtNQVBfV0lEVEgsIENBTlZBU19IRUlHSFR9IGZyb20gJy4uLy4uLy4uL2NvbmZpZyc7XHJcbmltcG9ydCB7XHJcbiAgb25DaG9vc2VQbGF5ZXIsXHJcbiAgb25DaG9vc2VDb21wdXRlcixcclxuICBkaXNwbGF5VGl0bGVcclxufSBmcm9tICcuLi9sYXlvdXRzL3VwcGVyTGF5b3V0JztcclxuaW1wb3J0IHtcclxuICBvbkNob29zZVVuaXRJbkFybXksXHJcbiAgYXJteUltZ1dpZHRoLFxyXG4gIGFybXlJbWdIZWlnaHQsXHJcbiAgZGlzcGxheUNob3NlblVuaXRzLFxyXG59IGZyb20gJy4uL2xheW91dHMvYXJteUxheW91dCc7XHJcbmltcG9ydCB7aXNVbml0U2hvdWxkQmVSZW1vdmVkfSBmcm9tICcuLi9sYXlvdXRzL2FybXlMYXlvdXQvcmVtb3ZlL3JlbW92ZVVuaXQnO1xyXG5pbXBvcnQge2VtcHR5Qm94fSBmcm9tICcuLi9sYXlvdXRzL2FybXlMYXlvdXQvYXJteS9kaXNwbGF5QXJteSdcclxuaW1wb3J0IHtcclxuICBvbkNob29zZUluZm8sXHJcbiAgZGlzcGxheUluZm9cclxufSBmcm9tICcuLi9sYXlvdXRzL2luZm9MYXlvdXQnO1xyXG5pbXBvcnQge2NoYW5nZVRvdGFsR29sZH0gZnJvbSAnLi4vbGF5b3V0cy9pbmZvTGF5b3V0JztcclxuaW1wb3J0IHtcclxuICBpc1N0YXJ0QmF0dGxlQXZhaWxhYmxlLFxyXG4gIGlzU3RhcnRCYXR0bGVCdXR0b25TZWxlY3RlZFxyXG59IGZyb20gJy4uL2xheW91dHMvYm90dG9tTGF5b3V0L2J1dHRvbic7XHJcbmltcG9ydCB7YWN0aXZhdGVCYXR0bGVNb2RlfSBmcm9tICcuLi8uLi8uLi9sYXVuY2gnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGRyYWdBbmREcm9wID0gKCkgPT4ge1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGU6YW55KSA9PiB7XHJcbiAgICBsZXQgeCA9IGUub2Zmc2V0WDsgLy8gZ2V0IFhcclxuICAgIGxldCB5ID0gZS5vZmZzZXRZOyAvLyBnZXQgWVxyXG4gICAgY2hhbmdlVG90YWxHb2xkKHgseSk7IC8vIHRlc3RcclxuICAgIG9uQ2hvb3NlSW5mbyh4LHkpO1xyXG4gICAgb25DaG9vc2VQbGF5ZXIoeCwgeSk7XHJcbiAgICBvbkNob29zZUNvbXB1dGVyKHgsIHkpO1xyXG4gICAgaWYoaXNVbml0U2hvdWxkQmVSZW1vdmVkKHgseSkpIHtcclxuICAgICAgbGV0IHVuaXQgPSBpc1VuaXRTaG91bGRCZVJlbW92ZWQoeCwgeSk7XHJcbiAgICAgIGRlY3JlYXNlU3BlbnRHb2xkKHVuaXQuY29zdCk7XHJcbiAgICAgIHJlbW92ZVVuaXRGcm9tQXJteSh1bml0KTtcclxuICAgICAgZGlzcGxheUNob3NlblVuaXRzKCk7XHJcbiAgICAgIGRpc3BsYXlUaXRsZSgpOyAvLyByZWRyYXcgdG90YWxHb2xkIGluIHRpdGxlXHJcbiAgICAgIGRyYWdBbmREcm9wQ2FudmFzQ3R4LmNsZWFyUmVjdCgwLDAsIE1BUF9XSURUSCwgQ0FOVkFTX0hFSUdIVCk7XHJcbiAgICAgIGlzU3RhcnRCYXR0bGVBdmFpbGFibGUoKTtcclxuICAgIH1cclxuICAgIGlmKHN0YXJ0QmF0dGxlQXZhaWxhYmxlICYmIGlzU3RhcnRCYXR0bGVCdXR0b25TZWxlY3RlZCh4LHkpKSB7XHJcbiAgICAgIGFjdGl2YXRlQmF0dGxlTW9kZSgpO1xyXG4gICAgfVxyXG4gICAgaWYoc2VsZWN0ZWRVbml0SW5Sb3N0ZXIpIHsgLy8gYWRkIHVuaXQgdG8gcm9zdGVyXHJcbiAgICAgIGlmKGlzVW5pdEFkZGVkVG9Bcm15KHgseSkpIHsgLy8gZHJhdyB1bml0IGluIGFybXkgbGlzdFxyXG4gICAgICAgIGxldCB1bml0ID0gaXNVbml0QWRkZWRUb0FybXkoeCx5KTtcclxuICAgICAgICBhZGRVbml0VG9Bcm15KHVuaXQpO1xyXG4gICAgICAgIGRpc3BsYXlDaG9zZW5Vbml0cygpO1xyXG4gICAgICAgIGluY3JlYXNlU3BlbnRHb2xkKHVuaXQuY29zdCk7XHJcbiAgICAgICAgZGlzcGxheVRpdGxlKCk7IC8vIHJlZHJhdyB0b3RhbEdvbGQgaW4gdGl0bGVcclxuICAgICAgICBkcmFnQW5kRHJvcENhbnZhc0N0eC5jbGVhclJlY3QoMCwgMCwgTUFQX1dJRFRILCBDQU5WQVNfSEVJR0hUKTsgLy8gY2xlYXIgY2FudmFzXHJcbiAgICAgICAgaXNTdGFydEJhdHRsZUF2YWlsYWJsZSgpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRpc3BsYXlDaG9zZW5Vbml0cygpO1xyXG4gICAgICAgIGRyYWdBbmREcm9wQ2FudmFzQ3R4LmNsZWFyUmVjdCgwLCAwLCBNQVBfV0lEVEgsIENBTlZBU19IRUlHSFQpOyAvLyBjbGVhciBjYW52YXNcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgb25DaG9vc2VSb3N0ZXIoeCwgeSk7XHJcbiAgfSk7XHJcblxyXG4gIGRyYWdBbmREcm9wQ2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIChlOmFueSkgPT4ge1xyXG4gICAgbGV0IHggPSBlLm9mZnNldFg7IC8vIGdldCBYXHJcbiAgICBsZXQgeSA9IGUub2Zmc2V0WTsgLy8gZ2V0IFlcclxuICAgIG9uRHJhZ1VuaXQoeCwgeSk7XHJcbiAgICBvbkNob29zZVVuaXRJbkFybXkoeCx5KTtcclxuICAgIGlmKGlzVW5pdFNlbGVjdGVkSW5Sb3N0ZXIoeCx5KSkgeyAvLyBwbGF5ZXIgaG92ZXIgdW5pdCBpbiByb3N0ZXJcclxuICAgICAgbGV0IHVuaXQgPSBpc1VuaXRTZWxlY3RlZEluUm9zdGVyKHgseSk7XHJcbiAgICAgIGlmKGhvdmVyZWRVbml0KSB7XHJcbiAgICAgICAgaWYodW5pdC54ICE9PSBob3ZlcmVkVW5pdC54ICYmIHVuaXQueSAhPT0gaG92ZXJlZFVuaXQpIHtcclxuICAgICAgICAgIGNoYW5nZUhvdmVyZWRVbml0KHVuaXQpO1xyXG4gICAgICAgICAgZGlzcGxheUluZm8oKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY2hhbmdlSG92ZXJlZFVuaXQodW5pdCk7XHJcbiAgICAgIH1cclxuICAgICAgaWYoIXNob3dVbml0SW5mbykge1xyXG4gICAgICAgIGNoYW5nZVVuaXRJbmZvVG9UcnVlKCk7IC8vIHNob3cgdW5pdCBpbmZvXHJcbiAgICAgICAgZGlzcGxheUluZm8oKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgbGV0IG9uQ2hvb3NlUm9zdGVyID0gKG1vdXNlWDpudW1iZXIsIG1vdXNlWTpudW1iZXIpID0+IHtcclxuICBsZXQgc2VsZWN0ZWRVbml0ID0gbnVsbDtcclxuICBjb25zdCB3aWR0aCA9IHJvc3RlckltZ1dpZHRoO1xyXG4gIGNvbnN0IGhlaWdodCA9IHJvc3RlckltZ0hlaWdodDtcclxuICBmb3IobGV0IHVuaXQgb2Ygcm9zdGVyKSB7XHJcbiAgICBsZXQgeCA9IHVuaXQueDtcclxuICAgIGxldCB5ID0gdW5pdC55O1xyXG4gICAgaWYobW91c2VYID49IHggJiYgbW91c2VYIDwgeCArIHdpZHRoICYmIG1vdXNlWSA+PSB5ICYmIG1vdXNlWSA8IHkgKyBoZWlnaHQpIHtcclxuICAgICAgc2VsZWN0ZWRVbml0ID0gdW5pdDtcclxuICAgIH1cclxuICB9XHJcbiAgc2VsZWN0VW5pdEluUm9zdGVyKHNlbGVjdGVkVW5pdCk7XHJcbiAgY2hhbmdlSG92ZXJlZFVuaXQoc2VsZWN0ZWRVbml0KTtcclxuICBkaXNwbGF5SW5mbygpO1xyXG59XHJcblxyXG5leHBvcnQgbGV0IG9uRHJhZ1VuaXQgPSAobW91c2VYOm51bWJlciwgbW91c2VZOm51bWJlcikgPT4ge1xyXG4gIGlmKHNlbGVjdGVkVW5pdEluUm9zdGVyKSB7XHJcbiAgICBsZXQgd2lkdGggPSByb3N0ZXJJbWdXaWR0aDtcclxuICAgIGxldCBoZWlnaHQgPSByb3N0ZXJJbWdIZWlnaHQ7XHJcbiAgICBsZXQgeCA9IG1vdXNlWCAtICh3aWR0aCAvIDIpO1xyXG4gICAgbGV0IHkgPSBtb3VzZVkgLSAoaGVpZ2h0IC8gMik7XHJcbiAgICBsb2FkSW1hZ2Uoc2VsZWN0ZWRVbml0SW5Sb3N0ZXIuaW1nU3JjLCAoZXJyOmFueSwgaW1nOmFueSkgPT4ge1xyXG4gICAgICBkcmFnQW5kRHJvcENhbnZhc0N0eC5jbGVhclJlY3QoMCwgMCwgTUFQX1dJRFRILCBDQU5WQVNfSEVJR0hUKTtcclxuICAgICAgZHJhZ0FuZERyb3BDYW52YXNDdHguZHJhd0ltYWdlKGltZywgeCwgeSwgcm9zdGVySW1nV2lkdGgsIHJvc3RlckltZ0hlaWdodCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbi8qXHJcbiAgc2hvdyBpZiBwYXJ0aWN1bGFyIHVuaXQgaGFzIGJlZW4gYWRkZWQgdG8gYXJteSxcclxuICByZXR1cm4gYm94IGlmIHVuaXQgaGFzIGJlZW4gZG93biBpbiB0aGF0IGJveCxcclxuICBpZiBubyBib3hlcyBjaG9zZW4gcmV0dXJuIG51bGxcclxuKi9cclxuZXhwb3J0IGNvbnN0IGlzVW5pdEFkZGVkVG9Bcm15ID0gKG1vdXNlWDpudW1iZXIsIG1vdXNlWTpudW1iZXIpOmFueSA9PiB7XHJcbiAgY29uc3Qgd2lkdGggPSBhcm15SW1nV2lkdGg7XHJcbiAgY29uc3QgaGVpZ2h0ID0gYXJteUltZ0hlaWdodDtcclxuICBsZXQgeCA9IGVtcHR5Qm94Lng7XHJcbiAgbGV0IHkgPSBlbXB0eUJveC55O1xyXG5cclxuICBpZighZW1wdHlCb3guZmlsbGVkICYmIChtb3VzZVggPj0geCAmJiBtb3VzZVggPCAoeCArIHdpZHRoKSAmJiBtb3VzZVkgPj0geSAmJiBtb3VzZVkgPCAoeSArIGhlaWdodCkpKSB7XHJcbiAgICByZXR1cm4gc2VsZWN0ZWRVbml0SW5Sb3N0ZXI7XHJcbiAgfVxyXG4gIHJldHVybiBudWxsO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgaXNTdGFydEJhdHRsZUF2YWlsYWJsZSxcclxuICBpc1N0YXJ0QmF0dGxlQnV0dG9uU2VsZWN0ZWQsXHJcbiAgc2hvd1N0YXJ0QmF0dGxlQnV0dG9uLFxyXG4gIHNob3dUZXh0XHJcbn0gZnJvbSAnLi9idXR0b24nO1xyXG5pbXBvcnQge1xyXG4gIGRyYXdCb3R0b21MYXlvdXQsXHJcbiAgZmlsbExheW91dFxyXG59IGZyb20gJy4vbGF5b3V0JztcclxuaW1wb3J0IHtcclxuICBzdGFydEJhdHRsZUJ1dHRvblgsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25ZLFxyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uV2lkdGgsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25IZWlnaHQsXHJcbiAgc3RhcnRCYXR0bGVUZXh0WCxcclxuICBzdGFydEJhdHRsZVRleHRZXHJcbn0gZnJvbSAnLi9ib3R0b21TZXR0aW5ncyc7XHJcblxyXG5leHBvcnQge1xyXG4gIGlzU3RhcnRCYXR0bGVBdmFpbGFibGUsXHJcbiAgaXNTdGFydEJhdHRsZUJ1dHRvblNlbGVjdGVkLFxyXG4gIHNob3dTdGFydEJhdHRsZUJ1dHRvbixcclxuICBzaG93VGV4dCxcclxuICBkcmF3Qm90dG9tTGF5b3V0LFxyXG4gIGZpbGxMYXlvdXQsXHJcbiAgc3RhcnRCYXR0bGVCdXR0b25YLFxyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uWSxcclxuICBzdGFydEJhdHRsZUJ1dHRvbldpZHRoLFxyXG4gIHN0YXJ0QmF0dGxlQnV0dG9uSGVpZ2h0LFxyXG4gIHN0YXJ0QmF0dGxlVGV4dFgsXHJcbiAgc3RhcnRCYXR0bGVUZXh0WVxyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgYWN0aXZhdGVCYXR0bGVNb2RlXHJcbn0gZnJvbSAnLi9iYXR0bGVNb2RlJztcclxuaW1wb3J0IHtcclxuICBhY3RpdmF0ZU1haW5NZW51TW9kZVxyXG59IGZyb20gJy4vbWFpbk1lbnVNb2RlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgYWN0aXZhdGVCYXR0bGVNb2RlLFxyXG4gIGFjdGl2YXRlTWFpbk1lbnVNb2RlXHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBtYWluTWVudSxcclxuICBkcmFnQW5kRHJvcENhbnZhc1xyXG59IGZyb20gJy4uLy4uL2NvbmZpZy9jYW52YXMnO1xyXG5pbXBvcnQge1xyXG4gIGNhbnZhcyxcclxuICBhdXhpbGlhcnlDYW52YXMsXHJcbiAgYmFja2dyb3VuZENhbnZhcyxcclxuICB0ZXJyYWluXHJcbn0gZnJvbSAnLi4vLi4vY29uZmlnL2NhbnZhcyc7XHJcbmltcG9ydCB7IHNldEJhdHRsZU1vZGUgfSBmcm9tICcuLi8uLi9jb25maWcnO1xyXG5pbXBvcnQgeyBsYXVuY2hHYW1lIH0gZnJvbSAnLi4nO1xyXG5pbXBvcnQgeyBjbGVhck1haW5NZW51IH0gZnJvbSAnLi4vLi4vVUkvbWFpbk1lbnUvc2V0dGluZ3MvY2xlYXJNYWluTWVudSc7XHJcbmltcG9ydCB7IGNyZWF0ZUFybXkgfSBmcm9tICcuLi8uLi9iYXR0bGUvcm9zdGVyL2FybXkvY3JlYXRlQXJteSc7XHJcbmltcG9ydCB7IGxvYWRVbml0SWNvbnMgfSBmcm9tICcuLi8uLi9zdG9yZS9pbWFnZXMvdW5pdEljb25JbWFnZXMnO1xyXG5pbXBvcnQgeyBwYXRoQ2FudmFzIH0gZnJvbSAnLi4vLi4vY29uZmlnL2NhbnZhcy9wYXRoJztcclxuaW1wb3J0IHsgZXZlbnRDYW52YXMgfSBmcm9tICcuLi8uLi9jb25maWcvY2FudmFzL2V2ZW50JztcclxuaW1wb3J0IHsgbG9hZGluZ0NhbnZhcyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jYW52YXMvbG9hZGluZyc7XHJcbmltcG9ydCB7IGRyYXdMb2FkaW5nQ2FudmFzIH0gZnJvbSAnLi4vbG9hZGluZy9kcmF3TG9hZGluZ0NhbnZhcyc7XHJcbmltcG9ydCB7IGZpbGxVbml0VG9JY29uTWFwIH0gZnJvbSAnLi4vLi4vc3RvcmUvaW1hZ2VzL3VuaXRUb0ljb25NYXAnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFjdGl2YXRlQmF0dGxlTW9kZSA9ICgpID0+IHtcclxuICBkcmF3TG9hZGluZ0NhbnZhcygpO1xyXG4gIHNldEJhdHRsZU1vZGUoKS50aGVuKCgpID0+IHtcclxuICAgIGNsZWFyTWFpbk1lbnUoKTtcclxuICAgIGZpbGxVbml0VG9JY29uTWFwKCk7XHJcbiAgICBjcmVhdGVBcm15KCkudGhlbigoKSA9PiBsb2FkVW5pdEljb25zKCkpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIGRyYWdBbmREcm9wQ2FudmFzLnN0eWxlLnpJbmRleCA9ICcwJztcclxuICAgICAgbWFpbk1lbnUuc3R5bGUuekluZGV4ID0gJzAnO1xyXG4gICAgICBhdXhpbGlhcnlDYW52YXMuc3R5bGUuekluZGV4ID0gJzYnO1xyXG4gICAgICBldmVudENhbnZhcy5zdHlsZS56SW5kZXggPSAnNSc7XHJcbiAgICAgIGNhbnZhcy5zdHlsZS56SW5kZXggPSAnNCc7XHJcbiAgICAgIHBhdGhDYW52YXMuc3R5bGUuekluZGV4ID0gJzMnO1xyXG4gICAgICB0ZXJyYWluLnN0eWxlLnpJbmRleCA9ICcyJztcclxuICAgICAgYmFja2dyb3VuZENhbnZhcy5zdHlsZS56SW5kZXggPSAnMSc7XHJcbiAgICAgIGxvYWRpbmdDYW52YXMuc3R5bGUuekluZGV4ID0gJzAnO1xyXG4gICAgICBsYXVuY2hHYW1lKClcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59XHJcbiIsImltcG9ydCB7XHJcbiAgTUFQX1dJRFRILFxyXG4gIENBTlZBU19IRUlHSFRcclxufSBmcm9tICcuLi8uLi8uLi9jb25maWcnO1xyXG5pbXBvcnQge1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzQ3R4LFxyXG4gIG1haW5NZW51Q3R4XHJcbn0gZnJvbSAnLi4vLi4vLi4vY29uZmlnL2NvbnRleHQnO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhck1haW5NZW51ID0gKCkgPT4ge1xyXG4gIG1haW5NZW51Q3R4LmNsZWFyUmVjdCgwLCAwLCBNQVBfV0lEVEgsIENBTlZBU19IRUlHSFQpO1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzQ3R4LmNsZWFyUmVjdCgwLCAwLCBNQVBfV0lEVEgsIENBTlZBU19IRUlHSFQpO1xyXG59XHJcbiIsImltcG9ydCB7IGNyZWF0ZVBsYXllckFybXkgfSBmcm9tIFwiLi9wbGF5ZXJBcm15XCI7XHJcbmltcG9ydCB7IGNyZWF0ZUNvbXB1dGVyQXJteSB9IGZyb20gXCIuL2NvbXB1dGVyQXJteVwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZUFybXkgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgY3JlYXRlUGxheWVyQXJteSgpLnRoZW4oKCkgPT4gY3JlYXRlQ29tcHV0ZXJBcm15KCkpO1xyXG4gICAgcmVzb2x2ZSgpO1xyXG4gIH0pO1xyXG59XHJcbiIsImltcG9ydCB7IHBsYXllckFybXkgfSBmcm9tICcuLi8uLi8uLi9zdG9yZS9yb3N0ZXIvYXJteSc7XHJcbmltcG9ydCB7IGRlbGV0ZU5vZGVGcm9tUGxheWVyTm9kZXMgfSBmcm9tICcuLic7XHJcbmltcG9ydCB7IGdldFJhbmRvbU5vZGUgfSBmcm9tICcuLi8uLi8uLi91dGlscy9ub2RlJztcclxuaW1wb3J0IHtcclxuICBwbGF5ZXJVbml0c05vZGVzLCBpbml0aWFsaXplUGxheWVyVW5pdHNOb2Rlc1xyXG59IGZyb20gJy4uL25vZGVzL3BsYXllck5vZGVzJztcclxuaW1wb3J0IHsgY3JlYXRlVW5pdCB9IGZyb20gJy4uLy4uLy4uL3VuaXQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNyZWF0ZVBsYXllckFybXkgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgaW5pdGlhbGl6ZVBsYXllclVuaXRzTm9kZXMoKS50aGVuKFxyXG4gICAgICAoKSA9PiB7XHJcbiAgICAgICAgZm9yKGxldCB1bml0IG9mIHBsYXllckFybXkpIHtcclxuICAgICAgICAgIGxldCBub2RlID0gZ2V0UmFuZG9tTm9kZShwbGF5ZXJVbml0c05vZGVzKTtcclxuICAgICAgICAgIGxldCB0eXBlID0gdW5pdC5uYW1lO1xyXG4gICAgICAgICAgbGV0IHggPSBub2RlLng7XHJcbiAgICAgICAgICBsZXQgeSA9IG5vZGUueTtcclxuICAgICAgICAgIGNyZWF0ZVVuaXQodHlwZSwgeCwgeSwgJ3BsYXllcicpO1xyXG4gICAgICAgICAgZGVsZXRlTm9kZUZyb21QbGF5ZXJOb2Rlcyhub2RlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICB9XHJcbiAgICApXHJcbiAgfSk7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBkZWxldGVOb2RlRnJvbUNvbXB1dGVyTm9kZXNcclxufSBmcm9tICcuL2NvbXB1dGVyTm9kZXMnO1xyXG5pbXBvcnQge1xyXG4gIGRlbGV0ZU5vZGVGcm9tUGxheWVyTm9kZXNcclxufSBmcm9tICcuL3BsYXllck5vZGVzJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgZGVsZXRlTm9kZUZyb21Db21wdXRlck5vZGVzLFxyXG4gIGRlbGV0ZU5vZGVGcm9tUGxheWVyTm9kZXMsXHJcbn1cclxuIiwiaW1wb3J0IHsgY29tcHV0ZXJBcm15IH0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvcm9zdGVyL2FybXknO1xyXG5pbXBvcnQgeyBkZWxldGVOb2RlRnJvbUNvbXB1dGVyTm9kZXMgfSBmcm9tICcuLic7XHJcbmltcG9ydCB7IGdldFJhbmRvbU5vZGUgfSBmcm9tICcuLi8uLi8uLi91dGlscy9ub2RlJztcclxuaW1wb3J0IHsgY29tcHV0ZXJVbml0c05vZGVzLCBpbml0aWFsaXplQ29tcHV0ZXJVbml0c05vZGVzIH0gZnJvbSAnLi4vbm9kZXMvY29tcHV0ZXJOb2Rlcyc7XHJcbmltcG9ydCB7IGNyZWF0ZVVuaXQgfSBmcm9tICcuLi8uLi8uLi91bml0JztcclxuXHJcbmV4cG9ydCBjb25zdCBjcmVhdGVDb21wdXRlckFybXkgPSAoKSA9PiB7XHJcbiAgaW5pdGlhbGl6ZUNvbXB1dGVyVW5pdHNOb2RlcygpLnRoZW4oXHJcbiAgICAoKSA9PiB7XHJcbiAgICAgIGZvcihsZXQgdW5pdCBvZiBjb21wdXRlckFybXkpIHtcclxuICAgICAgICBsZXQgbm9kZSA9IGdldFJhbmRvbU5vZGUoY29tcHV0ZXJVbml0c05vZGVzKTtcclxuICAgICAgICBsZXQgdHlwZSA9IHVuaXQubmFtZTtcclxuICAgICAgICBsZXQgeCA9IG5vZGUueDtcclxuICAgICAgICBsZXQgeSA9IG5vZGUueTtcclxuICAgICAgICBjcmVhdGVVbml0KHR5cGUsIHgsIHksICdjb21wdXRlcicpO1xyXG4gICAgICAgIGRlbGV0ZU5vZGVGcm9tQ29tcHV0ZXJOb2Rlcyhub2RlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICk7XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBtYWluTWVudSxcclxuICBkcmFnQW5kRHJvcENhbnZhc1xyXG59IGZyb20gJy4uLy4uL2NvbmZpZy9jYW52YXMnO1xyXG5pbXBvcnQgeyBjbGVhck1hcCB9IGZyb20gJy4uLy4uL21hcCc7XHJcbmltcG9ydCB7XHJcbiAgY2FudmFzLFxyXG4gIGF1eGlsaWFyeUNhbnZhcyxcclxuICBiYWNrZ3JvdW5kQ2FudmFzLFxyXG4gIHRlcnJhaW5cclxufSBmcm9tICcuLi8uLi9jb25maWcvY2FudmFzJztcclxuaW1wb3J0IHsgc2V0TWFpbk1lbnVNb2RlIH0gZnJvbSAnLi4vLi4vY29uZmlnJztcclxuaW1wb3J0IHsgbGF1bmNoR2FtZSB9IGZyb20gJy4uJztcclxuaW1wb3J0IHsgZXZlbnRDYW52YXMgfSBmcm9tICcuLi8uLi9jb25maWcvY2FudmFzL2V2ZW50JztcclxuaW1wb3J0IHsgcGF0aENhbnZhcyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jYW52YXMvcGF0aCc7XHJcbmltcG9ydCB7IGxvYWRpbmdDYW52YXMgfSBmcm9tICcuLi8uLi9jb25maWcvY2FudmFzL2xvYWRpbmcnO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFjdGl2YXRlTWFpbk1lbnVNb2RlID0gKCkgPT4ge1xyXG4gIGRyYWdBbmREcm9wQ2FudmFzLnN0eWxlLnpJbmRleCA9ICc2JztcclxuICBtYWluTWVudS5zdHlsZS56SW5kZXggPSAnNSc7XHJcbiAgYXV4aWxpYXJ5Q2FudmFzLnN0eWxlLnpJbmRleCA9ICc0JztcclxuICBjYW52YXMuc3R5bGUuekluZGV4ID0gJzMnO1xyXG4gIHRlcnJhaW4uc3R5bGUuekluZGV4ID0gJzInXHJcbiAgZXZlbnRDYW52YXMuc3R5bGUuekluZGV4ID0gJzEnO1xyXG4gIHBhdGhDYW52YXMuc3R5bGUuekluZGV4ID0gJzEnO1xyXG4gIGJhY2tncm91bmRDYW52YXMuc3R5bGUuekluZGV4ID0gJzEnO1xyXG4gIGxvYWRpbmdDYW52YXMuc3R5bGUuekluZGV4ID0gJzEnO1xyXG4gIGNsZWFyTWFwKCk7XHJcbiAgc2V0TWFpbk1lbnVNb2RlKCk7XHJcbiAgbGF1bmNoR2FtZSgpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=