!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=130)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(44);t.MAP_HEIGHT=r.MAP_HEIGHT,t.MAP_WIDTH=r.MAP_WIDTH,t.CANVAS_HEIGHT=r.CANVAS_HEIGHT,t.gridSize=r.gridSize;var i=n(135);t.mainMenuMode=i.mainMenuMode,t.setBattleMode=i.setBattleMode,t.setMainMenuMode=i.setMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(141);t.loadImage=r.loadImage;var i=n(5);t.getNodeFromMap=i.getNodeFromMap,t.getDistanceBetweenUnitAndNodeInGrids=i.getDistanceBetweenUnitAndNodeInGrids,t.getDistanceBetweenTwoNodesInGrids=i.getDistanceBetweenTwoNodesInGrids,t.addNodeIntoArray=i.addNodeIntoArray,t.getNodeFromArray=i.getNodeFromArray,t.getMinValueFromNodes=i.getMinValueFromNodes,t.getMaxValueFromNodes=i.getMaxValueFromNodes;var o=n(69);t.deleteObjectFromArray=o.deleteObjectFromArray,t.isObjectInArray=o.isObjectInArray,t.isObjectEmpty=o.isObjectEmpty;var a=n(173);t.addUnitIntoArray=a.addUnitIntoArray,t.anotherUnitIsOnTheWay=a.anotherUnitIsOnTheWay,t.deleteUnitFromArray=a.deleteUnitFromArray,t.deleteUnitFromArmy=a.deleteUnitFromArmy,t.getDistanceBetweenTwoUnitsInGrids=a.getDistanceBetweenTwoUnitsInGrids,t.getUnitsMinProperty=a.getUnitsMinProperty,t.getUnitsMaxProperty=a.getUnitsMaxProperty,t.isUnitInArray=a.isUnitInArray;var s=n(31);t.getSurroundedNodes=s.getSurroundedNodes,t.getSurroundedEnemies=s.getSurroundedEnemies;var l=n(179);t.drawBackground=l.drawBackground,t.drawObstacle=l.drawObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(19);t.ctx=r.ctx,t.auxiliaryCtx=r.auxiliaryCtx,t.backgroundCtx=r.backgroundCtx,t.dragAndDropCanvasCtx=r.dragAndDropCanvasCtx,t.mainMenuCtx=r.mainMenuCtx,t.terrainCtx=r.terrainCtx},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(8);t.units=[],t.playerUnits=[],t.computerUnits=[],t.addToUnits=function(e){if(e){if(r.isUnitInArray(e,t.units))throw new Error("unit is already added");if("computer"===e.controlBy)t.addToComputerUnits(e),t.units.push(e);else{if("player"!==e.controlBy)throw new Error("Undefined unit control");t.addToPlayerUnits(e),t.units.push(e)}}},t.addToComputerUnits=function(e){e&&(r.isUnitInArray(e,t.computerUnits)||"computer"===e.controlBy&&t.computerUnits.push(e))},t.addToPlayerUnits=function(e){e&&(r.isUnitInArray(e,t.playerUnits)||"player"===e.controlBy&&t.playerUnits.push(e))},t.removeFromUnits=function(e){e&&(t.units=i.deleteUnitFromArray(e,t.units),"computer"===e.controlBy?t.removeFromComputerUnits(e):"player"===e.controlBy&&t.removeFromPlayerUnits(e))},t.removeFromPlayerUnits=function(e){e&&"player"===e.controlBy&&(t.playerUnits=i.deleteUnitFromArray(e,t.playerUnits))},t.removeFromComputerUnits=function(e){e&&"computer"===e.controlBy&&(t.computerUnits=i.deleteUnitFromArray(e,t.computerUnits))},t.removeAllComputerUnits=function(){t.computerUnits=[]},t.removeAllPlayerUnits=function(){t.playerUnits=[]},t.removeAllUnits=function(){t.removeAllComputerUnits(),t.removeAllPlayerUnits(),t.units=[]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(257);t.decreaseSpentGold=r.decreaseSpentGold,t.increaseSpentGold=r.increaseSpentGold,t.setTotalGold=r.setTotalGold;var i=n(108);t.armyLayoutHeight=i.armyLayoutHeight,t.armyLayoutWidth=i.armyLayoutWidth,t.infoLayoutHeight=i.infoLayoutHeight,t.infoLayoutWidth=i.infoLayoutWidth,t.unitRosterHeight=i.unitRosterHeight,t.unitRosterWidth=i.unitRosterWidth,t.startBattleStartY=i.startBattleStartY,t.startBattleHeight=i.startBattleHeight,t.startBattleWidth=i.startBattleWidth,t.titleHeight=i.titleHeight;var o=n(267);t.changeBattleSettingsToTrue=o.changeBattleSettingsToTrue,t.changeUnitInfoToTrue=o.changeUnitInfoToTrue,t.showBattleSettings=o.showBattleSettings,t.showUnitInfo=o.showUnitInfo;var a=n(268);t.changeToComputer=a.changeToComputer,t.changeToPlayer=a.changeToPlayer,t.side=a.side;var s=n(269);t.disableStartBattleButton=s.disableStartBattleButton,t.enableStartBattleButton=s.enableStartBattleButton,t.startBattleAvailable=s.startBattleAvailable;var l=n(270);t.changeHoveredUnit=l.changeHoveredUnit,t.hoveredUnit=l.hoveredUnit,t.computerHasUnits=l.computerHasUnits,t.playerHasUnits=l.playerHasUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(142);t.addNodeIntoArray=r.addNodeIntoArray;var i=n(145);t.getDistanceBetweenUnitAndNodeInGrids=i.getDistanceBetweenUnitAndNodeInGrids,t.getDistanceBetweenTwoNodesInGrids=i.getDistanceBetweenTwoNodesInGrids;var o=n(147);t.getNodeFromArray=o.getNodeFromArray,t.getNodeFromMap=o.getNodeFromMap,t.getMinValueFromNodes=o.getMinValueFromNodes,t.getMaxValueFromNodes=o.getMaxValueFromNodes;var a=n(166);t.getRandomNode=a.getRandomNode;var s=n(72);t.shuffleNodes=s.shuffleNodes;var l=n(169);t.getSurroundedBlockedNodes=l.getSurroundedBlockedNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1),o=n(8),a=n(184),s=function(){function e(e,t,n,o){void 0===o&&(o="player"),this.radius=a.radius,this.isCurrentlyChosen=!1,this.imgSrc="./src/img/units/pikemen.jpg",this.isMoving=!1,this.isVisible=!1,this.unitToPursue=null,this.isFighting=!1,this.figthAgainst={front:{},flank:[],rear:{},all:[]},this.health=100,this.speed=10,this.armour=1,this.range=0,this.mobility=1,this.meleeDamage=1,this.missileDamage=0,this.shotsRemained=0,this.charge=2,this.discipline=5,this.weight=0,this.visibility=5,this.morale=100,this.condition=100,this.baseNode={},this.isUnitUnderProtection=!1,this.isUnitNeedHelp=!1,this.beCloseTo=[],this.frozen=!1,this.id=e,this.x=t,this.y=n,this.centerX=t+r.gridSize/2,this.centerY=n+r.gridSize/2,this.controlBy=o,this.currentNode=i.getNodeFromMap(t,n),this.nextNode=i.getNodeFromMap(t,n)}return e.prototype.setX=function(e){this.x=e,this.centerX=e+r.gridSize/2},e.prototype.setY=function(e){this.y=e,this.centerY=e+r.gridSize/2},e.prototype.setIsMovingToFalse=function(){this.isMoving=!1},e.prototype.setIsMovingToTrue=function(){this.isMoving=!0},e.prototype.setUnitToPursue=function(e){this.unitToPursue=e},e.prototype.setUnitToPursueToNull=function(){this.unitToPursue=null},e.prototype.setIsFightingToTrue=function(){this.isFighting=!0},e.prototype.setIsFightingToFalse=function(){this.isFighting=!1},e.prototype.assignMoveToPosition=function(e,t){var n=i.getNodeFromMap(e,t);n&&(this.moveToNode=n)},e.prototype.removeEnemyFromFlank=function(e){for(var t=0;t<this.figthAgainst.flank.length;++t)this.figthAgainst.flank[t].id===e.id&&(this.figthAgainst.flank=o.deleteUnitFromArray(e,this.figthAgainst.flank))},e.prototype.increaseCondition=function(e){this.condition<100&&(this.condition+=e)},e.prototype.decreaseCondition=function(e){this.condition>0&&(this.condition-=e)},e.prototype.setCurrentNode=function(e){if(e&&e.x&&e.y){var t=i.getNodeFromMap(e.x,e.y);t&&(this.currentNode=t)}},e.prototype.setNextNode=function(e){var t=i.getNodeFromMap(e.x,e.y);t&&(this.nextNode=t)},e.prototype.assignEnemy=function(e){if(i.isObjectEmpty(this.figthAgainst.front))this.figthAgainst.front=e;else{var t=this.figthAgainst.front.currentNode,n=e.currentNode,a=this.currentNode,s=(a.x-t.x)/r.gridSize,l=(a.y-t.y)/r.gridSize,u=(a.x-n.x)/r.gridSize,c=(a.y-n.y)/r.gridSize;s===-u&&l===-c?this.figthAgainst.rear=e:s===u&&l===-c?this.figthAgainst.rear=e:s===-u&&l===c?this.figthAgainst.rear=e:this.figthAgainst.flank.push(e)}o.isUnitInArray(e,this.figthAgainst.all)||this.figthAgainst.all.push(e),this.isFighting=!0},e.prototype.increaseWeightInPercentage=function(e){var t=this.weight+this.weight*(.01*e);t<0?t=0:t>100&&(t=100),this.weight=Math.round(t)},e.prototype.removeEnemyFromFightAgainst=function(e){if(e.id===this.figthAgainst.front.id)this.figthAgainst.front={},this.arrangeFightAgainst();else if(e.id===this.figthAgainst.rear.id)this.figthAgainst.rear={};else if(0!==this.figthAgainst.flank.length)for(var t=0,n=this.figthAgainst.flank;t<n.length;t++){n[t].id===e.id&&this.removeEnemyFromFlank(e)}this.figthAgainst.all=o.deleteUnitFromArray(e,this.figthAgainst.all),0===this.figthAgainst.all.length&&(this.isFighting=!1)},e.prototype.arrangeFightAgainst=function(){var e=Object.assign([],this.figthAgainst.flank),t=Object.assign({},this.figthAgainst.rear);if(this.figthAgainst.flank=[],this.figthAgainst.rear={},e.length>0)for(var n=0,r=e;n<r.length;n++){var o=r[n];this.assignEnemy(o)}i.isObjectEmpty(t)||this.assignEnemy(t)},e.prototype.clearFightAgainst=function(){this.figthAgainst.front={},this.figthAgainst.rear={},this.figthAgainst.flank=[],this.figthAgainst.all=[],this.isFighting=!1},e.prototype.assignTask=function(e){if("exploration"===e)this.task=e;else if("protection"===e)this.task=e;else if("patrol"===e)this.task=e;else{if("holdPosition"!==e)throw new Error("Cannot assign task for unit "+this.name);this.task=e}console.error(" new task for unit",this.name,"is",e)},e.prototype.clearTask=function(){this.task=""},e.prototype.setIsUnitUnderProtectionToTrue=function(){this.isUnitUnderProtection=!0},e.prototype.setIsUnitUnderProtectionToFalse=function(){this.isUnitUnderProtection=!1},e.prototype.assignUnitToProtect=function(e){this.unitToProtect=e},e.prototype.clearUnitToProtect=function(){this.unitToProtect=null},e.prototype.setIsUnitNeedHelpToTrue=function(){this.isUnitNeedHelp=!0},e.prototype.setIsUnitNeedHelpToFalse=function(){this.isUnitNeedHelp=!1},e.prototype.assignUnitToHelp=function(e){this.unitToHelp=e},e.prototype.clearUnitToHelp=function(){this.unitToHelp=null},e.prototype.assignBaseNode=function(e){e&&(this.baseNode=e)},e.prototype.removeBaseNode=function(){this.baseNode={}},e.prototype.setCommandNumber=function(e){this.commandNumber=e},e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.side="player",t.changeToPlayer=function(){t.side="player"},t.changeToComputer=function(){t.side="computer"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(73);t.addUnitIntoArray=r.addUnitIntoArray,t.deleteUnitFromArray=r.deleteUnitFromArray,t.deleteUnitFromArmy=r.deleteUnitFromArmy,t.getDistanceBetweenTwoUnitsInGrids=r.getDistanceBetweenTwoUnitsInGrids,t.getUnitById=r.getUnitById,t.isUnitInArray=r.isUnitInArray},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.visibleForPlayerUnits=[],t.visibleForComputerUnits=[],t.addUnitIntoVisibleUnits=function(e){"player"===e.controlBy?r.isObjectInArray(e,t.visibleForComputerUnits)||t.visibleForComputerUnits.push(e):"computer"===e.controlBy&&(r.isObjectInArray(e,t.visibleForPlayerUnits)||t.visibleForPlayerUnits.push(e))},t.removeUnitFromVisibleUnits=function(e){"player"===e.controlBy?r.isObjectInArray(e,t.visibleForComputerUnits)&&(t.visibleForComputerUnits=r.deleteObjectFromArray(e,t.visibleForComputerUnits)):"computer"===e.controlBy&&r.isObjectInArray(e,t.visibleForPlayerUnits)&&(t.visibleForPlayerUnits=r.deleteObjectFromArray(e,t.visibleForPlayerUnits))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(21),i=n(71);t.initialMap=[],t.searchMap={},t.createMap=function(){return new Promise(function(e){t.initialMap=r.createNodes(),e()})},t.initializeSearchMap=function(e){return new Promise(function(n){t.searchMap=i.createSearchMap(e),n()})},t.addObstaclesToMap=function(){return new Promise(function(e){t.initialMap=r.createObstacles(120,220,120,160,"river"),t.initialMap=r.createObstacles(640,800,160,160,"river"),t.initialMap=r.createObstacles(880,1120,160,160,"river"),t.initialMap=r.createOneObstacle(t.initialMap,320,280,"mountain"),t.initialMap=r.createObstacles(240,340,320,360,"mountain"),t.initialMap=r.createObstacles(480,580,400,440,"forest"),t.initialMap=r.createObstacles(960,1e3,360,400,"forest"),t.initialMap=r.createObstacles(920,1e3,400,440,"forest"),e()})},t.initializeMap=function(){return new Promise(function(e){console.error("initializeMap"),t.createMap().then(function(){return t.addObstaclesToMap()}).then(function(){r.addNeighbors(t.initialMap).then(function(){return t.initializeSearchMap(t.initialMap).then(function(){e()})})})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(74);t.onChooseUnit=r.onChooseUnit,t.chooseUnitType=r.chooseUnitType;var i=n(196);t.createUnit=i.createUnit;var o=n(80);t.drawUnit=o.drawUnit,t.redrawUnits=o.redrawUnits;var a=n(197);t.armourPenetration=a.armourPenetration,t.checkAttackSide=a.checkAttackSide,t.charge=a.charge,t.calculateCharge=a.calculateCharge,t.calculateDamage=a.calculateDamage,t.calculateDamageBaseOnEnemyPosition=a.calculateDamageBaseOnEnemyPosition,t.calculateDamageWhenItsLessThanOne=a.calculateDamageWhenItsLessThanOne,t.removeUnitFromEnemiesFightAgainst=a.removeUnitFromEnemiesFightAgainst,t.findUnitInFightAgainst=a.findUnitInFightAgainst,t.isUnitFighting=a.isUnitFighting,t.checkHealth=a.checkHealth,t.meleeAttack=a.meleeAttack,t.meleeCombat=a.meleeCombat,t.refreshment=a.refreshment;var s=n(24);t.updateUnit=s.updateUnit,t.pursueUnit=s.pursueUnit;var l=n(219);t.spotEnemy=l.spotEnemy,t.isUnitSpottedByEnemy=l.isUnitSpottedByEnemy,t.spotUnits=l.spotUnits;var u=n(75);t.Archers=u.Archers,t.HeavyInfantry=u.HeavyInfantry,t.HeavyCavalry=u.HeavyCavalry,t.Hoplites=u.Hoplites,t.LightInfantry=u.LightInfantry,t.LightCavalry=u.LightCavalry,t.Militia=u.Militia,t.Peltasts=u.Peltasts,t.Pikemen=u.Pikemen,t.Scouts=u.Scouts,t.Unit=u.Unit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(132);t.auxiliaryCanvas=r.auxiliaryCanvas;var i=n(136);t.backgroundCanvas=i.backgroundCanvas;var o=n(137);t.canvas=o.canvas;var a=n(138);t.terrain=a.terrain;var s=n(139);t.dragAndDropCanvas=s.dragAndDropCanvas;var l=n(140);t.mainMenu=l.mainMenu},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.quantity=0,this.totalHealth=0,this.totalSpeed=0,this.totalArmour=0,this.totalMeleeDamage=0,this.totalMissileDamage=0,this.totalDiscipline=0,this.totalMorale=0,this.totalCondition=0}return e.prototype.incrementQuantity=function(){this.quantity+=1},e.prototype.decrementQuantity=function(){this.quantity-=1},e.prototype.addHealth=function(e){this.totalHealth+=e},e.prototype.addSpeed=function(e){this.totalSpeed+=e},e.prototype.addArmour=function(e){this.totalArmour+=e},e.prototype.addMeleeDamage=function(e){this.totalMeleeDamage+=e},e.prototype.addMissileDamage=function(e){this.totalMissileDamage+=e},e.prototype.addDiscipline=function(e){this.totalDiscipline+=e},e.prototype.addMorale=function(e){this.totalMorale+=e},e.prototype.addCondition=function(e){this.totalCondition+=e},e.prototype.resetAllProperties=function(){this.quantity=0,this.totalHealth=0,this.totalSpeed=0,this.totalArmour=0,this.totalMeleeDamage=0,this.totalMissileDamage=0,this.totalDiscipline=0,this.totalMorale=0,this.totalCondition=0},e}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),i=n(4),o=n(42),a=n(1);t.computerArmy=[],t.computerArmyPositionX=i.unitRosterWidth+20,t.computerArmyPositionY=i.titleHeight+60,t.playerArmy=[],t.playerArmyPositionX=i.unitRosterWidth+20,t.playerArmyPositionY=i.titleHeight+60,t.addUnitToArmy=function(e){var n,i=Object.assign({},e);"player"===r.side?(n=t.playerArmy,i.armyPosition={x:t.playerArmyPositionX,y:t.playerArmyPositionY}):(n=t.computerArmy,i.armyPosition={x:t.computerArmyPositionX,y:t.computerArmyPositionY}),e&&n.push(i),"player"===r.side?t.changePlayerArmyPosition():t.changeComputerArmyPosition()},t.removeUnitFromArmy=function(e){var n;n="player"===r.side?t.playerArmy:t.computerArmy,e&&a.isUnitInArray(e,n)&&("player"===r.side?(t.playerArmy=a.deleteUnitFromArmy(e,t.playerArmy),t.rearrangePlayerArmyPosition()):(t.computerArmy=a.deleteUnitFromArmy(e,t.computerArmy),t.rearrangeComputerArmyPosition()))},t.changePlayerArmyPosition=function(){var e=t.playerArmy.length,n=o.armyImgWidth+10,r=o.armyImgHeight+15,a=i.unitRosterWidth+20;e%5==0?(t.playerArmyPositionX=a,t.playerArmyPositionY+=r):t.playerArmyPositionX+=n},t.changeComputerArmyPosition=function(){var e=t.computerArmy.length,n=o.armyImgWidth+10,r=o.armyImgHeight+15,a=i.unitRosterWidth+20;e%5==0?(t.computerArmyPositionX=a,t.computerArmyPositionY+=r):t.computerArmyPositionX+=n},t.rearrangePlayerArmyPosition=function(){for(var e=o.armyImgWidth+10,n=o.armyImgHeight+15,r=i.unitRosterWidth+20,a=i.unitRosterWidth+20,s=i.titleHeight+60,l=1,u=0,c=t.playerArmy;u<c.length;u++){c[u].armyPosition={x:a,y:s},l%5==0?(a=r,s+=n):a+=e,l++}if(0!==t.playerArmy.length){var d=t.playerArmy[t.playerArmy.length-1].armyPosition.x,f=t.playerArmy[t.playerArmy.length-1].armyPosition.y;l%5==0?(t.playerArmyPositionX=r,t.playerArmyPositionY=f+n):(t.playerArmyPositionX=d+e,t.playerArmyPositionY=f)}else t.playerArmyPositionX=i.unitRosterWidth+20,t.playerArmyPositionY=i.titleHeight+60},t.rearrangeComputerArmyPosition=function(){for(var e=o.armyImgWidth+10,n=o.armyImgHeight+15,r=i.unitRosterWidth+20,a=i.unitRosterWidth+20,s=i.titleHeight+60,l=1,u=0,c=t.computerArmy;u<c.length;u++){c[u].armyPosition={x:a,y:s},l%5==0?(s+=n,a=r):a+=e,l++}if(0!==t.computerArmy.length){var d=t.computerArmy[t.computerArmy.length-1].armyPosition.x,f=t.computerArmy[t.computerArmy.length-1].armyPosition.y;l%5==0?(t.computerArmyPositionX=r,t.computerArmyPositionY=f+n):(t.computerArmyPositionX=d+e,t.computerArmyPositionY=f)}else t.computerArmyPositionX=i.unitRosterWidth+20,t.computerArmyPositionY=i.titleHeight+60}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(62);t.goldBoxStartX=r.goldBoxStartX,t.goldBoxStartY=r.goldBoxStartY,t.startTotalMoneyTitleX=r.startTotalMoneyTitleX,t.startTotalMoneyTitleY=r.startTotalMoneyTitleY,t.boxWidth=r.boxWidth,t.boxHeight=r.boxHeight,t.goldOptions=r.goldOptions,t.unitInfoTitleX=r.unitInfoTitleX,t.unitInfoTitleY=r.unitInfoTitleY,t.propertyStartX=r.propertyStartX,t.propertyStartY=r.propertyStartY,t.valueStartX=r.valueStartX,t.valueStartY=r.valueStartY;var i=n(283);t.width=i.width,t.height=i.height,t.battleSettingsX=i.battleSettingsX,t.battleSettingsY=i.battleSettingsY,t.unitInfoX=i.unitInfoX,t.unitInfoY=i.unitInfoY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.loadingCanvas=document.getElementById("loadingCanvas"),t.loadingCanvas&&(t.loadingCanvas.width=r.MAP_WIDTH,t.loadingCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.currentlyChosenUnit=null,t.assignCurrentlyChosenUnit=function(e){e&&"player"===e.controlBy?t.currentlyChosenUnit=e:t.currentlyChosenUnit=null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(33),i=n(2),o=n(78),a=n(73),s=n(3),l=n(0),u=n(22),c=n(17);t.drawUnitIcon=function(e,n){if(void 0===n&&(n=!1),"player"===e.controlBy){var u=a.getUnitPositionInArray(e.id,s.playerUnits)+1,c=r.UNIT_LEFT_PANEL_WIDTH+r.UNIT_ICON_WIDTH*u,d=l.CANVAS_HEIGHT-r.UNIT_PANEL_HEIGHT;i.ctx.clearRect(c,d,r.UNIT_ICON_WIDTH,r.UNIT_ICON_HEIGHT);var f=n?.5:1,h=c,g=r.UNIT_ICON_WIDTH*f;i.ctx.strokeRect(c,d,g,r.UNIT_ICON_HEIGHT),t.drawMovementIcon(c,d,e,n),c+=o.movementIcon.width*f,t.drawFightIcon(c,d,e,n),c+=o.fightIcon.width*f,t.drawArrowIcon(c,d,n),c=h,d+=o.attributesHeight,t.fillHealthPoints(c,d,e,n),d+=o.healthPointsHeight,t.drawIcon(c,d,e,n)}},t.drawMovementIcon=function(e,t,n,r){if(void 0===r&&(r=!1),n.isMoving){var a=r?.5:1;i.ctx.drawImage(u.movementIconImage,e,t,o.movementIcon.width*a,o.movementIcon.height)}},t.drawFightIcon=function(e,t,n,r){if(void 0===r&&(r=!1),n.isFighting){var a=r?.5:1;i.ctx.drawImage(u.fightIconImage,e,t,o.fightIcon.width*a,o.fightIcon.height)}},t.drawArrowIcon=function(e,t,n){void 0===n&&(n=!1)},t.fillHealthPoints=function(e,t,n,a){void 0===a&&(a=!1);var s=a?.5:1,l=r.UNIT_ICON_WIDTH*s,u=n.initialHealth,c=.01*Math.round(n.health/u*100),d=l*c;c>=.7?i.ctx.fillStyle="green":c>=.4&&c<.7?i.ctx.fillStyle="yellow":c>0&&c<.4&&(i.ctx.fillStyle="red"),d<0&&(d=0),i.ctx.fillRect(e,t,d,o.healthPointsHeight)},t.drawIcon=function(e,t,n,a){void 0===a&&(a=!1),i.ctx.save(),(!c.currentlyChosenUnit||c.currentlyChosenUnit&&c.currentlyChosenUnit.id!==n.id)&&(i.ctx.filter="brightness(0.8)");var s=a?.5:1;i.ctx.drawImage(u.unitIconImages[n.name],e,t,r.UNIT_ICON_WIDTH*s,o.iconHeight),i.ctx.restore()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(28),o=n(29),a=n(16),s=n(67);r.canvas&&(t.ctx=r.canvas.getContext("2d")),r.auxiliaryCanvas&&(t.auxiliaryCtx=r.auxiliaryCanvas.getContext("2d")),r.terrain&&(t.terrainCtx=r.terrain.getContext("2d")),r.backgroundCanvas&&(t.backgroundCtx=r.backgroundCanvas.getContext("2d")),r.mainMenu&&(t.mainMenuCtx=r.mainMenu.getContext("2d")),r.dragAndDropCanvas&&(t.dragAndDropCanvasCtx=r.dragAndDropCanvas.getContext("2d")),i.pathCanvas&&(t.pathCtx=i.pathCanvas.getContext("2d")),o.eventCanvas&&(t.eventCtx=o.eventCanvas.getContext("2d")),a.loadingCanvas&&(t.loadingCtx=a.loadingCanvas.getContext("2d")),s.battleResultCanvas&&(t.battleResultCtx=s.battleResultCanvas.getContext("2d"))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(10),o=n(164);t.getNodeFromMap=function(e,t,n){var a;void 0===n&&(n=i.searchMap);var s=r.MAP_WIDTH/r.gridSize,l=r.MAP_HEIGHT/r.gridSize,u=o.findXInSearchMap(0,s,e);return u&&(a=o.coordinateYBinarySearch(0,l,t,u)),a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(152);t.clearMap=r.clearMap;var i=n(154);t.drawGrid=i.drawGrid;var o=n(156);t.addNeighbors=o.addNeighbors,t.neighbors=o.neighbors;var a=n(158);t.createNodes=a.createNodes;var s=n(160);t.createOneObstacle=s.createOneObstacle,t.createObstacles=s.createObstacles,t.createUnitObstacle=s.createUnitObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(78),o=n(79);t.unitIconImages={},t.loadIcons=function(){l(),s(),t.loadSwordIconImage(),t.loadSpearIconImage(),t.loadSpearAndShieldIconImage(),t.loadSwordAndRoundShieldIconImage()},t.loadUnitIcons=function(){return new Promise(function(e){o.createDefaultUnits().then(function(){return a().then(function(){return e()})})})};var a=function(){return new Promise(function(e){u().then(function(){e()})})},s=function(){r.loadImage(i.moveIconSrc,function(e,n){if(e)throw new Error("cannot load movement icon");t.movementIconImage=n})},l=function(){r.loadImage(i.fightIconSrc,function(e,n){if(e)throw new Error("cannot load fight icon");t.fightIconImage=n})},u=function(e){return void 0===e&&(e=0),new Promise(function(n){e===o.defaultUnits.length&&n(),r.loadImage(o.defaultUnits[e].imgSrc,function(r,i){if(r)throw new Error("Cannot load images of unit "+o.defaultUnits[e].name);t.unitIconImages[o.defaultUnits[e].name]=i,n(u(e+1))})})};t.loadSwordIconImage=function(){r.loadImage(i.swordIconSrc,function(e,n){if(e)throw new Error("cannot load sword icon at path "+t.swordIconImage);t.swordIconImage=n})},t.loadSpearIconImage=function(){r.loadImage(i.spearIconSrc,function(e,n){if(e)throw new Error("cannot load spear icon at path: "+i.spearIconSrc);t.spearIconImage=n})},t.loadSpearAndShieldIconImage=function(){r.loadImage(i.spearAndShieldSrc,function(e,n){if(e)throw new Error("cannot load spear and shield icon at path "+i.spearAndShieldSrc);t.spearAndShieldIconImage=n})},t.loadSwordAndRoundShieldIconImage=function(){r.loadImage(i.swordAndRoundShieldSrc,function(e,n){if(e)throw new Error("cannot load sword and round shild icon at path "+i.swordAndRoundShieldSrc);t.swordAndRoundShieldIconImage=n})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.revealedUnits=[],t.addToRevealedUnits=function(e){if(!r.isUnitInArray(e,t.revealedUnits)&&"player"===e.controlBy){var n=Object.assign({},e);t.revealedUnits.push(n)}},t.removeFromRevealedUnits=function(e){r.isUnitInArray(e,t.revealedUnits)&&(t.revealedUnits=r.deleteUnitFromArray(e,t.revealedUnits))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(210);t.attackEnemy=r.attackEnemy,t.moveTo=r.moveTo,t.pursueUnit=r.pursueUnit,t.updateUnit=r.updateUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.armyImgWidth=80,t.armyImgHeight=80},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(293);t.isStartBattleAvailable=r.isStartBattleAvailable;var i=n(295);t.isStartBattleButtonSelected=i.isStartBattleButtonSelected;var o=n(297);t.showStartBattleButton=o.showStartBattleButton,t.showText=o.showText},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(131);t.launchBattle=r.launchBattle;var i=n(250);t.launchGame=i.launchGame;var o=n(310);t.activateBattleMode=o.activateBattleMode,t.activateMainMenuMode=o.activateMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.pathCanvas=document.getElementById("pathCanvas"),t.pathCanvas&&(t.pathCanvas.width=r.MAP_WIDTH,t.pathCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.eventCanvas=document.getElementById("eventCanvas"),t.eventCanvas&&(t.eventCanvas.width=r.MAP_WIDTH,t.eventCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(9);t.hidingEnemies=[],t.addToHidingEnemies=function(e){if(!r.isUnitInArray(e,i.visibleForComputerUnits)){var n=Object.assign({},e);r.isUnitInArray(e,t.hidingEnemies)||"player"!==e.controlBy||t.hidingEnemies.push(n)}},t.removeFromHidingEnemies=function(e){r.isUnitInArray(e,i.visibleForComputerUnits)&&r.isUnitInArray(e,t.hidingEnemies)&&(t.hidingEnemies=r.deleteUnitFromArray(e,t.hidingEnemies))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(32);t.getSurroundedNodes=r.getSurroundedNodes;var i=n(171);t.getSurroundedEnemies=i.getSurroundedEnemies;var o=n(172);t.getSurroundedAllies=o.getSurroundedAllies},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.getSurroundedNodes=function(e,t){void 0===t&&(t=1);for(var n=[],o=e.currentNode.x-t*r.gridSize,a=e.currentNode.x+t*r.gridSize,s=e.currentNode.y-t*r.gridSize,l=e.currentNode.y+t*r.gridSize,u=s;u<=l;u+=r.gridSize)for(var c=o;c<=a;c+=r.gridSize){var d=i.getNodeFromMap(c,u);d&&n.push(d)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.UNIT_PANEL_HEIGHT=r.CANVAS_HEIGHT-r.MAP_HEIGHT,t.UNIT_PANEL_WIDTH=r.MAP_WIDTH,t.UNIT_LEFT_PANEL_WIDTH=260,t.UNIT_RIGHT_PANEL_WIDTH=260,t.UNIT_ICONS_PANEL_WIDTH=1e3,t.UNIT_ICON_WIDTH=100,t.UNIT_ICON_HEIGHT=t.UNIT_PANEL_HEIGHT},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),o=n(17),a=n(3),s=n(77);t.drawUnit=function(e){var t,n=0;if("player"===e.controlBy)t="#dbdb0d";else if("computer"===e.controlBy&&(t="#d30c0c",!e.isVisible))return;if(r.ctx){o.currentlyChosenUnit&&o.currentlyChosenUnit.id===e.id&&(r.ctx.beginPath(),r.ctx.arc(e.centerX,e.centerY,e.radius,0,2*Math.PI),r.ctx.fillStyle="#a79ebf",r.ctx.fill(),r.ctx.closePath(),r.ctx.restore(),n=2);r.ctx.beginPath(),r.ctx.arc(e.centerX,e.centerY,e.radius-n,0,2*Math.PI),r.ctx.fillStyle=t,r.ctx.fill(),r.ctx.closePath(),r.ctx.restore();var i=e.x+8,a=e.y+8,l=2*e.radius-8;r.ctx.drawImage(s.unitToIconMap[e.name],i+2,a+2,l,l)}},t.clearUnitImage=function(e){r.ctx&&r.ctx.clearRect(e.x,e.y,i.gridSize,i.gridSize)},t.redrawUnits=function(e){for(var n=0,r=e;n<r.length;n++){var i=r[n];!0!==i.isMoving&&t.drawUnit(i)}},t.redrawPlayerUnits=function(){t.redrawUnits(a.playerUnits)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(1),o=n(21),a=n(10),s=n(48),l=n(1),u=n(94),c=n(5),d=n(95),f=n(36),h=n(96),g=n(97),y=n(99),v=n(100),m=n(18);t.pursueUnit=function(e,n,p,M,U,_,b,P){if(void 0===P&&(P=0),!(P>3)){if(e.isFighting){if(e.setUnitToPursueToNull(),!b||!u.unitCanGetOutOfCombat(e)){var I=i.getNodeFromMap(e.x,e.y);return e.setCurrentNode(I),e.setNextNode(I),void e.setIsMovingToFalse()}e.clearFightAgainst(),r.removeUnitFromEnemiesFightAgainst(e),e.setIsMovingToTrue()}if(null===e.unitToPursue){var x=i.getNodeFromMap(e.x,e.y),C=i.getNodeFromMap(e.moveToNode.x,e.moveToNode.y),T=s.aStar(a.initialMap,x,C);return e.assignMoveToPosition(C.x,C.y),void f.updateUnit(e,T,0,C.x,C.y,null,!1)}if(null!==e.unitToPursue&&n.id!==e.unitToPursue.id){var A=i.getNodeFromMap(e.x,e.y),S=i.getNodeFromMap(e.unitToPursue.x,e.unitToPursue.y);T=s.aStar(a.initialMap,A,S);return e.assignMoveToPosition(S.x,S.y),void t.pursueUnit(e,e.unitToPursue,S.x,S.y,0,T,!1)}if(0===y.getInterceptedEnemies(e).length){var O=Object.assign([],_),w=O[U];if(w){var N;N=U+1===O.length?w:O[U+1];var j=i.getNodeFromMap(e.x,e.y);e.setCurrentNode(j),e.setNextNode(N);var H=i.getNodeFromMap(e.x,e.y),B=i.getNodeFromMap(n.x,n.y);if(p===n.x&&M===n.y||(U=0,p=n.x,M=n.y,H=i.getNodeFromMap(e.x,e.y),B=i.getNodeFromMap(n.x,n.y),_=s.aStar(a.initialMap,H,B),e.assignMoveToPosition(n.currentNode.x,n.currentNode.y),w=_[U]),N.x===n.currentNode.x&&N.y===n.currentNode.y){console.log("UNIT REACHED ENEMY"),h.stopMoving(e,j),e.setUnitToPursueToNull(),m.drawUnitIcon(e),e.assignEnemy(n),n.assignEnemy(e);var F=i.getNodeFromMap(n.x,n.y);return h.stopMoving(n,F),m.drawUnitIcon(n),r.charge(e,n),void console.log("end of reached enemy")}if(l.anotherUnitIsOnTheWay(e)){if(console.error("ANOTHER UNIT IS ON THE WAY"),v.getBlockedEnemies(e).length>0){console.log("UNIT is blocked by enemy"),h.stopMoving(e,j),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var E=0,W=v.getBlockedEnemies(e);E<W.length;E++){q=W[E];e.assignEnemy(q),q.assignEnemy(e)}return}var D=g.unitCanMoveToTheNode(N,e);if(console.log("PERMISSION",D),!D){h.stopMoving(e,j);for(var R=Object.assign([],a.initialMap),k=0,G=c.getSurroundedBlockedNodes(e);k<G.length;k++){var z=G[k];R=o.createUnitObstacle(R,z.x,z.y)}o.addNeighbors(R);var L=i.getNodeFromMap(e.x,e.y,R),Y=i.getNodeFromMap(p,M,R);T=s.aStar(R,L,Y);return void t.pursueUnit(e,n,p,M,U,T,!1,P+=1)}}e.assignMoveToPosition(n.currentNode.x,n.currentNode.y),e.setIsMovingToTrue(),m.drawUnitIcon(e),r.spotEnemy(e),e.decreaseCondition(1),d.moveToNextNodeInPursueUnit(e,n,j,N,p,M,_,U)}}else{e.setIsMovingToFalse(),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var V=0,X=y.getInterceptedEnemies(e);V<X.length;V++){var q;(q=X[V]).setIsMovingToFalse(),e.assignEnemy(q),q.assignEnemy(e)}}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(1),o=n(21),a=n(10),s=n(48),l=n(1),u=n(94),c=n(5),d=n(96),f=n(95),h=n(35),g=n(97),y=n(99),v=n(100),m=n(18);t.updateUnit=function(e,n,p,M,U,_,b,P){if(void 0===p&&(p=0),void 0===_&&(_=null),void 0===P&&(P=0),!(P>3||e.health<=0))if(p!==n.length){if(e.isFighting){if(m.drawUnitIcon(e),!b||!u.unitCanGetOutOfCombat(e)){var I=i.getNodeFromMap(e.x,e.y);return void d.stopMoving(e,I)}e.setUnitToPursueToNull(),e.clearFightAgainst(),r.removeUnitFromEnemiesFightAgainst(e)}if(0===y.getInterceptedEnemies(e).length){if(e.unitToPursue){var x=i.getNodeFromMap(e.x,e.y);d.stopMoving(e,x);var C=i.getNodeFromMap(e.unitToPursue.x,e.unitToPursue.y),T=s.aStar(a.initialMap,x,C);return e.assignMoveToPosition(C.x,C.y),void h.pursueUnit(e,e.unitToPursue,C.x,C.y,0,T,!1)}if(M!==e.moveToNode.x||U!==e.moveToNode.y){x=i.getNodeFromMap(e.x,e.y),C=i.getNodeFromMap(e.moveToNode.x,e.moveToNode.y);d.stopMoving(e,x);T=s.aStar(a.initialMap,x,C);return e.assignMoveToPosition(C.x,C.y),void t.updateUnit(e,T,0,C.x,C.y,null,!1)}var A=Object.assign([],n),S=A[p];if(S){var O;O=p+1===A.length?S:A[p+1];var w=i.getNodeFromMap(e.x,e.y);if(e.setCurrentNode(w),e.setNextNode(S),p>=A.length)d.stopMoving(e,w);else{if(l.anotherUnitIsOnTheWay(e)&&p===A.length-1){if(v.getBlockedEnemies(e).length>0){d.stopMoving(e,w),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var N=0,j=v.getBlockedEnemies(e);N<j.length;N++){L=j[N];e.assignEnemy(L),L.assignEnemy(e)}return}return console.error("another unit occupying destination position"),e.assignMoveToPosition(e.x,e.y),void d.stopMoving(e,w)}if(l.anotherUnitIsOnTheWay(e)){if(console.log("another unit is on the way"),v.getBlockedEnemies(e).length>0){d.stopMoving(e,w),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var H=0,B=v.getBlockedEnemies(e);H<B.length;H++){L=B[H];e.assignEnemy(L),L.assignEnemy(e)}return}if(!g.unitCanMoveToTheNode(O,e)){d.stopMoving(e,w);for(var F=Object.assign([],a.initialMap),E=0,W=c.getSurroundedBlockedNodes(e);E<W.length;E++){var D=W[E];F=o.createUnitObstacle(F,D.x,D.y)}o.addNeighbors(F);x=i.getNodeFromMap(e.x,e.y,F),C=i.getNodeFromMap(M,U,F),T=s.aStar(F,x,C);return void t.updateUnit(e,T,0,M,U,null,!1,P+=1)}}e.setIsMovingToTrue(),m.drawUnitIcon(e);var R=S;r.spotEnemy(e),0!==p&&(R=A[p-1]),e.decreaseCondition(1),f.moveToNextNodeInUpdateUnit(e,R,S,M,U,n,p)}}}else{console.log("UNIT IS INTERCEPTED BY ENEMY");var k=i.getNodeFromMap(e.x,e.y);d.stopMoving(e,k),e.setUnitToPursueToNull(),m.drawUnitIcon(e);for(var G=0,z=y.getInterceptedEnemies(e);G<z.length;G++){var L=z[G];d.stopMoving(L,L.nextNode),e.assignEnemy(L),L.assignEnemy(e),m.drawUnitIcon(L)}}}else{var Y=i.getNodeFromMap(e.x,e.y);d.stopMoving(e,Y)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(8),o=n(5);t.getClosestUnitToNode=function(e){for(var t=r.computerUnits[0],n=1;n<r.computerUnits.length;++n){var i=o.getDistanceBetweenUnitAndNodeInGrids(t,e);o.getDistanceBetweenUnitAndNodeInGrids(r.computerUnits[n],e)<i&&(t=r.computerUnits[n])}return t},t.getClosestUnitToOtherUnit=function(e,t){void 0===t&&(t=r.computerUnits);var n=Object.assign([],i.deleteUnitFromArray(e,t));if(0===n.length)return e;for(var o=n[0],a=1;a<n.length;++a){var s=i.getDistanceBetweenTwoUnitsInGrids(o,e);i.getDistanceBetweenTwoUnitsInGrids(n[a],e)<s&&(o=n[a])}return o},t.getBestUnitByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.computerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]<n[u][e]&&(l=n[u]);return l},t.getWorstUnitByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.computerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]>n[u][e]&&(l=n[u]);return l},t.getBestEnemyByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.playerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]<n[u][e]&&(l=n[u]);return l},t.getWorstEnemyByProperty=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.playerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=n[0],u=0;u<n.length;++u)l[e]>n[u][e]&&(l=n[u]);return l},t.getNotFightingUnits=function(e){void 0===e&&(e=[]);var t=Object.assign([],r.computerUnits);if(0!==e.length)for(var n=0,o=e;n<o.length;n++){var a=o[n];t=i.deleteUnitFromArray(a,t)}if(0===t.length)return null;for(var s=[],l=0,u=t;l<u.length;l++){(a=u[l]).isFighting||s.push(a)}return s},t.getFightingUnits=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var i=r[n];i.isFighting&&t.push(i)}return t},t.getTotalUnitsHealth=function(e){for(var t=0,n=0,r=e;n<r.length;n++){t+=r[n].health}return t},t.getTotalUnitsInitialHealth=function(e){for(var t=0,n=0,r=e;n<r.length;n++){t+=r[n].health}return t},t.getClosestEnemyToUnit=function(e){var t=Object.assign([],i.deleteUnitFromArray(e,r.playerUnits));if(0===t.length)return null;for(var n=t[0],o=1;o<t.length;++o){var a=i.getDistanceBetweenTwoUnitsInGrids(n,e);i.getDistanceBetweenTwoUnitsInGrids(t[o],e)<a&&(n=t[o])}return n},t.getFreeUnits=function(e){void 0===e&&(e=[]);var t=Object.assign([],r.computerUnits);if(0!==e.length)for(var n=0,o=e;n<o.length;n++){var a=o[n];t=i.deleteUnitFromArray(a,t)}if(0===t.length)return null;for(var s=[],l=0,u=t;l<u.length;l++){(a=u[l]).task||s.push(a)}return s},t.getUnitsByTask=function(e,t){void 0===t&&(t=[]);var n=Object.assign([],r.computerUnits);if(0!==t.length)for(var o=0,a=t;o<a.length;o++){var s=a[o];n=i.deleteUnitFromArray(s,n)}if(0===n.length)return null;for(var l=[],u=0,c=n;u<c.length;u++){(s=c[u]).task===e&&l.push(s)}return l},t.getUnitsByPropertyValue=function(e,t,n){void 0===n&&(n=[]);var o=Object.assign([],r.computerUnits);if(0!==n.length)for(var a=0,s=n;a<s.length;a++){var l=s[a];o=i.deleteUnitFromArray(l,o)}if(0===o.length)return null;for(var u=[],c=0,d=o;c<d.length;c++){(l=d[c])[e]===t&&u.push(l)}return u},t.getUnitsWhereValue=function(e,t,n,o){void 0===o&&(o=[]);var a=Object.assign([],r.computerUnits);if(0!==o.length)for(var s=0,l=o;s<l.length;s++){var u=l[s];a=i.deleteUnitFromArray(u,a)}if(0===a.length)return null;for(var c=[],d=0,f=a;d<f.length;d++){u=f[d];t.toLowerCase(),"="===t||"equal"===t||"=="===t||"==="===t?u[e]==n&&c.push(u):">"===t||"greater"===t?u[e]>n&&c.push(u):">="===t||">=="===t||"greaterOrEqual"===t?u[e]>=n&&c.push(u):"<"===t||"less"===t?u[e]<n&&c.push(u):"<="!==t&&"<=="!==t&&"lessOrEqual"!==t||u[e]<=n&&c.push(u)}return c},t.getDangerousUnits=function(e){var t=[],n=[];"computer"===e.controlBy?t=Object.assign([],r.playerUnits):"player"===e.controlBy&&(t=Object.assign([],r.computerUnits));for(var i=0,o=t;i<o.length;i++)for(var a=o[i],s=0,l=e.vulnerableAgainst;s<l.length;s++){var u=l[s];if(a.name==u){n.push(a);break}}return n},t.containsDangerousUnits=function(e,t){for(var n=0,r=t;n<r.length;n++)for(var i=r[n],o=0,a=e.vulnerableAgainst;o<a.length;o++){var s=a[o];if(i.name==s)return!0}return!1},t.isEnemyDangerousForUnit=function(e,t){for(var n=0,r=e.vulnerableAgainst;n<r.length;n++){var i=r[n];if(t.name==i)return!0}return!1},t.isEnemyVulnerableToUnit=function(e,t){for(var n=0,r=e.advantageOver;n<r.length;n++){var i=r[n];if(t.name==i)return!0}return!1},t.getScoutsNumber=function(){for(var e=0,n=r.computerUnits;e<n.length;e++){n[e];return t.getUnitsByTask("exploration").length}},t.isUnitsChanged=function(e,t){var n=function(e,t){return e.id<t.id?-1:e.id>t.id?1:0};if(e.length!=t.length)return!0;var r=Object.assign([],e),i=Object.assign([],t);r.sort(n),i.sort(n);for(var o=0;o<r.length;++o)if(r[o]!=i[o])return console.error("units changed"),!0;return!1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(32),i=n(20),o=n(8);t.getSurroundedUnits=function(e,t,n,a){void 0===n&&(n=3),void 0===a&&(a=!1);var s=[],l=Object.assign([],t);!a&&o.isUnitInArray(e,l)&&(l=o.deleteUnitFromArray(e,l));for(var u=0,c=r.getSurroundedNodes(e,n);u<c.length;u++){var d=c[u];if(d&&d.x&&d.y)for(var f=0,h=l;f<h.length;f++){var g=h[f],y=i.getNodeFromMap(g.x,g.y);y&&y.x&&y.y&&d.x===y.x&&d.y===y.y&&s.push(g)}}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(79);t.roster=[],t.createRoster=function(){for(var e=0,n=r.defaultUnits;e<n.length;e++){var i=n[e];t.roster.push(i)}for(var o=0,a=t.roster;o<a.length;o++){(i=a[o]).selected=!1}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.totalGold=400,t.setTotalGold=function(e){t.totalGold=e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.showBattleSettings=!0,t.showUnitInfo=!1,t.changeBattleSettingsToTrue=function(){t.showBattleSettings=!0,t.showUnitInfo=!1},t.changeUnitInfoToTrue=function(){t.showBattleSettings=!1,t.showUnitInfo=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(111);t.displayArmy=r.displayArmy;var i=n(113);t.drawRemoveIcon=i.drawRemoveIcon;var o=n(277);t.isUnitShouldBeRemoved=o.isUnitShouldBeRemoved;var a=n(25);t.armyImgWidth=a.armyImgWidth,t.armyImgHeight=a.armyImgHeight;var s=n(278);t.displayChosenUnits=s.displayChosenUnits,t.displayChosenUnitsTitle=s.displayChosenUnitsTitle,t.onChooseUnitInArmy=s.onChooseUnitInArmy},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(288);t.displayComputer=r.displayComputer;var i=n(289);t.displayPlayer=i.displayPlayer;var o=n(290);t.displayRemainGold=o.displayRemainGold;var a=n(291);t.displayTitle=a.displayTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(133);t.MAP_HEIGHT=r.MAP_HEIGHT,t.MAP_WIDTH=r.MAP_WIDTH,t.CANVAS_HEIGHT=r.CANVAS_HEIGHT;var i=n(134);t.gridSize=i.gridSize},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.battleMode=!1,t.battleFinish=!1,t.mainMenuMode=!0,t.setBattleMode=function(){return new Promise(function(e){t.mainMenuMode=!1,t.battleMode=!0,e()})},t.setMainMenuMode=function(){return new Promise(function(e){t.mainMenuMode=!1,t.battleMode=!0,e()})},t.finishBattle=function(){t.battleFinish=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.unitId=0,t.incUnitId=function(){t.unitId++}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(202);t.calculateDamage=r.calculateDamage,t.calculateDamageBaseOnEnemyPosition=r.calculateDamageBaseOnEnemyPosition,t.calculateDamageWhenItsLessThanOne=r.calculateDamageWhenItsLessThanOne},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(49);t.aStar=r.aStar;var i=n(93);t.drawPath=i.drawPath;var o=n(212);t.findPathFromOneNodeToAnother=o.findPathFromOneNodeToAnother;var a=n(92);t.getMinFScore=a.getMinFScore,t.unclosedNeigbors=a.unclosedNeigbors,t.isObjectInMapKeys=a.isObjectInMapKeys},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(21),i=n(1),o=n(92);t.aStar=function(e,n,a){var s=Object.assign([],e);if(n&&a){var l=[],u=[];n.gScore=0,n.fScore=n.gScore+t.h(n,a),l.push(n);for(var c=new Map;l;){var d=o.getMinFScore(l);if(!d)return;if(d.x===a.x&&d.y===a.y)return t.reconstructPath(c,d);l=i.deleteObjectFromArray(d,l),u.push(d);for(var f=0,h=o.unclosedNeigbors(d,u);f<h.length;f++){var g=h[f],y=o.getNeighborDistance(d,g),v=d.gScore+y;if(!i.isObjectInArray(g,l)||v<g.gScore){if(c.set(g,d),!g)return;g.gScore=v,g.fScore=g.gScore+t.h(g,a)}if(!i.isObjectInArray(g,l)){var m=r.neighbors(s,g);g.neighbors=m,l.push(g)}}}return 0}},t.h=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return 10*(n+r)+-6*Math.min(n,r)},t.reconstructPath=function(e,t){for(var n=[t],r=[];o.isObjectInMapKeys(t,e);)t=e.get(t),n.push(t);for(var i=n.length-1;i>=0;i--)r.push(n[i]);return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(20),i=n(10),o=n(36),a=n(49);t.moveTo=function(e,t,n){if(e.isMoving){e.setUnitToPursue(null),(s=r.getNodeFromMap(t,n))&&s.x&&s.y&&e.assignMoveToPosition(s.x,s.y)}else{e.setUnitToPursue(null);var s,l=r.getNodeFromMap(e.x,e.y);if((s=r.getNodeFromMap(t,n))&&s.x&&s.y){var u=a.aStar(i.initialMap,l,s);e.assignMoveToPosition(s.x,s.y),o.updateUnit(e,u,0,s.x,s.y,null,!0)}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.playerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.computerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(98);t.getRandomUnit=function(e){var t=Object.assign([],e);return r.shuffleUnits(t)[0]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(246);t.assessVulnerability=r.assessVulnerability},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.generateCurrentCommandNumber=function(){var e=Math.random();return t.currentCommandNumber=e,e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(255);t.rosterImgWidth=r.rosterImgWidth,t.rosterImgHeight=r.rosterImgHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(256);t.displayRoster=r.displayRoster;var i=n(272);t.displayRosterUnits=i.displayRosterUnits;var o=n(275);t.displayRosterTitle=o.displayRosterTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7);t.playerSpentGold=0,t.computerSpentGold=0,t.increaseSpentGold=function(e){"computer"===r.side?t.computerSpentGold+=e:"player"===r.side&&(t.playerSpentGold+=e)},t.decreaseSpentGold=function(e){"computer"===r.side?t.computerSpentGold-=e:"player"===r.side&&(t.playerSpentGold-=e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.startBattleAvailable=!1,t.disableStartBattleButton=function(){t.startBattleAvailable=!1},t.enableStartBattleButton=function(){t.startBattleAvailable=!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectedUnitInRoster=null,t.selectUnitInRoster=function(e){t.selectedUnitInRoster=e||null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(281);t.changeTotalGold=r.changeTotalGold;var i=n(298);t.onChooseInfo=i.onChooseInfo,t.displayInfo=i.displayInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.goldBoxStartX=r.armyLayoutWidth+r.unitRosterWidth+100,t.goldBoxStartY=r.titleHeight+80,t.startTotalMoneyTitleX=t.goldBoxStartX+40,t.startTotalMoneyTitleY=t.goldBoxStartY-20,t.boxWidth=40,t.boxHeight=40,t.goldOptions=[200,300,400,600,1e3],t.unitInfoTitleX=r.armyLayoutWidth+r.unitRosterWidth+170,t.unitInfoTitleY=r.titleHeight+60,t.propertyStartX=t.unitInfoTitleX-100,t.propertyStartY=t.unitInfoTitleY+30,t.valueStartX=t.propertyStartX+200,t.valueStartY=t.unitInfoTitleY+30,t.changeY=function(){t.propertyStartY+=30,t.valueStartY+=30},t.setDefault=function(){t.propertyStartX=t.unitInfoTitleX-100,t.propertyStartY=t.unitInfoTitleY+30,t.valueStartX=t.propertyStartX+200,t.valueStartY=t.unitInfoTitleY+30}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(285);t.onChoosePlayer=r.onChoosePlayer,t.onChooseComputer=r.onChooseComputer;var i=n(43);t.displayTitle=i.displayTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(287);t.playerSwitcherX0=r.playerSwitcherX0,t.playerSwitcherX1=r.playerSwitcherX1,t.playerSwitcherY0=r.playerSwitcherY0,t.playerSwitcherY1=r.playerSwitcherY1,t.computerSwitcherX0=r.computerSwitcherX0,t.computerSwitcherX1=r.computerSwitcherX1,t.computerSwitcherY0=r.computerSwitcherY0,t.computerSwitcherY1=r.computerSwitcherY1,t.playerSwitcherWidth=r.playerSwitcherWidth,t.computerSwitcherWidth=r.computerSwitcherWidth,t.goldX=r.goldX,t.goldY=r.goldY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(296);t.startBattleButtonX=r.startBattleButtonX,t.startBattleButtonY=r.startBattleButtonY,t.startBattleButtonWidth=r.startBattleButtonWidth,t.startBattleButtonHeight=r.startBattleButtonHeight,t.startBattleTextX=r.startBattleTextX,t.startBattleTextY=r.startBattleTextY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(2),o=n(0),a=n(1),s=n(11),l=n(3),u=n(24),c=n(17),d=n(91),f=n(221),h=n(34),g=n(223),y=n(93),v=n(224);t.launchBattle=function(){r.auxiliaryCanvas.addEventListener("mousemove",function(e){var t=e.offsetX,n=e.offsetY;if(c.currentlyChosenUnit){for(var r=null,a=0,s=l.computerUnits;a<s.length;a++){var u=s[a],d=u.x+o.gridSize,f=u.y+o.gridSize;t>=u.x&&t<d&&n>=u.y&&n<f&&(r=u)}r&&r.isVisible?(i.auxiliaryCtx.fillStyle="#000",i.auxiliaryCtx.font="14px Arial",i.auxiliaryCtx.fillText("Attack",r.x,r.y+o.gridSize/2)):i.auxiliaryCtx.clearRect(0,0,o.MAP_WIDTH,o.MAP_HEIGHT)}}),r.auxiliaryCanvas.addEventListener("click",function(e){var t=e.offsetX,n=e.offsetY;s.onChooseUnit(l.units,t,n),h.redrawPlayerUnits(),d.displayUnitIcons(),y.clearPath()}),r.auxiliaryCanvas.addEventListener("contextmenu",function(e){e.preventDefault();var t=e.offsetX,n=e.offsetY;if(c.currentlyChosenUnit){for(var r=null,i=0,a=l.computerUnits;i<a.length;i++){var s=a[i],d=s.x+o.gridSize,f=s.y+o.gridSize;t>=s.x&&t<d&&n>=s.y&&n<f&&(r=s)}r&&r.isVisible?u.attackEnemy(c.currentlyChosenUnit,r):(u.moveTo(c.currentlyChosenUnit,t,n),g.drawClickedIcon(t,n)),y.clearPath()}}),a.drawBackground("./src/img/terrain/terrain.png"),d.displayUnitIcons(),f.battleListener(),v.computerMovement(),setInterval(function(){f.isBattleEnd()},15e3)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.battleResultCanvas=document.getElementById("battleResultCanvas"),t.battleResultCanvas&&(t.battleResultCanvas.width=r.MAP_WIDTH,t.battleResultCanvas.height=r.MAP_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.loadImage=function(e,t){var n=new Image;n.onload=function(){t(null,n)},n.onerror=function(){t(new Error("Cannot load the image at "+e))},n.src=e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deleteObjectFromArray=function(e,t){return t.filter(function(t){return t.x!==e.x||t.y!==e.y})},t.isObjectInArray=function(e,t){if(0!==t.length)for(var n=0,r=t;n<r.length;n++){var i=r[n];if(e.x===i.x&&e.y===i.y)return!0}return!1},t.isObjectEmpty=function(e){var t=Object.prototype.hasOwnProperty;if(null==e)return!0;if(e.length>0)return!1;if(0===e.length)return!0;if("object"!=typeof e)return!0;for(var n in e)if(t.call(e,n))return!1;return!0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(150);t.findClosestUnitsToTheNodeCenter=r.findClosestUnitsToTheNodeCenter,t.getClosestNodeToUnit=r.getClosestNodeToUnit,t.getBestUnitsByProperty=r.getBestUnitsByProperty},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(159);t.createNodes=function(){for(var e=[],t=0,n=0;n<r.MAP_WIDTH;n+=r.gridSize)for(var o=0;o<r.MAP_HEIGHT;o+=r.gridSize){var a=new i.default(t,n,o);e.push(a),t++}return e},t.createSearchMap=function(e){for(var t={},n=0,i=[],o=0;o<e.length;++o)i.push(e[o]),o<=e.length-2&&e[o+1].x!==n&&(t[n]=i,n+=r.gridSize,i=[]);return t[n]=i,t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(168);t.shuffleNodes=r.shuffleNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(3);t.addUnitIntoArray=function(e,n){var r=Object.assign([],n);return t.isUnitInArray(e,n)||r.push(e),r},t.deleteUnitFromArray=function(e,t){return t.filter(function(t){return t.id!==e.id})},t.deleteUnitFromArmy=function(e,t){return t.filter(function(t){return t.armyPosition.x!==e.armyPosition.x||t.armyPosition.y!==e.armyPosition.y})},t.getDistanceBetweenTwoUnitsInGrids=function(e,t){var n=e.currentNode.x,i=e.currentNode.y,o=t.currentNode.x,a=t.currentNode.y;return Math.abs(n-o)/r.gridSize+Math.abs(i-a)/r.gridSize},t.isUnitInArray=function(e,t){if(0!==t.length)for(var n=0,r=t;n<r.length;n++){if(r[n].id===e.id)return!0}return!1},t.getUnitById=function(e,t){void 0===t&&(t=i.units);for(var n=0,r=t;n<r.length;n++){var o=r[n];if(e===o.id)return o}},t.getUnitPositionInArray=function(e,t){for(var n=0;n<t.length;++n)if(t[n].id===e)return n;return null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(182);t.chooseUnitType=r.chooseUnitType;var i=n(195);t.onChooseUnit=i.onChooseUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(183);t.Archers=r.default;var i=n(186);t.HeavyCavalry=i.default;var o=n(187);t.HeavyInfantry=o.default;var a=n(188);t.Hoplites=a.default;var s=n(189);t.LightCavalry=s.default;var l=n(190);t.LightInfantry=l.default;var u=n(191);t.Militia=u.default;var c=n(192);t.Peltasts=c.default;var d=n(193);t.Pikemen=d.default;var f=n(194);t.Scouts=f.default;var h=n(6);t.Unit=h.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(46),o=n(34),a=n(74);t.createUnit=function(e,t,n,s){if("player"===s||"computer"===s){var l;return l=a.chooseUnitType(e,t,n,s),r.addToUnits(l),o.drawUnit(l),i.incUnitId(),l}throw new Error("Unit cannot be controlled by "+s)},t.createDefaultUnit=function(e,t,n,r){if("player"===r||"computer"===r){return a.chooseUnitType(e,t,n,r)}throw new Error("Unit cannot be controlled by "+r)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(22);t.fillUnitToIconMap=function(){t.unitToIconMap={Archers:r.swordIconImage,HeavyCavalry:r.swordIconImage,Hoplites:r.spearAndShieldIconImage,LightCavalry:r.swordIconImage,LightInfantry:r.swordIconImage,HeavyInfantry:r.swordAndRoundShieldIconImage,Militia:r.swordIconImage,Peltasts:r.swordIconImage,Pikemen:r.spearIconImage,Scouts:r.swordIconImage}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(33);t.attributesHeight=20,t.healthPointsHeight=10,t.iconHeight=r.UNIT_ICON_HEIGHT-(t.attributesHeight+t.healthPointsHeight),t.moveIconSrc="./src/img/icons/MoveIcon.png",t.fightIconSrc="./src/img/icons/Swords.png",t.swordIconSrc="./src/img/units/icons/sword.png",t.spearIconSrc="./src/img/units/icons/spear.png",t.spearAndShieldSrc="./src/img/units/icons/spearAndShield.png",t.swordAndRoundShieldSrc="./src/img/units/icons/swordAndRoundShield.png",t.movementIcon={width:30,height:t.attributesHeight},t.fightIcon={width:40,height:t.attributesHeight},t.arrowIcon={width:30,height:t.attributesHeight}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(76);t.defaultUnits=[];var i=["HeavyCavalry","HeavyInfantry","Hoplites","LightCavalry","LightInfantry","Militia","Pikemen","Scouts"];t.createDefaultUnits=function(){return new Promise(function(e){for(var n=0,o=i;n<o.length;n++){var a=o[n],s=r.createDefaultUnit(a,0,0,"player");t.defaultUnits.push(s)}e()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(34);t.drawUnit=r.drawUnit,t.redrawUnits=r.redrawUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(198);t.armourPenetration=r.armourPenetration},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(199);t.checkAttackSide=r.checkAttackSide},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(203);t.removeUnitFromEnemiesFightAgainst=r.removeUnitFromEnemiesFightAgainst,t.findUnitInFightAgainst=r.findUnitInFightAgainst},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(204);t.checkHealth=r.checkHealth;var i=n(88);t.isUnitFighting=i.isUnitFighting;var o=n(208);t.meleeAttack=o.meleeAttack;var a=n(209);t.meleeCombat=a.meleeCombat},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(205);t.removeUnit=r.removeUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(206);t.assignCurrentlyChosenUnit=r.assignCurrentlyChosenUnit,t.addUnitToSpottedUnits=r.addUnitToSpottedUnits,t.removeUnitFromSpottedUnits=r.removeUnitFromSpottedUnits,t.incUnitId=r.incUnitId,t.addUnitIntoVisibleUnits=r.addUnitIntoVisibleUnits,t.removeUnitFromVisibleUnits=r.removeUnitFromVisibleUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.spottedUnits=[],t.addUnitToSpottedUnits=function(e){r.isUnitInArray(e,t.spottedUnits)||t.spottedUnits.push(e)},t.removeUnitFromSpottedUnits=function(e){r.isUnitInArray(e,t.spottedUnits)&&(t.spottedUnits=r.deleteObjectFromArray(e,t.spottedUnits))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.isUnitFighting=function(e){var t=!1,n=e.figthAgainst;r.isObjectEmpty(n.front)&&r.isObjectEmpty(n.rear)?0!==n.flank.length&&(t=!0):t=!0,t||e.setIsFightingToFalse()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(207);t.refreshment=r.refreshment},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.randomizeMeleeDamage=function(e){var t=e-Math.ceil(.2*e),n=e+Math.floor(.2*e);return Math.floor(Math.random()*(t-n+1))+n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(33),o=n(0),a=n(18),s=n(2);t.displayUnitIcons=function(){var e=i.UNIT_LEFT_PANEL_WIDTH,t=o.CANVAS_HEIGHT-i.UNIT_PANEL_HEIGHT;s.ctx.clearRect(e,t,i.UNIT_PANEL_WIDTH,i.UNIT_PANEL_HEIGHT);for(var n=0,l=r.playerUnits;n<l.length;n++){var u=l[n];a.drawUnitIcon(u,!1)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMinFScore=function(e){for(var t=0,n=1;n<e.length-1;++n)e[t].fScore>e[n].fScore&&(t=n);return e[t]},t.unclosedNeigbors=function(e,t){for(var n=[],r=0,i=e.neighbors;r<i.length;r++){for(var o=i[r],a=!1,s=0,l=t;s<l.length;s++){var u=l[s];o.x===u.x&&o.y===u.y&&(a=!0)}a||n.push(o)}return n},t.isObjectInMapKeys=function(e,t){for(var n=Array.from(t),r=!1,i=0;i<n.length;++i)n[i][0].x===e.x&&n[i][0].y===e.y&&(r=!0);return r},t.getNeighborDistance=function(e,t){var n=Math.abs(e.x-t.x),r=Math.abs(e.y-t.y);return 0!==n&&0!==r?14:10}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(19),o=n(17),a=n(1);t.drawPath=function(e,n,a){if(void 0===a&&(a=0),o.currentlyChosenUnit&&o.currentlyChosenUnit.id===e.id){t.clearPath(),0!=a&&(a-=1);for(var s=!0,l=a;l!=n.length-1;++l){var u=n[l].x+r.gridSize/2,c=n[l].y+r.gridSize/2,d=n[l+1].x+r.gridSize/2,f=n[l+1].y+r.gridSize/2;if(i.pathCtx.save(),i.pathCtx.strokeStyle="yellow",i.pathCtx.beginPath(),s?(i.pathCtx.moveTo(e.centerX,e.centerY),s=!1):i.pathCtx.moveTo(u,c),i.pathCtx.lineTo(d,f),i.pathCtx.stroke(),l==n.length-2){var h=Math.round(r.gridSize/4);i.pathCtx.beginPath(),i.pathCtx.arc(d,f,h,0,2*Math.PI),i.pathCtx.fill(),i.pathCtx.closePath()}i.pathCtx.restore()}}},t.clearPath=function(){i.pathCtx.clearRect(0,0,r.MAP_WIDTH,r.MAP_HEIGHT)},t.clearCurrentNode=function(e){var t=a.getNodeFromMap(e.x,e.y);i.pathCtx.clearRect(t.x,t.y,r.gridSize,r.gridSize)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(213);t.calculateChanceToGetOutOfCombat=r.calculateChanceToGetOutOfCombat,t.unitCanGetOutOfCombat=r.unitCanGetOutOfCombat},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(48),o=n(214);t.moveToNextNodeInPursueUnit=function(e,t,n,a,s,l,u,c){var d=n.x+.5*r.gridSize,f=n.y+.5*r.gridSize,h=a.x+.5*r.gridSize,g=a.y+.5*r.gridSize,y=i.findPathFromOneNodeToAnother(d,f,h,g);o.makeMovementInPursueUnit(e,t,n,a,y,u,s,l,0,c)},t.moveToNextNodeInUpdateUnit=function(e,t,n,a,s,l,u){var c=t.x+.5*r.gridSize,d=t.y+.5*r.gridSize,f=n.x+.5*r.gridSize,h=n.y+.5*r.gridSize,g=i.findPathFromOneNodeToAnother(c,d,f,h);o.makeMovementInUpdateUnit(e,t,n,g,l,a,s,0,u)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(18);t.stopMoving=function(e,t){e.setIsMovingToFalse(),e.setCurrentNode(t),e.setNextNode(t),r.drawUnitIcon(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(215);t.getPriorityUnit=r.getPriorityUnit,t.unitCanMoveToTheNode=r.unitCanMoveToTheNode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(216);t.shuffleUnits=r.shuffleUnits;var i=n(217);t.shuffleID=i.shuffleID},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(218),i=n(3),o=n(8);t.getInterceptedEnemies=function(e){var t;"player"===e.controlBy?t=Object.assign([],i.computerUnits):"computer"===e.controlBy&&(t=Object.assign([],i.playerUnits));for(var n=[],a=r.getInterceptionNodes(e),s=0,l=t;s<l.length;s++)for(var u=l[s],c=0,d=a;c<d.length;c++){var f=d[c];u.currentNode.x==f.x&&u.currentNode.y===f.y&&(o.isUnitInArray(u,n)||n.push(u))}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.getBlockedEnemies=function(e){var t,n=[];"player"===e.controlBy?t=Object.assign([],r.computerUnits):"computer"===e.controlBy&&(t=Object.assign([],r.playerUnits));for(var i=0,o=t;i<o.length;i++){var a=o[i];e.nextNode.x===a.nextNode.x&&e.nextNode.y===a.nextNode.y&&n.push(a)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(226),i=n(227),o=n(51),a=n(52),s=n(3),l=n(23),u=n(9),c=n(228),d=n(229),f=n(13);t.calculateTotalComputerPower=function(){var e=new f.default;a.computerPower.resetAllProperties();for(var n=0,r=s.computerUnits;n<r.length;n++){var i=r[n];t.decomposeUnitProps(i,"computer"),t.decomposePower(e,i)}return e},t.calculateTotalPlayerPower=function(){var e=new f.default;o.playerPower.resetAllProperties();for(var n=0,r=s.playerUnits;n<r.length;n++){var i=r[n];t.decomposeUnitProps(i),t.decomposePower(e,i)}return e},t.calculateRevealedUnitsPower=function(){d.revealedUnitsPower.resetAllProperties();for(var e=0,n=l.revealedUnits;e<n.length;e++){var r=n[e];t.decomposeUnitProps(r,"revealedUnits")}},t.calculateVisiblePlayerPower=function(){c.visiblePlayerUnitsPower.resetAllProperties();for(var e=0,n=u.visibleForComputerUnits;e<n.length;e++){var r=n[e];t.decomposeUnitProps(r,"visiblePlayerUnits")}},t.calculateInitialComputerPower=function(){r.initialComputerPower.resetAllProperties();for(var e=0,n=s.computerUnits;e<n.length;e++){var i=n[e];t.decomposeUnitProps(i,"initialComputer")}},t.calculateInitialPlayerPower=function(){i.initialPlayerPower.resetAllProperties();for(var e=0,n=s.playerUnits;e<n.length;e++){var r=n[e];t.decomposeUnitProps(r,"initialPlayer")}},t.calculateTotalPower=function(){t.calculateTotalComputerPower(),t.calculateTotalPlayerPower()},t.calculateInitialPower=function(){t.calculateInitialComputerPower(),t.calculateInitialPlayerPower()},t.decomposeUnitProps=function(e,n){void 0===n&&(n="player"),"visiblePlayerUnits"===n&&t.decomposePower(c.visiblePlayerUnitsPower,e),"player"===n?t.decomposePower(o.playerPower,e):"computer"===n?t.decomposePower(a.computerPower,e):"initialComputer"===n?t.decomposePower(r.initialComputerPower,e):"initialPlayer"===n?t.decomposePower(i.initialPlayerPower,e):"revealedUnits"===n&&t.decomposePower(d.revealedUnitsPower,e)},t.decomposePower=function(e,t){e.incrementQuantity(),e.addHealth(t.health),e.addSpeed(t.speed),e.addArmour(t.armour),e.addMeleeDamage(t.meleeDamage),e.addMissileDamage(t.missileDamage),e.addDiscipline(t.discipline),e.addMorale(t.morale),e.addCondition(t.condition)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValueInRange=function(e,t){if(e>=t)throw new Error("invalid min or max");if(e>0&&e<1&&t>0&&t<1){var n=Math.round(100*e),r=Math.round(100*t);return.01*(Math.floor(Math.random()*(r-n+1))+n)}return Math.floor(Math.random()*(t-e+1))+e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Attack=0]="Attack",e[e.BeCloseToUnit=1]="BeCloseToUnit",e[e.MoveToNode=2]="MoveToNode"}(t.Command||(t.Command={}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(37);t.getClosestUnitToNode=r.getClosestUnitToNode,t.getClosestUnitToOtherUnit=r.getClosestUnitToOtherUnit,t.getBestUnitByProperty=r.getBestUnitByProperty,t.getWorstUnitByProperty=r.getWorstUnitByProperty,t.getBestEnemyByProperty=r.getBestEnemyByProperty,t.getWorstEnemyByProperty=r.getWorstEnemyByProperty,t.getNotFightingUnits=r.getNotFightingUnits,t.getClosestEnemyToUnit=r.getClosestEnemyToUnit,t.getFreeUnits=r.getFreeUnits,t.getUnitsByTask=r.getUnitsByTask,t.getUnitsByPropertyValue=r.getUnitsByPropertyValue,t.getScoutsNumber=r.getScoutsNumber,t.getUnitsWhereValue=r.getUnitsWhereValue},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.calculateTotalUnitsWeight=function(e){for(var t=0,n=0,r=e;n<r.length;n++){t+=r[n].weight}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(53),o=n(24),a=n(38),s=n(9),l=n(5),u=n(55),c=n(50);t.beCloseTo=function(e,n,d,f,h){if(void 0===f&&(f=!1),void 0===h&&(h=!1),d===u.currentCommandNumber){if(h||!e.isFighting&&!e.isMoving){var g=r.getDistanceBetweenTwoUnitsInGrids(e,n);if(n.isFighting){if(0!=n.figthAgainst.all.length){var y=i.getRandomUnit(n.figthAgainst.all);o.attackEnemy(e,y)}}else if(f&&a.getSurroundedUnits(n,s.visibleForComputerUnits,3).length>0){var v=a.getSurroundedUnits(n,s.visibleForComputerUnits,3);y=i.getRandomUnit(v);o.attackEnemy(e,y)}else if(g>=2){var m=r.getSurroundedNodes(n,2),p=l.getRandomNode(m);c.moveTo(e,p.x,p.y)}}setTimeout(function(){t.beCloseTo(e,n,d,f)},2e3)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(56),i=n(39);t.isUnitSelectedInRoster=function(e,t){for(var n=0,o=i.roster;n<o.length;n++){var a=o[n],s=a.x,l=s+r.rosterImgWidth,u=a.y,c=u+r.rosterImgHeight;if(e>=s&&e<l&&t>=u&&t<c)return a}return null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(258);t.armyLayoutHeight=r.armyLayoutHeight,t.armyLayoutWidth=r.armyLayoutWidth;var i=n(260);t.infoLayoutHeight=i.infoLayoutHeight,t.infoLayoutWidth=i.infoLayoutWidth;var o=n(262);t.unitRosterHeight=o.unitRosterHeight,t.unitRosterWidth=o.unitRosterWidth;var a=n(264);t.startBattleStartY=a.startBattleStartY,t.startBattleHeight=a.startBattleHeight,t.startBattleWidth=a.startBattleWidth;var s=n(109);t.titleHeight=s.titleHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(266);t.titleHeight=r.titleHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hoveredUnit=null,t.changeHoveredUnit=function(e){e&&(t.hoveredUnit=e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(112);t.displayArmy=r.displayArmy},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(7),o=n(14),a=n(4),s=n(25),l=n(22);t.displayArmy=function(e){void 0===e&&(e=1);var n=[];if((n="player"===i.side?o.playerArmy:o.computerArmy).length>=1&&n.length>=e){var u=n[e-1],c=u.armyPosition.x,d=u.armyPosition.y;r.mainMenuCtx.drawImage(l.unitIconImages[u.name],c,d,s.armyImgWidth,s.armyImgHeight),e++,t.displayArmy(e)}else{var f=n.length,h=s.armyImgWidth+10,g=s.armyImgHeight+15,y=a.unitRosterWidth+20;c=void 0,d=void 0;if(0===n.length)c=a.unitRosterWidth+20,d=a.titleHeight+60;else{var v=n[n.length-1].armyPosition.x,m=n[n.length-1].armyPosition.y;f%5==0?(c=y,d=m+g):(c=v+h,d=m)}e<=10?(r.mainMenuCtx.fillStyle="#fff",r.mainMenuCtx.fillRect(c,d,s.armyImgWidth,s.armyImgHeight),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.strokeRect(c,d,s.armyImgWidth,s.armyImgHeight),t.emptyBox={i:e,x:c,y:d,filled:!1}):t.emptyBox={i:e,x:c,y:d,filled:!0}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(276);t.drawRemoveIcon=r.drawRemoveIcon},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),i=n(14),o=n(25);t.isUnitShouldBeRemoved=function(e,t){for(var n=0,a="player"===r.side?i.playerArmy:i.computerArmy;n<a.length;n++){var s=a[n],l=s.armyPosition.x+o.armyImgWidth-15,u=s.armyPosition.x+o.armyImgWidth-5,c=s.armyPosition.y+4,d=s.armyPosition.y+15;if(e>=l&&e<u&&t>=c&&t<d)return s}return null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(282);t.drawMoneyBox=r.drawMoneyBox},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(284);t.changeTotalGold=r.changeTotalGold,t.fillTotalGold=r.fillTotalGold,t.showTotalGold=r.showTotalGold},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(42);t.displayChosenUnits=r.displayChosenUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(294);t.drawBottomLayout=r.drawBottomLayout;var i=n(119);t.fillLayout=i.fillLayout},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2);t.fillLayout=function(){i.mainMenuCtx.clearRect(0,r.startBattleStartY,r.startBattleWidth,r.startBattleHeight),i.mainMenuCtx.fillStyle="#2c2f33",i.mainMenuCtx.fillRect(0,r.startBattleStartY,r.startBattleWidth,r.startBattleWidth)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(15);t.onChooseBattleSettings=function(e,t){var n=r.battleSettingsX,i=r.battleSettingsX+r.width,o=r.battleSettingsY,a=r.battleSettingsY+r.height;return e>=n&&e<i&&t>=o&&t<a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(15);t.onChooseUnitInfo=function(e,t){var n=r.unitInfoX,i=r.unitInfoX+r.width,o=r.unitInfoY,a=r.unitInfoY+r.height;return e>=n&&e<i&&t>=o&&t<a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(301);t.displayInfo=r.displayInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(124);t.battleSettingSwitcher=r.battleSettingSwitcher;var i=n(302);t.showSwither=i.showSwither;var o=n(125);t.unitInfoSwitcher=o.unitInfoSwitcher},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(15),o=n(41);t.battleSettingSwitcher=function(){o.showBattleSettings?r.mainMenuCtx.fillStyle="#fff":r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.battleSettingsX,i.battleSettingsY,i.width,i.height),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.strokeRect(i.battleSettingsX,i.battleSettingsY,i.width,i.height),r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Battle Settings",i.battleSettingsX+5,i.battleSettingsY+20)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(15),o=n(41);t.unitInfoSwitcher=function(){o.showUnitInfo?r.mainMenuCtx.fillStyle="#fff":r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.unitInfoX,i.unitInfoY,i.width,i.height),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.strokeRect(i.unitInfoX,i.unitInfoY,i.width,i.height),r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Unit Info",i.unitInfoX+35,i.unitInfoY+20)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(19),i=n(16),o=n(0);t.drawLoadingCanvas=function(){i.loadingCanvas.style.zIndex="7",r.loadingCtx.fillStyle="#ccc",r.loadingCtx.fillRect(0,0,o.MAP_WIDTH,o.CANVAS_HEIGHT),r.loadingCtx.font="48px serif",r.loadingCtx.fillStyle="#000";var e=o.MAP_WIDTH/2-100,t=o.CANVAS_HEIGHT/2-50;r.loadingCtx.fillText("Loading...",e,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(315);t.deleteNodeFromComputerNodes=r.deleteNodeFromComputerNodes,t.deleteNodeFromPlayerNodes=r.deleteNodeFromPlayerNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.computerUnitsNodes=[],t.initializeComputerUnitsNodes=function(){return new Promise(function(e){for(var n=r.MAP_WIDTH-2*r.gridSize,o=r.MAP_WIDTH,a=r.MAP_HEIGHT,s=n;s<=o;s+=r.gridSize)for(var l=0;l<=a;l+=r.gridSize){var u=i.getNodeFromMap(s,l);u&&t.computerUnitsNodes.push(u)}e()})},t.deleteNodeFromComputerNodes=function(e){e&&(t.computerUnitsNodes=i.deleteObjectFromArray(e,t.computerUnitsNodes))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.playerUnitsNodes=[],t.initializePlayerUnitsNodes=function(){return new Promise(function(e){for(var n=2*r.gridSize,o=r.MAP_HEIGHT,a=0;a<=n;a+=r.gridSize)for(var s=0;s<=o;s+=r.gridSize){var l=i.getNodeFromMap(a,s);l&&t.playerUnitsNodes.push(l)}e()})},t.deleteNodeFromPlayerNodes=function(e){e&&(t.playerUnitsNodes=i.deleteObjectFromArray(e,t.playerUnitsNodes))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(27).launchGame()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(66);t.launchBattle=r.launchBattle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.auxiliaryCanvas=document.getElementById("auxiliary"),t.auxiliaryCanvas&&(t.auxiliaryCanvas.width=r.MAP_WIDTH,t.auxiliaryCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MAP_WIDTH=1520,t.MAP_HEIGHT=600,t.CANVAS_HEIGHT=720},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.gridSize=40},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(45);t.mainMenuMode=r.mainMenuMode,t.setBattleMode=r.setBattleMode,t.setMainMenuMode=r.setMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.backgroundCanvas=document.getElementById("background"),t.backgroundCanvas&&(t.backgroundCanvas.width=r.MAP_WIDTH,t.backgroundCanvas.height=r.MAP_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.canvas=document.getElementById("canvas"),t.canvas&&(t.canvas.width=r.MAP_WIDTH,t.canvas.height=r.CANVAS_HEIGHT,t.canvas.style.border="1px solid")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.terrain=document.getElementById("terrain"),t.terrain&&(t.terrain.width=r.MAP_WIDTH,t.terrain.height=r.MAP_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.dragAndDropCanvas=document.getElementById("dragAndDrop"),t.dragAndDropCanvas&&(t.dragAndDropCanvas.width=r.MAP_WIDTH,t.dragAndDropCanvas.height=r.CANVAS_HEIGHT)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.mainMenu=document.getElementById("mainMenu"),t.mainMenu&&(t.mainMenu.width=r.MAP_WIDTH,t.mainMenu.height=r.CANVAS_HEIGHT,t.mainMenu.style.border="1px solid")},function(e,t,n){"use strict";n.r(t);var r=n(68);n.d(t,"loadImage",function(){return r.loadImage})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(143);t.addNodeIntoArray=r.addNodeIntoArray},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(144);t.addNodeIntoArray=function(e,t){var n=Object.assign([],t);return r.isObjectInArray(e,t)||n.push(e),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(69);t.deleteObjectFromArray=r.deleteObjectFromArray,t.isObjectInArray=r.isObjectInArray,t.isObjectEmpty=r.isObjectEmpty},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(146);t.getDistanceBetweenUnitAndNodeInGrids=r.getDistanceBetweenUnitAndNodeInGrids,t.getDistanceBetweenTwoNodesInGrids=r.getDistanceBetweenTwoNodesInGrids},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(44);t.getDistanceBetweenUnitAndNodeInGrids=function(e,t){var n=t.x,i=t.y,o=e.currentNode.x,a=e.currentNode.y;return Math.abs(o-n)/r.gridSize+Math.abs(a-i)/r.gridSize},t.getDistanceBetweenTwoNodesInGrids=function(e,t){var n=e.x,i=e.y,o=t.x,a=t.y;return Math.abs(n-o)/r.gridSize+Math.abs(i-a)/r.gridSize}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(148);t.getNodeFromArray=r.getNodeFromArray;var i=n(149);t.getClosestToEnemySideNodes=i.getClosestToEnemySideNodes,t.getClosestToEnemyNodes=i.getClosestToEnemyNodes;var o=n(151);t.getFarthestNodeFromEnemy=o.getFarthestNodeFromEnemy,t.getFarthestXNodes=o.getFarthestXNodes;var a=n(20);t.getNodeFromMap=a.getNodeFromMap;var s=n(165);t.getMinValueFromNodes=s.getMinValueFromNodes,t.getMaxValueFromNodes=s.getMaxValueFromNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getNodeFromArray=function(e,t){for(var n=0,r=t;n<r.length;n++){var i=r[n];if(i.x===e.x&&i.y&&e.y)return i}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(70),o=n(30);t.getClosestToEnemySideNodes=function(e){for(var t=[],n=r.getMinValueFromNodes("x",e),i=0,o=e;i<o.length;i++){var a=o[i];a.x===n&&t.push(a)}return t},t.getClosestToEnemyNodes=function(e){var n=[];if(0===o.hidingEnemies.length)n=t.getClosestToEnemySideNodes(e);else for(var r=0,a=o.hidingEnemies;r<a.length;r++){var s=a[r],l=i.getClosestNodeToUnit(s,e);n.push(l)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(44),i=n(5);t.getClosestNodeToUnit=function(e,t){for(var n=t[0],r=1;r<t.length;++r){var o=i.getDistanceBetweenUnitAndNodeInGrids(e,n);i.getDistanceBetweenUnitAndNodeInGrids(e,t[r])<o&&(n=t[r])}return n},t.getBestUnitsByProperty=function(e,t){for(var n=Object.assign([],e),r=[],i=n[0],o=0;o<n.length;++o)i[t]<n[o][t]&&(i=n[o]);for(var a=0,s=n;a<s.length;a++){var l=s[a];l[t]===i[t]&&r.push(l)}return r},t.findClosestUnitsToTheNodeCenter=function(e,t){var n,i=Object.assign([],t),o=e.x+.5*r.gridSize,a=e.y+.5*r.gridSize,s=[],l=i[0];if(i.length>1)for(var u=1;u<i.length;++u){var c=l.centerX,d=l.centerY,f=i[u].centerX,h=i[u].centerY,g=Math.abs(c-o),y=Math.abs(d-a),v=Math.abs(f-o),m=Math.abs(h-a),p=Math.sqrt(Math.pow(g,2)+Math.pow(y,2));n=p,(_=Math.sqrt(Math.pow(v,2)+Math.pow(m,2)))<p&&(l=i[u],n=_)}for(var M=0,U=i;M<U.length;M++){var _,b=U[M];f=b.centerX,h=b.centerY,v=Math.abs(f-o),m=Math.abs(h-a);(_=Math.sqrt(Math.pow(v,2)+Math.pow(m,2)))===n&&s.push(b)}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.getFarthestNodeFromEnemy=function(e,t){for(var n=t[0],i=0;i<t.length;++i){var o=r.getDistanceBetweenUnitAndNodeInGrids(e,n);r.getDistanceBetweenUnitAndNodeInGrids(e,t[i])>o&&(n=t[i])}return n},t.getFarthestXNodes=function(e){for(var t=[],n=r.getMinValueFromNodes("x",e),i=r.getMaxValueFromNodes("x",e),o=0,a=e;o<a.length;o++){var s=a[o];s.x!==n&&s.x!==i||t.push(s)}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(153);t.clearMap=r.clearMap},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0);t.clearMap=function(){r.ctx.clearRect(0,0,i.MAP_WIDTH,i.CANVAS_HEIGHT)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(155);t.drawGrid=r.drawGrid},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0);t.drawGrid=function(){for(var e=0;e<=i.MAP_HEIGHT;e+=i.gridSize)for(var t=0;t<=i.MAP_WIDTH;t+=i.gridSize)r.ctx.strokeRect(t,e,i.gridSize,i.gridSize)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(157);t.addNeighbors=r.addNeighbors,t.neighbors=r.neighbors},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.neighbors=function(e,t){for(var n=[],i=0,o=[{x:-r.gridSize,y:-r.gridSize},{x:0,y:-r.gridSize,distance:10},{x:r.gridSize,y:-r.gridSize},{x:-r.gridSize,y:0},{x:r.gridSize,y:0},{x:-r.gridSize,y:r.gridSize},{x:0,y:r.gridSize},{x:r.gridSize,y:r.gridSize}];i<o.length;i++){var a=o[i],s={x:t.x+a.x,y:t.y+a.y};if(s.x>=0&&s.x<=r.MAP_WIDTH&&s.y>=0&&s.y<=r.MAP_HEIGHT){for(var l=void 0,u=0,c=e;u<c.length;u++){var d=c[u];s.x===d.x&&s.y===d.y&&(l=d)}l&&n.push(l)}}return n},t.addNeighbors=function(e){return new Promise(function(n){for(var r=0,i=e;r<i.length;r++){var o=i[r],a=t.neighbors(e,o);o.neighbors=a}n()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(71);t.createNodes=r.createNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=function(){return function(e,t,n){if(t%r.gridSize!=0||n%r.gridSize!=0)throw new Error("Node coordinates do not corresponds to map grid size");if(!(t>=0&&t<=r.MAP_WIDTH&&n>=0&&n<=r.MAP_HEIGHT))throw new Error("Node is out of bound");this.id=e,this.x=t,this.y=n}}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(161);t.createOneObstacle=r.createOneObstacle;var i=n(162);t.createObstacles=i.createObstacles;var o=n(163);t.createUnitObstacle=o.createUnitObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(1);t.createOneObstacle=function(e,t,n,o){void 0===o&&(o="forest");var a={x:t,y:n};return"forest"===o?i.drawObstacle(a.x,a.y,r.gridSize,r.gridSize,"./src/img/terrain/trees.png"):"mountain"===o?i.drawObstacle(a.x,a.y,r.gridSize,r.gridSize,"./src/img/terrain/mountain.png"):"river"===o&&i.drawObstacle(a.x,a.y,r.gridSize,r.gridSize,"./src/img/terrain/river.jpg"),i.deleteObjectFromArray(a,e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(10),i=n(0),o=n(1);t.createObstacles=function(e,t,n,a,s){void 0===s&&(s="forest");for(var l=r.initialMap,u=e;u<=t;u+=i.gridSize)for(var c=n;c<=a;c+=i.gridSize){var d={x:u,y:c};l=o.deleteObjectFromArray(d,l);var f=void 0;"forest"===s?f="./src/img/terrain/trees.png":"mountain"===s?f="/src/img/terrain/mountain.png":"river"===s&&(f="./src/img/terrain/river.jpg"),o.drawObstacle(d.x,d.y,i.gridSize,i.gridSize,f)}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.createUnitObstacle=function(e,t,n){var i={x:t,y:n};return r.deleteObjectFromArray(i,e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(10);t.findXInSearchMap=function(e,n,o){if(n>=e){var a=Math.floor(e+(n-e)/2),s=a*r.gridSize;if(o>=s&&o<s+r.gridSize)return i.searchMap[s];if(o===s+r.gridSize)return i.searchMap[s+r.gridSize];if(s>o)return t.findXInSearchMap(e,a-1,o);if(s<o)return t.findXInSearchMap(a+1,n,o)}},t.coordinateYBinarySearch=function(e,n,i,o){if(n>=e){var a=Math.floor(e+(n-e)/2),s=o[a];if(!s)return null;if(i>=s.y&&i<s.y+r.gridSize)return o[a];if(i===s.y+r.gridSize)return o[a+1];if(s.y>i)return t.coordinateYBinarySearch(e,a-1,i,o);if(s.y<i)return t.coordinateYBinarySearch(a+1,n,i,o)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getMinValueFromNodes=function(e,t){for(var n=t[0],r=1;r<t.length;++r)n[e]>t[r][e]&&(n=t[r]);return n[e]},t.getMaxValueFromNodes=function(e,t){for(var n=t[0],r=1;r<t.length;++r)n[e]<t[r][e]&&(n=t[r]);return n[e]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(167);t.getRandomNode=r.getRandomNode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(72);t.getRandomNode=function(e){return r.shuffleNodes(e)[0]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r};t.assignRandomValue=function(e){for(var t=0,n=e;t<n.length;t++){var r=n[t],i=Math.random();r.randomValue=i}return e},t.shuffleNodes=function(e){for(var n=Object.assign([],e),i=t.assignRandomValue(n),o=0;o<i.length;++o){for(var a=o,s=o+1;s<i.length;++s)i[s].randomValue===i[a].randomValue&&(a=s),i[s].randomValue<i[a].randomValue&&(a=s);a!==o&&r(i,a,o)}for(var l=[],u=0,c=i;u<c.length;u++){var d=c[u];delete d.randomValue,l.push(d)}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(170);t.getSurroundedBlockedNodes=r.getSurroundedBlockedNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(31),i=n(3),o=n(1);t.getSurroundedBlockedNodes=function(e){var t,n=r.getSurroundedNodes(e,1),a=[];t="player"===e.controlBy?i.playerUnits:i.computerUnits;for(var s=o.deleteUnitFromArray(e,t),l=0,u=n;l<u.length;l++)for(var c=u[l],d=0,f=s;d<f.length;d++){var h=f[d];h.currentNode.x===c.x&&h.currentNode.y===c.y&&(a=o.addNodeIntoArray(c,a)),h.nextNode.x===c.x&&h.nextNode.y===c.y&&(a=o.addNodeIntoArray(c,a))}return a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(32);t.getSurroundedEnemies=function(e,t){void 0===t&&(t=1);var n=[],o=[];o="computer"===e.controlBy?Object.assign([],r.playerUnits):Object.assign([],r.computerUnits);for(var a=0,s=i.getSurroundedNodes(e,t);a<s.length;a++)for(var l=s[a],u=0,c=o;u<c.length;u++){var d=c[u];l.x===d.x&&l.y===d.y&&n.push(d)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(32),o=n(20),a=n(8);t.getSurroundedAllies=function(e){var t,n=[],s=[];s="computer"===e.controlBy?Object.assign([],r.computerUnits):Object.assign([],r.playerUnits),t=a.deleteUnitFromArray(e,s);for(var l=0,u=i.getSurroundedNodes(e,3);l<u.length;l++)for(var c=u[l],d=0,f=t;d<f.length;d++){var h=f[d],g=o.getNodeFromMap(h.x,h.y);c.x===g.x&&c.y===g.y&&n.push(h)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(174);t.getUnitsMinProperty=r.getUnitsMinProperty,t.getUnitsMaxProperty=r.getUnitsMaxProperty;var i=n(176);t.anotherUnitIsOnTheWay=i.anotherUnitIsOnTheWay;var o=n(8);t.addUnitIntoArray=o.addUnitIntoArray,t.deleteUnitFromArray=o.deleteUnitFromArray,t.deleteUnitFromArmy=o.deleteUnitFromArmy,t.getDistanceBetweenTwoUnitsInGrids=o.getDistanceBetweenTwoUnitsInGrids,t.isUnitInArray=o.isUnitInArray},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(175);t.getUnitsMinProperty=r.getUnitsMinProperty,t.getUnitsMaxProperty=r.getUnitsMaxProperty},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getUnitsMinProperty=function(e,t){if(t.length>0){for(var n=t[0][e],r=1;r<t.length;++r)n>t[r][e]&&(n=t[r][e]);return n}},t.getUnitsMaxProperty=function(e,t){if(t.length>0){for(var n=t[0][e],r=1;r<t.length;++r)n<t[r][e]&&(n=t[r][e]);return n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(177);t.anotherUnitIsOnTheWay=r.anotherUnitIsOnTheWay;var i=n(178);t.getUnitsOnTheNode=i.getUnitsOnTheNode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(8),i=n(3);t.anotherUnitIsOnTheWay=function(e){for(var t=Object.assign([],i.units),n=r.deleteUnitFromArray(e,t),o=e.nextNode,a=0,s=n;a<s.length;a++){var l=s[a];if(o.x===l.currentNode.x&&o.y===l.currentNode.y)return!0;if(o.x===l.nextNode.x&&o.y===l.nextNode.y)return!0}return!1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(8);t.getUnitsOnTheNode=function(e,t,n){void 0===n&&(n=null);Object.assign([],t);var i=Object.assign([],t);n&&(i=r.deleteUnitFromArray(n,t));for(var o=e.x,a=e.y,s=[],l=0,u=i;l<u.length;l++){var c=u[l],d=c.currentNode.x,f=c.currentNode.y,h=c.nextNode.x,g=c.nextNode.y;d===o&&f===a?s.push(c):h===o&&g===a&&s.push(c)}return s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(180);t.drawBackground=r.drawBackground;var i=n(181);t.drawObstacle=i.drawObstacle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(1),o=n(0);t.drawBackground=function(e){i.loadImage(e,function(e,t){r.backgroundCtx.drawImage(t,0,0,o.MAP_WIDTH,o.MAP_HEIGHT)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(1);t.drawObstacle=function(e,t,n,o,a){i.loadImage(a,function(i,a){r.terrainCtx.drawImage(a,e,t,n,o)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(75),i=n(46);t.chooseUnitType=function(e,t,n,o){if("archers"===e||"Archers"===e)return new r.Archers(i.unitId,t,n,o);if("heavyCavalry"===e||"HeavyCavalry"===e)return new r.HeavyCavalry(i.unitId,t,n,o);if("heavyInfantry"===e||"HeavyInfantry"===e)return new r.HeavyInfantry(i.unitId,t,n,o);if("hoplites"===e||"Hoplites"===e)return new r.Hoplites(i.unitId,t,n,o);if("lightCavalry"===e||"LightCavalry"===e)return new r.LightCavalry(i.unitId,t,n,o);if("lightInfantry"===e||"LightInfantry"===e)return new r.LightInfantry(i.unitId,t,n,o);if("militia"===e||"Militia"===e)return new r.Militia(i.unitId,t,n,o);if("peltasts"===e||"Peltasts"===e)return new r.Peltasts(i.unitId,t,n,o);if("pikemen"===e||"Pikemen"===e)return new r.Pikemen(i.unitId,t,n,o);if("scouts"===e||"Scouts"===e)return new r.Scouts(i.unitId,t,n,o);throw new Error("No existing unit type "+e)}},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="High range skirmishers armed with bows",o.cost=50,o.advantageOver=["Pikemen","Hoplites"],o.vulnerableAgainst=["LightCavalry","HeavyCavalry"],o.name="Archers",o.type="skirmishers",o.imgSrc="./src/img/units/pikemen.jpg",o.health=25,o.speed=25,o.armour=2,o.range=8,o.mobility=4,o.meleeDamage=7,o.missileDamage=7,o.shotsRemained=10,o.charge=1,o.discipline=40,o.weight=20,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(185);t.radius=r.radius},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.radius=13},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="heavy and cavalry aimed to break through enemy's lines",o.cost=150,o.advantageOver=["Archers","Peltasts"],o.vulnerableAgainst=["Pikemen","Hoplites"],o.name="HeavyCavalry",o.type="cavalry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=150,o.speed=35,o.armour=8,o.range=0,o.mobility=5,o.meleeDamage=12,o.missileDamage=0,o.charge=8,o.discipline=70,o.initialWeight=100,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Heavily armed infantry trained to mount frontal assaults",o.cost=70,o.advantageOver=["LightInfantry","Militia"],o.vulnerableAgainst=[],o.name="HeavyInfantry",o.type="infantry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=170,o.speed=18,o.armour=8,o.range=0,o.mobility=3,o.meleeDamage=12,o.missileDamage=0,o.charge=4,o.discipline=70,o.initialWeight=60,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Infantry armed with spears and shields",o.cost=80,o.advantageOver=["LightCavalry","HeavyCavalry"],o.vulnerableAgainst=["Archers","Peltasts"],o.name="Hoplites",o.type="spearmen",o.imgSrc="./src/img/units/hoplites.jpg",o.health=190,o.speed=12,o.armour=7,o.range=0,o.mobility=1,o.meleeDamage=16,o.missileDamage=0,o.charge=1,o.discipline=90,o.initialWeight=70,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Light and fast cavalry",o.cost=90,o.advantageOver=["Archers","Peltasts"],o.vulnerableAgainst=["Hoplites","Pikemen"],o.name="LightCavalry",o.type="cavalry",o.imgSrc="./src/img/units/lightCavalry.png",o.health=80,o.speed=40,o.armour=2,o.range=0,o.mobility=7,o.meleeDamage=8,o.missileDamage=0,o.charge=6,o.discipline=40,o.initialWeight=80,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Frontline soldiers trained for hand-to-hand combat with their enemies",o.cost=30,o.advantageOver=[],o.vulnerableAgainst=[],o.name="LightInfantry",o.type="infantry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=80,o.speed=22,o.armour=2,o.range=0,o.mobility=5,o.meleeDamage=8,o.missileDamage=0,o.charge=2,o.discipline=30,o.initialWeight=40,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="A military force that is raised from the civil population to supplement a regular army in an emergency.",o.cost=20,o.advantageOver=[],o.vulnerableAgainst=[],o.name="Militia",o.type="infantry",o.imgSrc="./src/img/units/pikemen.jpg",o.health=120,o.speed=25,o.armour=1,o.range=0,o.mobility=3,o.meleeDamage=7,o.missileDamage=0,o.charge=1,o.discipline=10,o.initialWeight=30,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Low range skirmishers armed with javelins",o.cost=50,o.advantageOver=["Hoplites","Pikemen"],o.vulnerableAgainst=["LightCavalry","HeavyCavalry"],o.name="Peltasts",o.type="skirmishers",o.imgSrc="./src/img/units/pikemen.jpg",o.health=50,o.speed=22,o.armour=4,o.range=3,o.ammunition=10,o.mobility=6,o.meleeDamage=4,o.missileDamage=12,o.shotsRemained=5,o.charge=1,o.discipline=50,o.initialWeight=25,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="Infantry armed with long spears",o.cost=80,o.advantageOver=["HeavyCavalry","LightCavalry"],o.vulnerableAgainst=["Archers","Peltasts"],o.name="Pikemen",o.type="spearmen",o.imgSrc="./src/img/units/pikemen.jpg",o.health=120,o.speed=10,o.armour=4,o.range=0,o.mobility=1,o.meleeDamage=24,o.missileDamage=0,o.charge=1,o.discipline=80,o.initialWeight=90,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";var r=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(t,"__esModule",{value:!0});var i=function(e){function t(t,n,r,i){void 0===i&&(i="player");var o=e.call(this,t,n,r,i)||this;return o.description="small and mobile band that inteded to descover the map",o.cost=20,o.advantageOver=[],o.vulnerableAgainst=[],o.name="Scouts",o.type="scouts",o.imgSrc="./src/img/units/pikemen.jpg",o.health=60,o.speed=27,o.armour=1,o.range=0,o.mobility=9,o.meleeDamage=7,o.missileDamage=0,o.charge=1,o.discipline=10,o.initialWeight=20,o.weight=o.initialWeight,o.initialHealth=o.health,o}return r(t,e),t}(n(6).default);t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(17),o=n(3),a=n(33);t.onChooseUnit=function(e,t,n){for(var s=null,l=0,u=e;l<u.length;l++){var c=(p=u[l]).x+r.gridSize,d=p.y+r.gridSize;if(t>=p.x&&t<c&&n>=p.y&&n<d){console.log("unit",p.name," was chosen"),p.isCurrentlyChosen=!0,s=p;break}}for(var f=a.UNIT_LEFT_PANEL_WIDTH,h=r.CANVAS_HEIGHT-a.UNIT_PANEL_HEIGHT,g=h+a.UNIT_ICON_HEIGHT,y=0;y<o.playerUnits.length;++y){var v=f+a.UNIT_ICON_WIDTH*(y+1),m=v+a.UNIT_ICON_WIDTH;if(t>=v&&t<m&&n>=h&&n<g){var p;(p=o.playerUnits[y]).isCurrentlyChosen=!0,s=p;break}}i.assignCurrentlyChosenUnit(s)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(76);t.createUnit=r.createUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(81);t.armourPenetration=r.armourPenetration;var i=n(82);t.checkAttackSide=i.checkAttackSide;var o=n(200);t.charge=o.charge,t.calculateCharge=o.calculateCharge;var a=n(47);t.calculateDamage=a.calculateDamage,t.calculateDamageBaseOnEnemyPosition=a.calculateDamageBaseOnEnemyPosition,t.calculateDamageWhenItsLessThanOne=a.calculateDamageWhenItsLessThanOne;var s=n(83);t.removeUnitFromEnemiesFightAgainst=s.removeUnitFromEnemiesFightAgainst,t.findUnitInFightAgainst=s.findUnitInFightAgainst;var l=n(84);t.isUnitFighting=l.isUnitFighting,t.checkHealth=l.checkHealth,t.meleeAttack=l.meleeAttack,t.meleeCombat=l.meleeCombat;var u=n(89);t.refreshment=u.refreshment},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.armourPenetration=function(e,t){var n=Math.random();return e>t?n<.1?e:e<.1?Math.round(e-t/2):e-t:e<=t?n<.2?1:0:void 0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.checkAttackSide=function(e,t){var n=t.currentNode,i=e.currentNode;if(t.figthAgainst.front.id===e.id)return"front";if(!t.isFighting&&t.isMoving){var o=t.nextNode;return o.x===i.x&&o.y===i.y?"front":o.x-i.x>r.gridSize||o.y-i.y>r.gridSize?"back":"side"}if(t.isFighting){var a=t.figthAgainst.front.currentNode;return i.x===n.x&&i.x===a.x?"back":i.y===n.y&&i.y===a.y?"back":Math.abs(a.x-n.x)===r.gridSize&&Math.abs(a.x-i.x)===2*r.gridSize?"back":Math.abs(a.y-n.y)===r.gridSize&&Math.abs(a.y-i.y)===2*r.gridSize?"back":"side"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(201);t.charge=r.charge,t.calculateCharge=r.calculateCharge},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(82),i=n(47);t.charge=function(e,n){var i=r.checkAttackSide(e,n),o=t.calculateCharge(e,n,i);n.health=Math.round(n.health-o)},t.calculateCharge=function(e,t,n){var r;return"front"===n?(r=e.charge-t.armour)<1?i.calculateDamageWhenItsLessThanOne(r):r:"side"===n?(r=1.5*e.charge-t.armour)<1?i.calculateDamageWhenItsLessThanOne(r):r:"back"===n?e.charge:void 0}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.calculateDamage=function(e,t){var n=e.health,r=e.condition;return n>=80&&r>=80?t:n>=80&&r>=50||r>=80&&n>=50?Math.round(.9*t):n>=50&&r>=50?Math.round(.8*t):n>=50||r>=50?Math.round(.7*t):Math.round(.6*t)},t.calculateDamageBaseOnEnemyPosition=function(e,n){return e<=1?t.calculateDamageWhenItsLessThanOne(e):"front"===n?e:"flank"===n?(r=Math.round(.3*e))<=1?t.calculateDamageWhenItsLessThanOne(r):r:"rear"===n?(r=Math.round(.1*e))<=1?t.calculateDamageWhenItsLessThanOne(r):r:void 0;var r},t.calculateDamageWhenItsLessThanOne=function(e){return Math.random()>.5?0:1}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.removeUnitFromEnemiesFightAgainst=function(e){var t;if(0!==(t="computer"===e.controlBy?r.playerUnits:r.computerUnits).length)for(var n=0,i=t;n<i.length;n++){i[n].removeEnemyFromFightAgainst(e)}},t.findUnitInFightAgainst=function(e){var t=[],n=[];"computer"===e.controlBy?t=r.playerUnits:"player"===e.controlBy&&(t=r.computerUnits);for(var i=0,o=t;i<o.length;i++){var a=o[i],s=a.figthAgainst;s.front.id===e.id?n.push(a):s.rear.id===e.id&&n.push(a);for(var l=0,u=s.flank;l<u.length;l++){u[l].id===e.id&&n.push(a)}}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(85),o=n(87),a=n(83),s=n(88),l=n(2),u=n(89),c=n(0);t.checkHealth=function(){return new Promise(function(e){for(var t=0,n=r.units;t<n.length;t++){var d=n[t];if(d.health<=0){if("player"===d.controlBy&&o.removeUnitFromSpottedUnits(d),a.findUnitInFightAgainst(d).length>0)for(var f=0,h=a.findUnitInFightAgainst(d);f<h.length;f++){h[f].removeEnemyFromFightAgainst(d)}i.removeUnit(d),l.ctx.clearRect(d.x,d.y,c.gridSize,c.gridSize)}else s.isUnitFighting(d),u.refreshment(d)}e()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(9),o=n(23),a=n(34),s=n(86);t.removeUnit=function(e){e&&(a.clearUnitImage(e),r.removeFromUnits(e),i.removeUnitFromVisibleUnits(e),s.removeUnitFromSpottedUnits(e),"player"===e.controlBy&&o.removeFromRevealedUnits(e))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(17);t.assignCurrentlyChosenUnit=r.assignCurrentlyChosenUnit;var i=n(87);t.addUnitToSpottedUnits=i.addUnitToSpottedUnits,t.spottedUnits=i.spottedUnits,t.removeUnitFromSpottedUnits=i.removeUnitFromSpottedUnits;var o=n(46);t.incUnitId=o.incUnitId,t.unitId=o.unitId;var a=n(9);t.addUnitIntoVisibleUnits=a.addUnitIntoVisibleUnits,t.removeUnitFromVisibleUnits=a.removeUnitFromVisibleUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.refreshment=function(e){e.isFighting||e.isMoving||e.condition<100&&e.increaseCondition(1)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(90),i=n(47),o=n(81),a=n(85),s=n(18),l=n(91);t.meleeAttack=function(e,t,n){return void 0===n&&(n="front"),new Promise(function(u){var c=r.randomizeMeleeDamage(e.meleeDamage),d=i.calculateDamage(e,c);d<1&&(d=1);var f=i.calculateDamageBaseOnEnemyPosition(d,n),h=t.armour;if(t.health<=0)return console.error("defendUnit is destroyed"),e.removeEnemyFromFightAgainst(t),a.removeUnit(t),void l.displayUnitIcons();t.health=Math.round(t.health-o.armourPenetration(f,h)),e.condition-=1,s.drawUnitIcon(t),u()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(1),o=n(84),a=n(18);t.meleeCombat=function(){for(var e=0,t=r.units;e<t.length;e++){var n=t[e];if(!i.isObjectEmpty(n.figthAgainst.front)){if(!n.figthAgainst.front.isFighting)return void a.drawUnitIcon(n);o.meleeAttack(n,n.figthAgainst.front,"front")}if(!i.isObjectEmpty(n.figthAgainst.rear)){if(!n.figthAgainst.rear.isFighting)return void a.drawUnitIcon(n);o.meleeAttack(n,n.figthAgainst.rear,"rear")}if(n.figthAgainst.flank.length>0)for(var s=0,l=n.figthAgainst.flank;s<l.length;s++){var u=l[s];if(!u.isFighting)return void a.drawUnitIcon(n);o.meleeAttack(n,u,"flank")}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(211);t.attackEnemy=r.attackEnemy;var i=n(50);t.moveTo=i.moveTo;var o=n(35);t.pursueUnit=o.pursueUnit;var a=n(36);t.updateUnit=a.updateUnit},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(20),i=n(10),o=n(35),a=n(49);t.attackEnemy=function(e,t){if(e.isMoving)e.setUnitToPursue(t);else{var n=e.x,s=e.y,l=t.x,u=t.y;e.setUnitToPursue(t);var c=r.getNodeFromMap(n,s),d=r.getNodeFromMap(l,u),f=a.aStar(i.initialMap,c,d);o.pursueUnit(e,t,l,u,0,f,!0)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.findPathFromOneNodeToAnother=function(e,t,n,r){var i=n-e,o=r-t,a=e,s=n,l=t,u=r,c=[];if(a===s&&l===u)return c.push({x:a,y:l}),c;if(a<=s){if(Math.abs(i)>=Math.abs(o)){if(l>u)for(var d=a;d<=s;++d){var f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}if(l<=u)for(d=a;d<=s;++d){f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}}if(Math.abs(i)<Math.abs(o)){if(l>u)for(f=l;f>=u;--f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}if(l<=u)for(f=l;f<=u;++f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}}}if(a>s){if(Math.abs(i)>=Math.abs(o)){if(l>u)for(d=a;d>=s;--d){f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}if(l<=u)for(d=a;d>=s;--d){f=Math.round(l+o*(d-a)/i);c.push({x:d,y:f})}}if(Math.abs(i)<Math.abs(o)){if(l>u)for(f=l;f>=u;--f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}if(l<=u)for(f=l;f<=u;++f){d=Math.round(a+i*(f-l)/o);c.push({x:d,y:f})}}}return c}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.calculateChanceToGetOutOfCombat=function(e){var t=0,n=0,i=(e.speed,e.mobility),o=0,a=!1;if(r.isObjectEmpty(e.figthAgainst.front)||(n++,o+=e.figthAgainst.front.speed),r.isObjectEmpty(e.figthAgainst.rear)||(n++,o+=e.figthAgainst.rear.speed,a=!0),e.figthAgainst.flank.length>0)for(var s=0,l=e.figthAgainst.flank;s<l.length;s++){n++,o+=l[s].speed}return 1===n?t-=.1:2===n?t-=.3:n>2&&n<=4?t-=.4:n>4&&(t-=.5),a&&(t-=.5),e.condition>=50&&e.condition<80?t-=.1:e.condition>=25&&e.condition<50?t-=.2:e.condition<25&&(t-=.4),e.speed>=o?e.speed/o>=3?t+=.8:e.speed/o>2&&e.speed/o<3?t+=.6:e.speed/o>=1?t+=.4:t+=.2:o/e.speed<=1.25&&(t+=.1),e.mobility>=2&&e.mobility<3?t+=.1:i>=3&&i<5?t+=.3:5===i?t+=.5:i>=5&&i<7?t+=.7:i>=7&&i<8?t+=.8:i>=8&&(t+=.9),t<=0&&(t=.1),t>=1&&(t=.9),t},t.unitCanGetOutOfCombat=function(e){var n=t.calculateChanceToGetOutOfCombat(e),r=Math.random();return r>=0&&r<=n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(0),o=n(2),a=n(36),s=n(35);t.makeMovementInUpdateUnit=function(e,n,s,l,u,c,d,f,h){if(e.x===s.x&&e.y===s.y&&(h++,a.updateUnit(e,u,h,c,d,null,!1)),!(f>=l.length)){f>0?(l[f-1].x-.5*i.gridSize,l[f-1].y-.5*i.gridSize):(l[f].x-.5*i.gridSize,l[f].y-.5*i.gridSize);var g=e.centerX-e.radius,y=e.centerY-e.radius,v=2*e.radius;o.ctx.clearRect(g,y,v,v);var m=l[f].x,p=l[f].y,M=m-.5*i.gridSize,U=p-.5*i.gridSize;e.setX(M),e.setY(U),r.drawUnit(e),setTimeout(function(){f++,t.makeMovementInUpdateUnit(e,n,s,l,u,c,d,f,h)},Math.round(1e3/e.speed))}},t.makeMovementInPursueUnit=function(e,n,a,l,u,c,d,f,h,g){if(e.x===l.x&&e.y===l.y&&(g++,s.pursueUnit(e,n,d,f,g,c,!1)),!(h>=u.length)){h>0?(u[h-1].x-.5*i.gridSize,u[h-1].y-.5*i.gridSize):(u[h].x-.5*i.gridSize,u[h].y-.5*i.gridSize);var y=e.centerX-e.radius,v=e.centerY-e.radius,m=2*e.radius;o.ctx.clearRect(y,v,m,m);var p=u[h].x,M=u[h].y;e.setX(p-.5*i.gridSize),e.setY(M-.5*i.gridSize),r.drawUnit(e),setTimeout(function(){h++,t.makeMovementInPursueUnit(e,n,a,l,u,c,d,f,h,g)},Math.round(1e3/e.speed))}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(70),i=n(98),o=n(3);t.getPriorityUnit=function(e,t){var n=Object.assign([],t),o=r.findClosestUnitsToTheNodeCenter(e,n);if(1===o.length)return o[0];if(o.length>1){var a=r.getBestUnitsByProperty(o,"speed");if(1===a.length)return a[0];if(a.length>1)return i.shuffleUnits(a)[0]}},t.unitCanMoveToTheNode=function(e,n){var r=t.getPriorityUnit(e,o.units),i=!1;return n.id===r.id&&(i=!0),i}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r};t.shuffleUnits=function(e){for(var t=Object.assign([],e),n=function(e){for(var t=Object.assign([],e),n=0,r=t;n<r.length;n++){var i=r[n],o=Math.random();i.randomValue=o}return t}(e),i=0;i<n.length;++i){for(var o=i,a=i+1;a<e.length;++a)n[a].randomValue===n[o].randomValue&&(o=a),n[a].randomValue<n[o].randomValue&&(o=a);o!==i&&r(t,o,i)}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setRandomValue=function(e){for(var t=[],n=0,r=e;n<r.length;n++){var i=r[n],o=Math.random(),a={id:i.id,randomValue:o};t.push(a)}return t},t.swap=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r},t.shuffleID=function(e){for(var n=Object.assign([],e),r=t.setRandomValue(n),i=0;i<r.length;++i){for(var o=i,a=i+1;a<r.length;++a)r[a].randomValue===r[o].randomValue&&(o=a),r[a].randomValue<r[o].randomValue&&(o=a);o!==i&&t.swap(r,o,i)}return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(5);t.getInterceptionNodes=function(e){for(var t=e.currentNode,n=[],o=t.x-r.gridSize;o<=t.x+r.gridSize;o+=r.gridSize){(s=i.getNodeFromMap(o,t.y))&&o!==t.x&&n.push(s)}for(var a=t.y-r.gridSize;a<=t.y+r.gridSize;a+=r.gridSize){var s;(s=i.getNodeFromMap(t.x,a))&&a!=t.y&&n.push(s)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(220);t.spotEnemy=r.spotEnemy,t.isUnitSpottedByEnemy=r.isUnitSpottedByEnemy,t.spotUnits=r.spotUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),o=n(80),a=n(86),s=n(23),l=n(3),u=n(1),c=n(30);t.spotEnemy=function(e){var t;"player"===e.controlBy&&(t=Object.assign([],l.computerUnits)),"computer"===e.controlBy&&(t=Object.assign([],l.playerUnits));for(var n=e.visibility*i.gridSize,r=e.currentNode.x,d=e.currentNode.y,f=u.getNodeFromMap(r,d),h=0,g=t;h<g.length;h++){var y=g[h],v=y.currentNode.x,m=y.currentNode.y,p=u.getNodeFromMap(v,m),M=Math.abs(f.x-p.x),U=Math.abs(f.y-p.y);n>=M&&n>=U&&("computer"===e.controlBy&&!1===y.isVisible&&c.removeFromHidingEnemies(y),y.isVisible=!0,o.drawUnit(y),a.addUnitIntoVisibleUnits(y),"computer"===e.controlBy&&(a.addUnitToSpottedUnits(y),s.addToRevealedUnits(y)))}},t.isUnitSpottedByEnemy=function(e){var t;if("player"===e.controlBy&&(t=Object.assign([],l.computerUnits)),"computer"===e.controlBy&&(t=Object.assign([],l.playerUnits)),0!==t.length){for(var n=e.currentNode.x,s=e.currentNode.y,d=u.getNodeFromMap(n,s),f=!1,h=0,g=t;h<g.length;h++){var y=g[h],v=y.visibility*i.gridSize,m=y.currentNode.x,p=y.currentNode.y,M=u.getNodeFromMap(m,p),U=Math.abs(d.x-M.x),_=Math.abs(d.y-M.y);v>=U&&v>=_&&(a.addUnitIntoVisibleUnits(e),f=!0,!1===e.isVisible&&"player"===e.controlBy&&c.removeFromHidingEnemies(e),e.isVisible=!0,"computer"===e.controlBy&&a.addUnitToSpottedUnits(y),"computer"===e.controlBy&&o.drawUnit(e))}f||(a.removeUnitFromVisibleUnits(e),"player"===e.controlBy&&!0===e.isVisible&&c.addToHidingEnemies(e),e.isVisible=!1,"computer"!==e.controlBy||e.isMoving||r.ctx.clearRect(e.x,e.y,i.gridSize,i.gridSize))}},t.spotUnits=function(e){if(e.length>0)for(var n=0,r=e;n<r.length;n++){var i=r[n];t.isUnitSpottedByEnemy(i)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(222),o=n(11),a=n(45),s=n(12),l=n(29),u=n(28),c=n(16),d=n(67),f=n(19);t.battleListener=function(){o.spotUnits(r.units),o.meleeCombat(),setTimeout(function(){t.battleListener()},600)},t.isBattleEnd=function(){var e=r.computerUnits.length,n=r.playerUnits.length;0!==e&&0!==n||(t.showBattleResultCanvas(),a.finishBattle(),t.checkWinner(e,n))},t.checkWinner=function(e,t){0===e?i.drawMessage(f.battleResultCtx,"Victory"):0===t&&i.drawMessage(f.battleResultCtx,"Defeat")},t.showBattleResultCanvas=function(){s.dragAndDropCanvas.style.zIndex="0",s.mainMenu.style.zIndex="0",d.battleResultCanvas.style.zIndex="7",s.auxiliaryCanvas.style.zIndex="6",l.eventCanvas.style.zIndex="5",s.canvas.style.zIndex="4",u.pathCanvas.style.zIndex="3",s.terrain.style.zIndex="2",s.backgroundCanvas.style.zIndex="1",c.loadingCanvas.style.zIndex="0"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.drawMessage=function(e,t){e.fillStyle="#000",e.font="256px serif",e.textAlign="left",e.fillText(t,r.MAP_WIDTH/2-400,r.CANVAS_HEIGHT/2)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(19),i=n(0),o=n(1);t.drawClickedIcon=function(e,t){r.eventCtx.clearRect(0,0,i.MAP_WIDTH,i.MAP_HEIGHT);var n=o.getNodeFromMap(e,t);if(n){var a=n.x+i.gridSize/2,s=n.y+i.gridSize/2,l=Math.round(i.gridSize/3);r.eventCtx.beginPath(),r.eventCtx.arc(a,s,l,0,2*Math.PI),r.eventCtx.strokeStyle="#20ef09",r.eventCtx.stroke(),r.eventCtx.closePath(),setTimeout(function(){r.eventCtx.clearRect(0,0,i.MAP_WIDTH,i.MAP_HEIGHT)},1e3)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(225),i=n(230),o=n(231),a=n(101);t.computerAction=function(){var e=new r.default;a.calculateTotalPower(),setTimeout(function(){i.needToChangePosition(e)&&(console.error("Need to change position"),o.moveUnits()),e.setPreviousState(),t.computerAction()},600)},t.computerMovement=function(){o.moveUnits(),t.computerAction()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(101),o=n(9),a=n(30),s=function(){function e(){var e=i.calculateTotalPlayerPower(),t=i.calculateTotalComputerPower();this.playerUnits=Object.assign([],r.playerUnits),this.computerUnits=Object.assign([],r.computerUnits),this.playerTotalHealth=e.totalHealth,this.computerTotalHealth=t.totalHealth,this.visibleForPlayerUnits=Object.assign([],o.visibleForPlayerUnits),this.visibleForComputerUnits=Object.assign([],o.visibleForComputerUnits),this.hidingEnemies=Object.assign([],a.hidingEnemies)}return e.prototype.setPreviousState=function(){var e=i.calculateTotalPlayerPower(),t=i.calculateTotalComputerPower();this.playerUnits=Object.assign([],r.playerUnits),this.computerUnits=Object.assign([],r.computerUnits),this.playerTotalHealth=e.totalHealth,this.computerTotalHealth=t.totalHealth,this.visibleForPlayerUnits=Object.assign([],o.visibleForPlayerUnits),this.visibleForComputerUnits=Object.assign([],o.visibleForComputerUnits),this.hidingEnemies=Object.assign([],a.hidingEnemies)},e}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.initialComputerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.initialPlayerPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.visiblePlayerUnitsPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(13);t.revealedUnitsPower=new r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(9),i=n(3),o=n(51),a=n(52),s=n(30),l=n(37);t.needToChangePosition=function(e){return!!l.isUnitsChanged(r.visibleForComputerUnits,e.visibleForComputerUnits)||(i.computerUnits.length!=e.computerUnits.length||(i.playerUnits.length!=e.playerUnits.length||(1-e.playerTotalHealth/o.playerPower.totalHealth>=.2||(1-e.computerTotalHealth/a.computerPower.totalHealth>=.2||(!!l.isUnitsChanged(s.hidingEnemies,e.hidingEnemies)||!!l.isUnitsChanged(l.getFightingUnits(i.computerUnits),l.getFightingUnits(e.computerUnits)))))))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=n(232),o=n(103),a=n(24),s=n(54),l=n(106),u=n(55),c=n(247),d=n(248);t.moveUnits=function(){console.error("moveUnits");var e=u.generateCurrentCommandNumber();c.setCommandNumberToUnits(e);for(var t=i.bestActionAlgorithm(),n=0,f=r.computerUnits;n<f.length;n++){var h=f[n];console.error("command unit "+h.id+" "+t.getCommandsByUnitId(h.id).command)}for(var g=0,y=r.computerUnits;g<y.length;g++){h=y[g];var v=t.getCommandsByUnitId(h.id),m=v.command;v.node;if(m===o.Command.Attack)a.attackEnemy(h,v.actionUnit);else if(m===o.Command.MoveToNode)d.advance(h,v.node,e,!0);else if(m===o.Command.BeCloseToUnit){var p=v.actionUnit;s.assessVulnerability(h)>=s.assessVulnerability(p)?l.beCloseTo(h,p,e,!0,!0):l.beCloseTo(h,p,e,!1,!0)}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(233),i=n(3),o=n(237),a=n(238),s=n(239);t.bestActionAlgorithm=function(){for(var e=new o.default,t=0;t<=10;){for(var n=new a.default,l=0,u=i.computerUnits;l<u.length;l++){var c=u[l],d=r.generateRandomAction(c);n.addCommand(c.id,d)}var f=n.getUnitsWithSimulatingPositions(),h=s.calculateTotalEfficiency(f);e.insert(h,n),t+=1}return e.extractMax()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(9),i=n(53),o=n(3),a=n(1),s=n(5),l=n(234),u=n(103),c=n(236);t.generateRandomAction=function(e){var t,n=null,l=d();if(0!==r.visibleForComputerUnits.length||l!==u.Command.MoveToNode&&l!==u.Command.Attack)if(l===u.Command.Attack)t=(n=i.getRandomUnit(r.visibleForComputerUnits)).currentNode;else if(l===u.Command.MoveToNode){h=a.getSurroundedNodes(e);t=s.getRandomNode(h)}else l===u.Command.BeCloseToUnit&&(t=(n=i.getRandomUnit(o.computerUnits)).currentNode);else{l=u.Command.MoveToNode;var f=i.getRandomUnit(o.playerUnits),h=a.getSurroundedNodes(f,3);t=s.getRandomNode(h)}return new c.default(e,t,l,n)};var d=function(){var e=l.getRandomValueInRange(0,2);return[u.Command.BeCloseToUnit,u.Command.Attack,u.Command.MoveToNode][e]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(102);t.getRandomValueInRange=r.getRandomValueInRange;var i=n(90);t.randomizeMeleeDamage=i.randomizeMeleeDamage;var o=n(235);t.getRandomValueInRangeWithProbability=o.getRandomValueInRangeWithProbability},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(102);t.getRandomValueInRangeWithProbability=function(e,t,n){if(e>=t)throw new Error("min cannot be more or equal to max");if(!n.interval)throw new Error("probability interval is required");if(2!=n.interval.length)throw new Error("invalid probability interval syntax");if(n.interval[0]<e||n.interval[1]<e)throw new Error("one of probability interval is less than min");if(n.interval[0]>t||n.interval[1]>t)throw new Error("one of probability interval is more than max");if(n.interval[0]>=n.interval[1])throw new Error("invalid probability interval");if(!n.probability)throw new Error("probabilities argument required");if(n.probability<0||n.probability>100)throw new Error("invalid probability value");if(n.probability>0&&n.probability<1)throw new Error("invalid probability value");var i=Math.random(),o=n.interval[0],a=n.interval[1],s=.01*n.probability;return i>=0&&i<=s?r.getRandomValueInRange(o,a):r.getRandomValueInRange(e,t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){return function(e,t,n,r){void 0===r&&(r=null),this.unit=e,this.node=t,this.command=n,this.actionUnit=r}}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.elements=[],this.commandId=1}return e.prototype.insert=function(e,t){this.elements.push({efficiency:e,commands:t,commandId:this.commandId}),this.commandId+=1},e.prototype.extractMax=function(){for(var e=this.elements[0],t=1;t<this.elements.length;++t)this.elements[t].efficiency>e.efficiency&&(e=this.elements[t],t);return this.elements=this.elements.filter(function(t){return t.commandId!==e.commandId}),e.commands},e.prototype.isEmpty=function(){return 0===this.elements.length},e.prototype.clearElements=function(){this.elements=[]},e}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3),i=function(){function e(){this.commands={}}return e.prototype.addCommand=function(e,t){this.commands[e]=t},e.prototype.clearCommands=function(){this.commands={}},e.prototype.getCommandsByUnitId=function(e){return this.commands[e]},e.prototype.getUnitsWithSimulatingPositions=function(){for(var e=[],t=0,n=r.computerUnits;t<n.length;t++){var i=n[t],o=Object.create(i),a=this.getCommandsByUnitId(o.id).node;o.setX(a.x),o.setY(a.y),o.setCurrentNode(a),e.push(o)}return e},e}();t.default=i},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(240);t.calculateTotalEfficiency=function(e){for(var t=0,n=0,i=e;n<i.length;n++){var o=i[n];t+=r.calculateEfficiency(o,e)}return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(241),i=n(1),o=n(242),a=n(9),s=n(37),l=n(38),u=n(244),c=n(105),d=n(245);t.calculateEfficiency=function(e,n){return 0===a.visibleForComputerUnits.length?t.explorationUnitEfficiency(e,n):t.unitEfficiency(e,n)},t.explorationUnitEfficiency=function(e,n){o.assignExplorationTask();var a=r.getExplorationNode(),s=i.getDistanceBetweenTwoNodesInGrids(e.currentNode,a);if("exploration"===e.task){var l=100-10*s;return l=l>0?l:0}return t.unitEfficiency(e,n)},t.unitEfficiency=function(e,t){var n=l.getSurroundedUnits(e,a.visibleForComputerUnits,5),r=l.getSurroundedUnits(e,t,5),i=Object.assign([],r);i.push(e);var o,f,h=n.length,g=r.length,y=c.calculateTotalUnitsWeight(r)+e.weight,v=c.calculateTotalUnitsWeight(n),m=e.health/e.initialHealth,p=s.getTotalUnitsInitialHealth(n),M=(s.getTotalUnitsInitialHealth(r),s.getTotalUnitsInitialHealth(i)),U=s.getTotalUnitsHealth(n),_=(s.getTotalUnitsHealth(r),s.getTotalUnitsHealth(i)),b=U/p,P=_/M;if(1===h&&0===g){var I=n[0],x=I.health/I.initialHealth;return s.isEnemyVulnerableToUnit(e,I)&&m>=.7?100:s.isEnemyDangerousForUnit(e,I)&&x>=.7?0:u.simulateFight(e,I).unitHealthRemain}if(h>1&&0===g)return b>=.6&&m>=.6?(o=(o=e.weight/v)<=2?o:2,Math.round(50*o)):(f=(f=e.health/U)<=2?f:2,Math.round(50*f));if(h>1||g>0)return b>=.6&&P>=.6?(o=(o=(y+e.weight)/v)<=2?o:2,Math.round(50*o)):(f=(f=_/U)<=2?f:2,Math.round(50*f));if(!(0===h&&g>0))return 0;var C=d.calculateTotalVulnerability(r,e)/g-(d.calculateTotalVulnerability(r)/g+1);if(C>0){var T=1.4*C;return T=T<=100?T:100}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(53),i=n(3),o=n(31),a=n(5);t.getExplorationNode=function(){var e=r.getRandomUnit(i.playerUnits),t=o.getSurroundedNodes(e,4);return a.getRandomNode(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(243),i=n(104),o=n(3);t.assignExplorationTask=function(e){void 0===e&&(e=60);var t=r.calculateUnitTypes();if(0===t.scouts&&0===t.cavalry){var n=i.getFreeUnits();if(n&&0!==n.length){var a=i.getBestUnitByProperty("speed");if(a.assignTask("exploration"),n.length>1){var s=[a];i.getBestUnitByProperty("speed",s).assignTask("exploration")}}}else for(var l=0,u=o.computerUnits;l<u.length;l++){var c=u[l],d=Math.round(0/o.computerUnits.length*100);!c.task&&("scouts"===c.type||"cavalry"===c.type)&&d<e&&c.assignTask("exploration")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(51),i=n(52),o=n(3),a=n(23),s=n(31);t.calculateUnitsToBeware=function(e){var t=0;if(0!==o.playerUnits.length)for(var n=0,r=o.playerUnits;n<r.length;n++){var i=r[n];if(0!==e.vulnerableAgainst.length)for(var a=0,s=e.vulnerableAgainst;a<s.length;a++){s[a]===i.name&&t++}}return t},t.calculateSurroundedEnemyPower=function(e){var t={health:0,speed:0,armour:0,meleeDamage:0,missileDamage:0,morale:0,condition:0},n=s.getSurroundedEnemies(e);if(0!==n.length)for(var r=0,i=n;r<i.length;r++){var o=i[r];t.health+=o.health,t.speed+=o.speed,t.armour+=o.armour,t.meleeDamage+=o.meleeDamage,t.missileDamage+=o.missileDamage,t.morale+=o.morale,t.condition+=o.condition}return t},t.calculateSurroundedAlliesPower=function(e){var t={health:0,speed:0,armour:0,meleeDamage:0,missileDamage:0,morale:0,condition:0},n=s.getSurroundedAllies(e);if(0!==n.length)for(var r=0,i=n;r<i.length;r++){var o=i[r];t.health+=o.health,t.speed+=o.speed,t.armour+=o.armour,t.meleeDamage+=o.meleeDamage,t.missileDamage+=o.missileDamage,t.morale+=o.morale,t.condition+=o.condition}return t},t.calculatePowerAdvantageInTheArea=function(e){var n=t.calculateSurroundedEnemyPower(e),r=t.calculateSurroundedAlliesPower(e);return{health:r.health-n.health,speed:r.speed-n.speed,armour:r.armour-n.armour,meleeDamage:r.meleeDamage-n.meleeDamage,missileDamage:r.missileDamage-n.missileDamage,condition:r.condition-n.condition,morale:r.morale-n.morale}},t.calculateUnitTypes=function(e){void 0===e&&(e="computer");var t,n={infantry:0,spearmen:0,lightInfantry:0,heavyInfantry:0,scouts:0,skirmishers:0,cavalry:0};if("computer"===e)t=Object.assign([],o.computerUnits);else if("revealed"===e)t=Object.assign([],a.revealedUnits);else{if("player"!==e)throw new Error("incorrect side argument");t=Object.assign([],o.playerUnits)}for(var r=0,i=t;r<i.length;r++){var s=i[r];"infantry"!==s.type&&"spearmen"!==s.type&&"scouts"!==s.type||(n.infantry+=1),"spearmen"===s.type&&(n.spearmen+=1),"infantry"===s.type&&"HeavyInfantry"!==s.name&&(n.lightInfantry+=1),"HeavyInfantry"===s.name&&(n.heavyInfantry+=1),"scouts"===s.type&&(n.scouts+=1),"skirmishers"===s.type&&(n.skirmishers+=1),"cavalry"===s.type&&(n.cavalry+=1)}return n},t.getUnitTypesInPercentage=function(){var e={infantry:0,spearmen:0,lightInfantry:0,heavyInfantry:0,scouts:0,skirmishers:0,cavalry:0},n=t.calculateUnitTypes(),r=o.computerUnits.length;return e.infantry=Math.round(n.infantry/r*100),e.spearmen=Math.round(n.spearmen/r*100),e.lightInfantry=Math.round(n.lightInfantry/r*100),e.heavyInfantry=Math.round(n.heavyInfantry/r*100),e.scouts=Math.round(n.scouts/r*100),e.skirmishers=Math.round(n.skirmishers/r*100),e.cavalry=Math.round(n.cavalry/r*100),e},t.getInitialPropeties=function(){return{initialNumberOfUnits:o.computerUnits.length,initialNumberOfEnemies:o.playerUnits.length,initialUnitsHealth:i.computerPower.totalHealth,initialEnemiesHealth:r.playerPower.totalHealth}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11);t.simulateFight=function(e,t){for(var n=1,i=e.health,o=t.health,a=e.health,s=t.health;a>=0&&s>=0;){var l=r.calculateDamage(e,e.meleeDamage),u=r.calculateDamage(t,t.meleeDamage);a-=r.armourPenetration(u,e.armour),s-=r.armourPenetration(l,t.armour),n+=1}var c=Math.round(100*a/i),d=Math.round(100*s/o);return{unitHealthRemain:c>=0?c:0,enemyHealthRemain:d>=0?d:0,unitHealth:a,enemyHealth:s,attacks:n}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(54);t.calculateTotalVulnerability=function(e,t){void 0===t&&(t=null);for(var n=0,i=0,o=e;i<o.length;i++){var a=o[i];n+=r.assessVulnerability(a,t)}return n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(105),i=n(37),o=n(38),a=n(3),s=n(23),l=n(1);t.assessVulnerability=function(e,t){void 0===t&&(t=null);var n,u,c=0;"computer"===e.controlBy?(n=Object.assign([],a.computerUnits),u=Object.assign([],s.revealedUnits)):"player"===e.controlBy&&(n=Object.assign([],a.playerUnits),u=Object.assign([],a.computerUnits)),t&&(n=l.deleteUnitFromArray(e,n));var d=o.getSurroundedUnits(e,n,5),f=o.getSurroundedUnits(e,u,5),h=r.calculateTotalUnitsWeight(d)+e.weight,g=r.calculateTotalUnitsWeight(f),y=i.getDangerousUnits(e).length,v=i.containsDangerousUnits(e,f);if(0===d.length&&0===f.length&&(e.speed>=70&&e.speed<80?c+=10:e.speed>=50&&e.speed<70?c+=30:e.speed<50&&(c+=50)),0===d.length&&1==f.length){v&&(c+=70);var m=f[0].speed;e.speed/m>1&&e.speed/m<1.5?c+=h>g?20:35:e.speed/m>=1.5?c+=h>g?5:15:g/h>1.2?c+=40:g/h>1.5&&(c+=90)}return 0===d.length&&f.length>1&&(v&&(c+=70),c+=g/h>=1.5?80:30),d.length>=1&&f.length>1&&(c+=10,v&&(c+=30),g/h>=1.5?c+=50:g/h>=1.2&&(c+=30)),y>0&&e.speed<25&&"skirmishers"!=e.type&&(c+=30),c<0?c=0:c>100&&(c=100),c}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(3);t.setCommandNumberToUnits=function(e){for(var t=0,n=r.computerUnits;t<n.length;t++){n[t].setCommandNumber(e)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(55),i=n(3),o=n(104),a=n(24),s=n(38),l=n(54),u=n(249),c=n(8),d=n(50),f=n(106);t.advance=function(e,n,h,g){if(void 0===g&&(g=!1),h===r.currentCommandNumber){if(g||!e.isMoving&&!e.isFighting)if(console.log("unit "+e.id+" commandNumber "+h),e.currentNode.x!=n.x&&e.currentNode.y!=n.y)d.moveTo(e,n.x,n.y);else if(1===i.computerUnits.length){var y=o.getClosestEnemyToUnit(e);a.attackEnemy(e,y)}else{for(var v=s.getSurroundedUnits(e,i.computerUnits,5),m=new u.default,p=0,M=v;p<M.length;p++){var U=M[p],_=l.assessVulnerability(U);m.insert(U.id,_)}for(;!m.isEmpty();){var b=m.extractMax();U=c.getUnitById(b.key);if(b.value>=80&&U.isFighting){f.beCloseTo(e,U,h,!0);break}}}setTimeout(function(){t.advance(e,n,h)},2e3)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(){this.elements=[]}return e.prototype.insert=function(e,t){this.elements.push({key:e,value:t})},e.prototype.update=function(e,t){for(var n=0,r=this.elements;n<r.length;n++){var i=r[n];i.key==e&&(i.value=t)}},e.prototype.extractMax=function(){for(var e=this.elements[0],t=1;t<this.elements.length;++t)this.elements[t].value>e.value&&(e=this.elements[t],t);return this.elements=this.elements.filter(function(t){return t.key!==e.key}),e},e.prototype.isEmpty=function(){return 0===this.elements.length},e}();t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(251);t.launchGame=r.launchGame},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(252),i=n(66),o=n(45);t.launchGame=function(){o.mainMenuMode?r.launchMainMenu():o.battleMode&&i.launchBattle()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(0),o=n(253),a=n(42),s=n(61),l=n(63),u=n(307),c=n(309),d=n(10),f=n(22),h=n(39),g=n(126),y=n(16);t.launchMainMenu=function(){g.drawLoadingCanvas(),d.initializeMap().then(function(){f.loadUnitIcons().then(function(){r.mainMenuCtx.fillRect(0,0,i.MAP_WIDTH,i.CANVAS_HEIGHT),h.createRoster(),o.displayRoster(),a.displayChosenUnits(),s.displayInfo(),l.displayTitle(),u.dragAndDrop(),c.drawBottomLayout(),f.loadIcons(),y.loadingCanvas.style.zIndex="1"})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(254);t.isUnitSelectedInRoster=r.isUnitSelectedInRoster;var i=n(57);t.displayRoster=i.displayRoster},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(107);t.isUnitSelectedInRoster=r.isUnitSelectedInRoster},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.rosterImgWidth=100,t.rosterImgHeight=100},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(57);t.displayRoster=function(){i.mainMenuCtx.fillStyle="#cdd1d6",i.mainMenuCtx.fillRect(0,r.titleHeight,r.unitRosterWidth,r.unitRosterHeight),o.displayRosterTitle()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(58);t.decreaseSpentGold=r.decreaseSpentGold,t.increaseSpentGold=r.increaseSpentGold;var i=n(40);t.setTotalGold=i.setTotalGold},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(259);t.armyLayoutHeight=r.armyLayoutHeight,t.armyLayoutWidth=r.armyLayoutWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.armyLayoutHeight=r.CANVAS_HEIGHT-140,t.armyLayoutWidth=Math.round(r.MAP_WIDTH/3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(261);t.infoLayoutHeight=r.infoLayoutHeight,t.infoLayoutWidth=r.infoLayoutWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.infoLayoutHeight=r.CANVAS_HEIGHT-140,t.infoLayoutWidth=Math.round(r.MAP_WIDTH/3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(263);t.unitRosterHeight=r.unitRosterHeight,t.unitRosterWidth=r.unitRosterWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0);t.unitRosterHeight=r.CANVAS_HEIGHT-140,t.unitRosterWidth=Math.round(r.MAP_WIDTH/3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(265);t.startBattleStartY=r.startBattleStartY,t.startBattleHeight=r.startBattleHeight,t.startBattleWidth=r.startBattleWidth},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(108),o=n(109);t.startBattleStartY=o.titleHeight+i.infoLayoutHeight,t.startBattleHeight=r.CANVAS_HEIGHT-(o.titleHeight+i.infoLayoutHeight),t.startBattleWidth=r.MAP_WIDTH},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.titleHeight=70},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(41);t.changeBattleSettingsToTrue=r.changeBattleSettingsToTrue,t.changeUnitInfoToTrue=r.changeUnitInfoToTrue,t.showBattleSettings=r.showBattleSettings,t.showUnitInfo=r.showUnitInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7);t.changeToComputer=r.changeToComputer,t.changeToPlayer=r.changeToPlayer,t.side=r.side},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(59);t.disableStartBattleButton=r.disableStartBattleButton,t.enableStartBattleButton=r.enableStartBattleButton,t.startBattleAvailable=r.startBattleAvailable},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(110);t.changeHoveredUnit=r.changeHoveredUnit,t.hoveredUnit=r.hoveredUnit;var i=n(271);t.computerHasUnits=i.computerHasUnits,t.playerHasUnits=i.playerHasUnits},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.playerHasUnits=!1,t.computerHasUnits=!1},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(4),o=n(39),a=n(1),s=n(56),l=n(273);t.displayRosterUnits=function(e,n,u){void 0===e&&(e=0),void 0===n&&(n=60),void 0===u&&(u=i.titleHeight+60),e>=o.roster.length||a.loadImage(o.roster[e].imgSrc,function(i,a){r.mainMenuCtx.font="14px serif",r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText(o.roster[e].name,n+5,u),r.mainMenuCtx.drawImage(a,n,u+5,s.rosterImgWidth,s.rosterImgHeight),l.drawCoin(n+15,u+s.rosterImgHeight+15,5),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.fillText(o.roster[e].cost,n+25,u+s.rosterImgHeight+20),o.roster[e].x=n,o.roster[e].y=u,n=n+s.rosterImgWidth+15,2!==e&&5!==e&&8!==e&&11!==e||(n=60,u+=s.rosterImgHeight+45),e++,t.displayRosterUnits(e,n,u)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(274);t.drawCoin=r.drawCoin},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2);t.drawCoin=function(e,t,n){r.mainMenuCtx.beginPath(),r.mainMenuCtx.arc(e,t,n,0,2*Math.PI,!1),r.mainMenuCtx.fillStyle="#ffd700",r.mainMenuCtx.fill()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(57);t.displayRosterTitle=function(){i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="24px serif",i.mainMenuCtx.textAlign="left",i.mainMenuCtx.fillText("Roster",150,r.titleHeight+20),o.displayRosterUnits()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(25);t.drawRemoveIcon=function(e){var t=e.armyPosition.x+i.armyImgWidth,n=e.armyPosition.y,o=t-15,a=n+15,s=t-5,l=n+4,u=o,c=l,d=s,f=a;Math.round(i.armyImgWidth/4),Math.round(i.armyImgHeight/4);r.dragAndDropCanvasCtx.fillStyle="rgb(200, 0,0)",r.dragAndDropCanvasCtx.beginPath(),r.dragAndDropCanvasCtx.moveTo(o,a),r.dragAndDropCanvasCtx.lineTo(s,l),r.dragAndDropCanvasCtx.stroke(),r.dragAndDropCanvasCtx.beginPath(),r.dragAndDropCanvasCtx.fillStyle="red",r.dragAndDropCanvasCtx.moveTo(u,c),r.dragAndDropCanvasCtx.lineTo(d,f),r.dragAndDropCanvasCtx.stroke()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(114);t.isUnitShouldBeRemoved=r.isUnitShouldBeRemoved},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(279);t.onChooseUnitInArmy=r.onChooseUnitInArmy;var i=n(280);t.displayChosenUnits=i.displayChosenUnits,t.displayChosenUnitsTitle=i.displayChosenUnitsTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(7),i=n(2),o=n(0),a=n(60),s=n(113),l=n(14),u=n(25);t.onChooseUnitInArmy=function(e,t){for(var n=null,c=0,d="player"===r.side?l.playerArmy:l.computerArmy;c<d.length;c++){var f=d[c],h=f.armyPosition.x,g=h+u.armyImgWidth,y=f.armyPosition.y,v=y+u.armyImgHeight;e>=h&&e<g&&t>y&&t<v?n=f:a.selectedUnitInRoster||i.dragAndDropCanvasCtx.clearRect(0,0,o.MAP_WIDTH,o.CANVAS_HEIGHT)}n&&!a.selectedUnitInRoster&&s.drawRemoveIcon(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(4),o=n(111);t.displayChosenUnits=function(){r.mainMenuCtx.clearRect(i.unitRosterWidth,i.titleHeight,i.armyLayoutWidth,i.armyLayoutHeight),r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.unitRosterWidth,i.titleHeight,i.armyLayoutWidth,i.armyLayoutHeight),r.mainMenuCtx.strokeRect(i.unitRosterWidth,i.titleHeight,i.armyLayoutWidth,i.armyLayoutHeight),t.displayChosenUnitsTitle(),o.displayArmy()},t.displayChosenUnitsTitle=function(){r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Units",i.unitRosterWidth+150,i.titleHeight+20)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(115);t.drawMoneyBox=r.drawMoneyBox;var i=n(116);t.changeTotalGold=i.changeTotalGold,t.fillTotalGold=i.fillTotalGold,t.showTotalGold=i.showTotalGold},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(40),i=n(2),o=n(15);t.drawMoneyBox=function(e,t,n){n===r.totalGold?i.mainMenuCtx.fillStyle="#fff":i.mainMenuCtx.fillStyle="#cdd1d6",i.mainMenuCtx.fillRect(e,t,o.boxWidth,o.boxHeight),i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.strokeRect(e,t,o.boxWidth,o.boxHeight),i.mainMenuCtx.font="12px serif",i.mainMenuCtx.textAlign="left",i.mainMenuCtx.fillText(n,e+10,t+25)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.width=160,t.height=30,t.battleSettingsX=r.armyLayoutWidth+r.unitRosterWidth+50,t.battleSettingsY=r.titleHeight,t.unitInfoX=r.armyLayoutWidth+r.unitRosterWidth+50+t.width+20,t.unitInfoY=r.titleHeight},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(15),i=n(2),o=n(4),a=n(63),s=n(115),l=n(26);t.goldBoxes=[],t.changeTotalGold=function(e,n){for(var i=0,s=t.goldBoxes;i<s.length;i++){var u=s[i];e>=u.x&&e<u.x+r.boxWidth&&n>=u.y&&n<u.y+r.boxHeight&&(o.setTotalGold(u.gold),t.showTotalGold(),a.displayTitle(),l.isStartBattleAvailable())}},t.fillTotalGold=function(){t.goldBoxes=[];for(var e=r.goldBoxStartX,n=r.goldBoxStartY,i=0,o=r.goldOptions;i<o.length;i++){var a=o[i];t.goldBoxes.push({x:e,y:n,gold:a}),e+=r.boxWidth+5}},t.showTotalGold=function(){i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="24px serif",i.mainMenuCtx.textAlign="left",i.mainMenuCtx.fillText("Total Money:",r.startTotalMoneyTitleX,r.startTotalMoneyTitleY),i.mainMenuCtx.font="12px serif",t.fillTotalGold();for(var e=0,n=t.goldBoxes;e<n.length;e++){var o=n[e];s.drawMoneyBox(o.x,o.y,o.gold)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(286);t.onChooseComputer=r.onChooseComputer;var i=n(292);t.onChoosePlayer=i.onChoosePlayer},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(64),i=n(7),o=n(43),a=n(117);t.onChooseComputer=function(e,t){e>=r.computerSwitcherX0&&e<r.computerSwitcherX1&&t>=r.computerSwitcherY0&&t<r.computerSwitcherY1&&(i.changeToComputer(),a.displayChosenUnits(),o.displayComputer(),o.displayTitle())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.playerSwitcherX0=r.armyLayoutWidth,t.playerSwitcherX1=r.armyLayoutWidth+r.armyLayoutWidth/2,t.playerSwitcherY0=0,t.playerSwitcherY1=r.titleHeight/2,t.computerSwitcherX0=t.playerSwitcherX1,t.computerSwitcherX1=t.computerSwitcherX0+r.armyLayoutWidth/2,t.computerSwitcherY0=0,t.computerSwitcherY1=r.titleHeight/2,t.playerSwitcherWidth=r.armyLayoutWidth/2,t.computerSwitcherWidth=r.armyLayoutWidth/2,t.goldX=t.playerSwitcherX0+t.playerSwitcherWidth,t.goldY=r.titleHeight/2+25},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(7);t.displayComputer=function(){var e="#ccc";"computer"===o.side&&(e="#fff"),i.mainMenuCtx.fillStyle=e,i.mainMenuCtx.fillRect(r.unitRosterWidth+r.armyLayoutWidth/2,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.strokeRect(r.unitRosterWidth+r.armyLayoutWidth/2,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="28px serif",i.mainMenuCtx.fillText("Computer",r.armyLayoutWidth+360,r.titleHeight/2-10)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4),i=n(2),o=n(7);t.displayPlayer=function(){var e="#ccc";"player"===o.side&&(e="#fff"),i.mainMenuCtx.fillStyle=e,i.mainMenuCtx.fillRect(r.unitRosterWidth,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.strokeRect(r.unitRosterWidth,0,r.armyLayoutWidth/2,r.titleHeight/2),i.mainMenuCtx.fillStyle="#000",i.mainMenuCtx.font="28px serif",i.mainMenuCtx.fillText("Player",r.armyLayoutWidth+120,r.titleHeight/2-10)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(7),o=n(58),a=n(40),s=n(64);t.displayRemainGold=function(){var e;"computer"===i.side?e=o.computerSpentGold:"player"===i.side&&(e=o.playerSpentGold),e>a.totalGold?r.mainMenuCtx.fillStyle="red":r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.fillText(e+"/"+a.totalGold,s.goldX,s.goldY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(43),i=n(4),o=n(0),a=n(2);t.displayTitle=function(){a.mainMenuCtx.clearRect(0,0,o.MAP_WIDTH,i.titleHeight),a.mainMenuCtx.fillStyle="#2c2f33",a.mainMenuCtx.fillRect(0,0,o.MAP_WIDTH,i.titleHeight),a.mainMenuCtx.fillStyle="#cdd1d6",a.mainMenuCtx.font="38px serif",a.mainMenuCtx.textAlign="center",r.displayPlayer(),r.displayComputer(),r.displayRemainGold()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(64),i=n(7),o=n(43),a=n(4),s=n(117);t.onChoosePlayer=function(e,t){e>=a.unitRosterWidth&&e<r.playerSwitcherX1&&t>=r.playerSwitcherY0&&t<r.playerSwitcherY1&&(i.changeToPlayer(),s.displayChosenUnits(),o.displayPlayer(),o.displayTitle())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(14),i=n(58),o=n(40),a=n(4),s=n(118);t.isStartBattleAvailable=function(){var e=r.computerArmy.length,t=r.playerArmy.length,n=o.totalGold-i.computerSpentGold,l=o.totalGold-i.playerSpentGold;e<1||t<1?(a.disableStartBattleButton(),s.drawBottomLayout()):n<0||l<0?(a.disableStartBattleButton(),s.drawBottomLayout()):(a.enableStartBattleButton(),s.drawBottomLayout())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(119),i=n(26),o=n(26);t.drawBottomLayout=function(){r.fillLayout(),i.showStartBattleButton(),o.showText()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(65);t.isStartBattleButtonSelected=function(e,t){var n=r.startBattleButtonX,i=n+r.startBattleButtonWidth,o=r.startBattleButtonY,a=o+r.startBattleButtonHeight;return e>=n&&e<i&&t>=o&&t<a}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(4);t.startBattleButtonX=Math.round(r.startBattleWidth/3)+120,t.startBattleButtonY=r.startBattleStartY+15,t.startBattleButtonWidth=200,t.startBattleButtonHeight=40,t.startBattleTextX=t.startBattleButtonX+30,t.startBattleTextY=t.startBattleButtonY+30},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(59),o=n(65);t.showStartBattleButton=function(){var e;e=i.startBattleAvailable?"#fff":"#ccc",r.mainMenuCtx.fillStyle=e,r.mainMenuCtx.fillRect(o.startBattleButtonX,o.startBattleButtonY,o.startBattleButtonWidth,o.startBattleButtonHeight)},t.showText=function(){r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="32px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Start Battle",o.startBattleTextX,o.startBattleTextY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(299);t.onChooseBattleSettings=r.onChooseBattleSettings,t.onChooseInfo=r.onChooseInfo,t.onChooseUnitInfo=r.onChooseUnitInfo;var i=n(122);t.displayInfo=i.displayInfo;var o=n(123);t.battleSettingSwitcher=o.battleSettingSwitcher,t.showSwither=o.showSwither,t.unitInfoSwitcher=o.unitInfoSwitcher},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(120);t.onChooseBattleSettings=r.onChooseBattleSettings;var i=n(300);t.onChooseInfo=i.onChooseInfo;var o=n(121);t.onChooseUnitInfo=o.onChooseUnitInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(120),i=n(4),o=n(121),a=n(122);t.onChooseInfo=function(e,t){r.onChooseBattleSettings(e,t)&&(i.changeBattleSettingsToTrue(),a.displayInfo()),o.onChooseUnitInfo(e,t)&&(i.changeUnitInfoToTrue(),a.displayInfo())}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(4),o=n(123);t.displayInfo=function(){r.mainMenuCtx.clearRect(i.armyLayoutWidth+i.unitRosterWidth,i.titleHeight,i.infoLayoutWidth,i.infoLayoutHeight),r.mainMenuCtx.fillStyle="#cdd1d6",r.mainMenuCtx.fillRect(i.armyLayoutWidth+i.unitRosterWidth,i.titleHeight,i.infoLayoutWidth,i.infoLayoutHeight),o.showSwither()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(124),i=n(125),o=n(303),a=n(41),s=n(116);t.showSwither=function(){r.battleSettingSwitcher(),i.unitInfoSwitcher(),a.showBattleSettings?s.showTotalGold():o.unitInfo()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(304);t.unitInfo=r.unitInfo,t.displayUnitInfo=r.displayUnitInfo},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(62),o=n(62),a=n(110),s=n(305),l=["name","cost","type","health","speed","armour","range","mobility","meleeDamage","missileDamage","charge","visibility"];t.unitInfo=function(){s.displayTitle(),t.displayUnitInfo(a.hoveredUnit)},t.displayUnitInfo=function(e){if(o.setDefault(),r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",a.hoveredUnit)for(var t=0,n=l;t<n.length;t++){var s=n[t];r.mainMenuCtx.fillText(s,i.propertyStartX,i.propertyStartY),r.mainMenuCtx.fillText(e[s],i.valueStartX,i.valueStartY),o.changeY()}else r.mainMenuCtx.fillText("No unit selected",i.propertyStartX,i.propertyStartY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(306);t.displayTitle=r.displayTitle},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(2),i=n(15);t.displayTitle=function(){r.mainMenuCtx.fillStyle="#000",r.mainMenuCtx.font="24px serif",r.mainMenuCtx.textAlign="left",r.mainMenuCtx.fillText("Unit Info:",i.unitInfoTitleX,i.unitInfoTitleY)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(308);t.dragAndDrop=r.dragAndDrop},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(2),o=n(4),a=n(59),s=n(14),l=n(39),u=n(60),c=n(60),d=n(56),f=n(107),h=n(1),g=n(0),y=n(63),v=n(42),m=n(114),p=n(112),M=n(61),U=n(61),_=n(26),b=n(27);t.dragAndDrop=function(){r.dragAndDropCanvas.addEventListener("click",function(e){var n=e.offsetX,r=e.offsetY;if(U.changeTotalGold(n,r),M.onChooseInfo(n,r),y.onChoosePlayer(n,r),y.onChooseComputer(n,r),m.isUnitShouldBeRemoved(n,r)){var l=m.isUnitShouldBeRemoved(n,r);o.decreaseSpentGold(l.cost),s.removeUnitFromArmy(l),v.displayChosenUnits(),y.displayTitle(),i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT),_.isStartBattleAvailable()}if(a.startBattleAvailable&&_.isStartBattleButtonSelected(n,r)&&b.activateBattleMode(),c.selectedUnitInRoster)if(t.isUnitAddedToArmy(n,r)){l=t.isUnitAddedToArmy(n,r);s.addUnitToArmy(l),v.displayChosenUnits(),o.increaseSpentGold(l.cost),y.displayTitle(),i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT),_.isStartBattleAvailable()}else v.displayChosenUnits(),i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT);t.onChooseRoster(n,r)}),r.dragAndDropCanvas.addEventListener("mousemove",function(e){var n=e.offsetX,r=e.offsetY;if(t.onDragUnit(n,r),v.onChooseUnitInArmy(n,r),f.isUnitSelectedInRoster(n,r)){var i=f.isUnitSelectedInRoster(n,r);o.hoveredUnit?i.x!==o.hoveredUnit.x&&i.y!==o.hoveredUnit&&(o.changeHoveredUnit(i),M.displayInfo()):o.changeHoveredUnit(i),o.showUnitInfo||(o.changeUnitInfoToTrue(),M.displayInfo())}})},t.onChooseRoster=function(e,t){for(var n=null,r=d.rosterImgWidth,i=d.rosterImgHeight,a=0,s=l.roster;a<s.length;a++){var c=s[a],f=c.x,h=c.y;e>=f&&e<f+r&&t>=h&&t<h+i&&(n=c)}u.selectUnitInRoster(n),o.changeHoveredUnit(n),M.displayInfo()},t.onDragUnit=function(e,t){if(c.selectedUnitInRoster){var n=e-d.rosterImgWidth/2,r=t-d.rosterImgHeight/2;h.loadImage(c.selectedUnitInRoster.imgSrc,function(e,t){i.dragAndDropCanvasCtx.clearRect(0,0,g.MAP_WIDTH,g.CANVAS_HEIGHT),i.dragAndDropCanvasCtx.drawImage(t,n,r,d.rosterImgWidth,d.rosterImgHeight)})}},t.isUnitAddedToArmy=function(e,t){var n=v.armyImgWidth,r=v.armyImgHeight,i=p.emptyBox.x,o=p.emptyBox.y;return!p.emptyBox.filled&&e>=i&&e<i+n&&t>=o&&t<o+r?c.selectedUnitInRoster:null}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(26);t.isStartBattleAvailable=r.isStartBattleAvailable,t.isStartBattleButtonSelected=r.isStartBattleButtonSelected,t.showStartBattleButton=r.showStartBattleButton,t.showText=r.showText;var i=n(118);t.drawBottomLayout=i.drawBottomLayout,t.fillLayout=i.fillLayout;var o=n(65);t.startBattleButtonX=o.startBattleButtonX,t.startBattleButtonY=o.startBattleButtonY,t.startBattleButtonWidth=o.startBattleButtonWidth,t.startBattleButtonHeight=o.startBattleButtonHeight,t.startBattleTextX=o.startBattleTextX,t.startBattleTextY=o.startBattleTextY},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(311);t.activateBattleMode=r.activateBattleMode;var i=n(317);t.activateMainMenuMode=i.activateMainMenuMode},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(0),o=n(27),a=n(312),s=n(313),l=n(22),u=n(28),c=n(29),d=n(16),f=n(126),h=n(77);t.activateBattleMode=function(){f.drawLoadingCanvas(),i.setBattleMode().then(function(){a.clearMainMenu(),h.fillUnitToIconMap(),s.createArmy().then(function(){return l.loadUnitIcons()}).then(function(){r.dragAndDropCanvas.style.zIndex="0",r.mainMenu.style.zIndex="0",r.auxiliaryCanvas.style.zIndex="6",c.eventCanvas.style.zIndex="5",r.canvas.style.zIndex="4",u.pathCanvas.style.zIndex="3",r.terrain.style.zIndex="2",r.backgroundCanvas.style.zIndex="1",d.loadingCanvas.style.zIndex="0",o.launchGame()})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(0),i=n(2);t.clearMainMenu=function(){i.mainMenuCtx.clearRect(0,0,r.MAP_WIDTH,r.CANVAS_HEIGHT),i.dragAndDropCanvasCtx.clearRect(0,0,r.MAP_WIDTH,r.CANVAS_HEIGHT)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(314),i=n(316);t.createArmy=function(){return new Promise(function(e){r.createPlayerArmy().then(function(){return i.createComputerArmy()}),e()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(14),i=n(127),o=n(5),a=n(129),s=n(11);t.createPlayerArmy=function(){return new Promise(function(e){a.initializePlayerUnitsNodes().then(function(){for(var t=0,n=r.playerArmy;t<n.length;t++){var l=n[t],u=o.getRandomNode(a.playerUnitsNodes),c=l.name,d=u.x,f=u.y;s.createUnit(c,d,f,"player"),i.deleteNodeFromPlayerNodes(u)}e()})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(128);t.deleteNodeFromComputerNodes=r.deleteNodeFromComputerNodes;var i=n(129);t.deleteNodeFromPlayerNodes=i.deleteNodeFromPlayerNodes},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(14),i=n(127),o=n(5),a=n(128),s=n(11);t.createComputerArmy=function(){a.initializeComputerUnitsNodes().then(function(){for(var e=0,t=r.computerArmy;e<t.length;e++){var n=t[e],l=o.getRandomNode(a.computerUnitsNodes),u=n.name,c=l.x,d=l.y;s.createUnit(u,c,d,"computer"),i.deleteNodeFromComputerNodes(l)}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12),i=n(21),o=n(12),a=n(0),s=n(27),l=n(29),u=n(28),c=n(16);t.activateMainMenuMode=function(){r.dragAndDropCanvas.style.zIndex="6",r.mainMenu.style.zIndex="5",o.auxiliaryCanvas.style.zIndex="4",o.canvas.style.zIndex="3",o.terrain.style.zIndex="2",l.eventCanvas.style.zIndex="1",u.pathCanvas.style.zIndex="1",o.backgroundCanvas.style.zIndex="1",c.loadingCanvas.style.zIndex="1",i.clearMap(),a.setMainMenuMode(),s.launchGame()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,